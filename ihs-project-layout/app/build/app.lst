
app/build/release/app:     formato de ficheiro elf64-x86-64

Secções:
Idx Name          Tam.      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400318  0000000000400318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000040  0000000000400338  0000000000400338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400378  0000000000400378  00000378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  000000000040039c  000000000040039c  0000039c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000050  00000000004003c0  00000000004003c0  000003c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       00000870  0000000000400410  0000000000400410  00000410  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       00000af0  0000000000400c80  0000000000400c80  00000c80  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  000000b4  0000000000401770  0000000000401770  00001770  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 000000e0  0000000000401828  0000000000401828  00001828  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     00000108  0000000000401908  0000000000401908  00001908  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000750  0000000000401a10  0000000000401a10  00001a10  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000403000  0000000000403000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          000004f0  0000000000403020  0000000000403020  00003020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000043a2  0000000000403510  0000000000403510  00003510  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         0000000d  00000000004078b4  00000000004078b4  000078b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000518  0000000000408000  0000000000408000  00008000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 000000c4  0000000000408518  0000000000408518  00008518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000003cc  00000000004085e0  00000000004085e0  000085e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .gcc_except_table 00000314  00000000004089ac  00000000004089ac  000089ac  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .init_array   00000010  0000000000409cc8  0000000000409cc8  00008cc8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .fini_array   00000008  0000000000409cd8  0000000000409cd8  00008cd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data.rel.ro  000000d0  0000000000409ce0  0000000000409ce0  00008ce0  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 22 .dynamic      00000240  0000000000409db0  0000000000409db0  00008db0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got          00000010  0000000000409ff0  0000000000409ff0  00008ff0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .got.plt      00000288  000000000040a000  000000000040a000  00009000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .data         00000004  000000000040a288  000000000040a288  00009288  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 26 .bss          000001f0  000000000040a2c0  000000000040a2c0  0000928c  2**6
                  ALLOC
 27 .comment      0000002e  0000000000000000  0000000000000000  0000928c  2**0
                  CONTENTS, READONLY
 28 .gnu.build.attributes 00001cd4  000000000040c4b0  000000000040c4b0  000092bc  2**2
                  CONTENTS, READONLY, OCTETS
 29 .debug_aranges 00000090  0000000000000000  0000000000000000  0000af90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_info   0003a5e6  0000000000000000  0000000000000000  0000b020  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 31 .debug_abbrev 00001335  0000000000000000  0000000000000000  00045606  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_line   00005d91  0000000000000000  0000000000000000  0004693b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 33 .debug_str    00033fbc  0000000000000000  0000000000000000  0004c6cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 34 .debug_line_str 000007a8  0000000000000000  0000000000000000  00080688  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 35 .debug_loclists 0000f35b  0000000000000000  0000000000000000  00080e30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 36 .debug_rnglists 00002c92  0000000000000000  0000000000000000  0009018b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Desmontagem da secção .init:

0000000000403000 <_init>:
  403000:	f3 0f 1e fa          	endbr64 
  403004:	48 83 ec 08          	sub    $0x8,%rsp
  403008:	48 8b 05 e9 6f 00 00 	mov    0x6fe9(%rip),%rax        # 409ff8 <__gmon_start__@Base>
  40300f:	48 85 c0             	test   %rax,%rax
  403012:	74 02                	je     403016 <_init+0x16>
  403014:	ff d0                	call   *%rax
  403016:	48 83 c4 08          	add    $0x8,%rsp
  40301a:	c3                   	ret    

Desmontagem da secção .plt:

0000000000403020 <_ZNSo3putEc@plt-0x10>:
  403020:	ff 35 e2 6f 00 00    	push   0x6fe2(%rip)        # 40a008 <_GLOBAL_OFFSET_TABLE_+0x8>
  403026:	ff 25 e4 6f 00 00    	jmp    *0x6fe4(%rip)        # 40a010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000403030 <_ZNSo3putEc@plt>:
  403030:	ff 25 e2 6f 00 00    	jmp    *0x6fe2(%rip)        # 40a018 <_ZNSo3putEc@GLIBCXX_3.4>
  403036:	68 00 00 00 00       	push   $0x0
  40303b:	e9 e0 ff ff ff       	jmp    403020 <_init+0x20>

0000000000403040 <printf@plt>:
  403040:	ff 25 da 6f 00 00    	jmp    *0x6fda(%rip)        # 40a020 <printf@GLIBC_2.2.5>
  403046:	68 01 00 00 00       	push   $0x1
  40304b:	e9 d0 ff ff ff       	jmp    403020 <_init+0x20>

0000000000403050 <_ZN2sf4TimeC1Ev@plt>:
  403050:	ff 25 d2 6f 00 00    	jmp    *0x6fd2(%rip)        # 40a028 <_ZN2sf4TimeC1Ev@Base>
  403056:	68 02 00 00 00       	push   $0x2
  40305b:	e9 c0 ff ff ff       	jmp    403020 <_init+0x20>

0000000000403060 <_ZN2sf5ShapeD2Ev@plt>:
  403060:	ff 25 ca 6f 00 00    	jmp    *0x6fca(%rip)        # 40a030 <_ZN2sf5ShapeD2Ev@Base>
  403066:	68 03 00 00 00       	push   $0x3
  40306b:	e9 b0 ff ff ff       	jmp    403020 <_init+0x20>

0000000000403070 <_ZN2sf5MusicC1Ev@plt>:
  403070:	ff 25 c2 6f 00 00    	jmp    *0x6fc2(%rip)        # 40a038 <_ZN2sf5MusicC1Ev@Base>
  403076:	68 04 00 00 00       	push   $0x4
  40307b:	e9 a0 ff ff ff       	jmp    403020 <_init+0x20>

0000000000403080 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
  403080:	ff 25 ba 6f 00 00    	jmp    *0x6fba(%rip)        # 40a040 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@Base>
  403086:	68 05 00 00 00       	push   $0x5
  40308b:	e9 90 ff ff ff       	jmp    403020 <_init+0x20>

0000000000403090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
  403090:	ff 25 b2 6f 00 00    	jmp    *0x6fb2(%rip)        # 40a048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@GLIBCXX_3.4.21>
  403096:	68 06 00 00 00       	push   $0x6
  40309b:	e9 80 ff ff ff       	jmp    403020 <_init+0x20>

00000000004030a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>:
  4030a0:	ff 25 aa 6f 00 00    	jmp    *0x6faa(%rip)        # 40a050 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@Base>
  4030a6:	68 07 00 00 00       	push   $0x7
  4030ab:	e9 70 ff ff ff       	jmp    403020 <_init+0x20>

00000000004030b0 <_ZN2sf4FontC1Ev@plt>:
  4030b0:	ff 25 a2 6f 00 00    	jmp    *0x6fa2(%rip)        # 40a058 <_ZN2sf4FontC1Ev@Base>
  4030b6:	68 08 00 00 00       	push   $0x8
  4030bb:	e9 60 ff ff ff       	jmp    403020 <_init+0x20>

00000000004030c0 <_ZN2sf6StringC1Ej@plt>:
  4030c0:	ff 25 9a 6f 00 00    	jmp    *0x6f9a(%rip)        # 40a060 <_ZN2sf6StringC1Ej@Base>
  4030c6:	68 09 00 00 00       	push   $0x9
  4030cb:	e9 50 ff ff ff       	jmp    403020 <_init+0x20>

00000000004030d0 <_ZN2sfplERKNS_6StringES2_@plt>:
  4030d0:	ff 25 92 6f 00 00    	jmp    *0x6f92(%rip)        # 40a068 <_ZN2sfplERKNS_6StringES2_@Base>
  4030d6:	68 0a 00 00 00       	push   $0xa
  4030db:	e9 40 ff ff ff       	jmp    403020 <_init+0x20>

00000000004030e0 <write@plt>:
  4030e0:	ff 25 8a 6f 00 00    	jmp    *0x6f8a(%rip)        # 40a070 <write@GLIBC_2.2.5>
  4030e6:	68 0b 00 00 00       	push   $0xb
  4030eb:	e9 30 ff ff ff       	jmp    403020 <_init+0x20>

00000000004030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>:
  4030f0:	ff 25 82 6f 00 00    	jmp    *0x6f82(%rip)        # 40a078 <_ZN2sf6StringC1EPKcRKSt6locale@Base>
  4030f6:	68 0c 00 00 00       	push   $0xc
  4030fb:	e9 20 ff ff ff       	jmp    403020 <_init+0x20>

0000000000403100 <_ZN2sf5ColorC1Ehhhh@plt>:
  403100:	ff 25 7a 6f 00 00    	jmp    *0x6f7a(%rip)        # 40a080 <_ZN2sf5ColorC1Ehhhh@Base>
  403106:	68 0d 00 00 00       	push   $0xd
  40310b:	e9 10 ff ff ff       	jmp    403020 <_init+0x20>

0000000000403110 <strlen@plt>:
  403110:	ff 25 72 6f 00 00    	jmp    *0x6f72(%rip)        # 40a088 <strlen@GLIBC_2.2.5>
  403116:	68 0e 00 00 00       	push   $0xe
  40311b:	e9 00 ff ff ff       	jmp    403020 <_init+0x20>

0000000000403120 <_ZSt20__throw_length_errorPKc@plt>:
  403120:	ff 25 6a 6f 00 00    	jmp    *0x6f6a(%rip)        # 40a090 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
  403126:	68 0f 00 00 00       	push   $0xf
  40312b:	e9 f0 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403130 <_ZN2sf13TransformableD2Ev@plt>:
  403130:	ff 25 62 6f 00 00    	jmp    *0x6f62(%rip)        # 40a098 <_ZN2sf13TransformableD2Ev@Base>
  403136:	68 10 00 00 00       	push   $0x10
  40313b:	e9 e0 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403140 <_ZN2sf13Transformable11setPositionEff@plt>:
  403140:	ff 25 5a 6f 00 00    	jmp    *0x6f5a(%rip)        # 40a0a0 <_ZN2sf13Transformable11setPositionEff@Base>
  403146:	68 11 00 00 00       	push   $0x11
  40314b:	e9 d0 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403150 <_ZSt24__throw_invalid_argumentPKc@plt>:
  403150:	ff 25 52 6f 00 00    	jmp    *0x6f52(%rip)        # 40a0a8 <_ZSt24__throw_invalid_argumentPKc@GLIBCXX_3.4>
  403156:	68 12 00 00 00       	push   $0x12
  40315b:	e9 c0 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403160 <_ZN2sf7secondsEf@plt>:
  403160:	ff 25 4a 6f 00 00    	jmp    *0x6f4a(%rip)        # 40a0b0 <_ZN2sf7secondsEf@Base>
  403166:	68 13 00 00 00       	push   $0x13
  40316b:	e9 b0 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403170 <_ZNSo5flushEv@plt>:
  403170:	ff 25 42 6f 00 00    	jmp    *0x6f42(%rip)        # 40a0b8 <_ZNSo5flushEv@GLIBCXX_3.4>
  403176:	68 14 00 00 00       	push   $0x14
  40317b:	e9 a0 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403180 <_ZSt19__throw_logic_errorPKc@plt>:
  403180:	ff 25 3a 6f 00 00    	jmp    *0x6f3a(%rip)        # 40a0c0 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
  403186:	68 15 00 00 00       	push   $0x15
  40318b:	e9 90 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403190 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@plt>:
  403190:	ff 25 32 6f 00 00    	jmp    *0x6f32(%rip)        # 40a0c8 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@Base>
  403196:	68 16 00 00 00       	push   $0x16
  40319b:	e9 80 fe ff ff       	jmp    403020 <_init+0x20>

00000000004031a0 <open@plt>:
  4031a0:	ff 25 2a 6f 00 00    	jmp    *0x6f2a(%rip)        # 40a0d0 <open@GLIBC_2.2.5>
  4031a6:	68 17 00 00 00       	push   $0x17
  4031ab:	e9 70 fe ff ff       	jmp    403020 <_init+0x20>

00000000004031b0 <_ZN2sf9VideoModeC1Ejjj@plt>:
  4031b0:	ff 25 22 6f 00 00    	jmp    *0x6f22(%rip)        # 40a0d8 <_ZN2sf9VideoModeC1Ejjj@Base>
  4031b6:	68 18 00 00 00       	push   $0x18
  4031bb:	e9 60 fe ff ff       	jmp    403020 <_init+0x20>

00000000004031c0 <_ZN2sf6String6insertEmRKS0_@plt>:
  4031c0:	ff 25 1a 6f 00 00    	jmp    *0x6f1a(%rip)        # 40a0e0 <_ZN2sf6String6insertEmRKS0_@Base>
  4031c6:	68 19 00 00 00       	push   $0x19
  4031cb:	e9 50 fe ff ff       	jmp    403020 <_init+0x20>

00000000004031d0 <_ZN2sf11CircleShapeC1Efm@plt>:
  4031d0:	ff 25 12 6f 00 00    	jmp    *0x6f12(%rip)        # 40a0e8 <_ZN2sf11CircleShapeC1Efm@Base>
  4031d6:	68 1a 00 00 00       	push   $0x1a
  4031db:	e9 40 fe ff ff       	jmp    403020 <_init+0x20>

00000000004031e0 <memcpy@plt>:
  4031e0:	ff 25 0a 6f 00 00    	jmp    *0x6f0a(%rip)        # 40a0f0 <memcpy@GLIBC_2.14>
  4031e6:	68 1b 00 00 00       	push   $0x1b
  4031eb:	e9 30 fe ff ff       	jmp    403020 <_init+0x20>

00000000004031f0 <_ZN2sf6Window9pollEventERNS_5EventE@plt>:
  4031f0:	ff 25 02 6f 00 00    	jmp    *0x6f02(%rip)        # 40a0f8 <_ZN2sf6Window9pollEventERNS_5EventE@Base>
  4031f6:	68 1c 00 00 00       	push   $0x1c
  4031fb:	e9 20 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403200 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@plt>:
  403200:	ff 25 fa 6e 00 00    	jmp    *0x6efa(%rip)        # 40a100 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@Base>
  403206:	68 1d 00 00 00       	push   $0x1d
  40320b:	e9 10 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403210 <__cxa_atexit@plt>:
  403210:	ff 25 f2 6e 00 00    	jmp    *0x6ef2(%rip)        # 40a108 <__cxa_atexit@GLIBC_2.2.5>
  403216:	68 1e 00 00 00       	push   $0x1e
  40321b:	e9 00 fe ff ff       	jmp    403020 <_init+0x20>

0000000000403220 <_ZN2sf4Font12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
  403220:	ff 25 ea 6e 00 00    	jmp    *0x6eea(%rip)        # 40a110 <_ZN2sf4Font12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@Base>
  403226:	68 1f 00 00 00       	push   $0x1f
  40322b:	e9 f0 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403230 <_ZdlPvm@plt>:
  403230:	ff 25 e2 6e 00 00    	jmp    *0x6ee2(%rip)        # 40a118 <_ZdlPvm@CXXABI_1.3.9>
  403236:	68 20 00 00 00       	push   $0x20
  40323b:	e9 e0 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403240 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>:
  403240:	ff 25 da 6e 00 00    	jmp    *0x6eda(%rip)        # 40a120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@GLIBCXX_3.4.21>
  403246:	68 21 00 00 00       	push   $0x21
  40324b:	e9 d0 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403250 <_ZNK2sf6Window6isOpenEv@plt>:
  403250:	ff 25 d2 6e 00 00    	jmp    *0x6ed2(%rip)        # 40a128 <_ZNK2sf6Window6isOpenEv@Base>
  403256:	68 22 00 00 00       	push   $0x22
  40325b:	e9 c0 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403260 <_ZN2sf4TextC1Ev@plt>:
  403260:	ff 25 ca 6e 00 00    	jmp    *0x6eca(%rip)        # 40a130 <_ZN2sf4TextC1Ev@Base>
  403266:	68 23 00 00 00       	push   $0x23
  40326b:	e9 b0 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403270 <_ZN2sf4FontD1Ev@plt>:
  403270:	ff 25 c2 6e 00 00    	jmp    *0x6ec2(%rip)        # 40a138 <_ZN2sf4FontD1Ev@Base>
  403276:	68 24 00 00 00       	push   $0x24
  40327b:	e9 a0 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403280 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
  403280:	ff 25 ba 6e 00 00    	jmp    *0x6eba(%rip)        # 40a140 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@GLIBCXX_3.4.9>
  403286:	68 25 00 00 00       	push   $0x25
  40328b:	e9 90 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403290 <_ZNKSt5ctypeIcE13_M_widen_initEv@plt>:
  403290:	ff 25 b2 6e 00 00    	jmp    *0x6eb2(%rip)        # 40a148 <_ZNKSt5ctypeIcE13_M_widen_initEv@GLIBCXX_3.4.11>
  403296:	68 26 00 00 00       	push   $0x26
  40329b:	e9 80 fd ff ff       	jmp    403020 <_init+0x20>

00000000004032a0 <_ZN2sf6StringixEm@plt>:
  4032a0:	ff 25 aa 6e 00 00    	jmp    *0x6eaa(%rip)        # 40a150 <_ZN2sf6StringixEm@Base>
  4032a6:	68 27 00 00 00       	push   $0x27
  4032ab:	e9 70 fd ff ff       	jmp    403020 <_init+0x20>

00000000004032b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>:
  4032b0:	ff 25 a2 6e 00 00    	jmp    *0x6ea2(%rip)        # 40a158 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@GLIBCXX_3.4.21>
  4032b6:	68 28 00 00 00       	push   $0x28
  4032bb:	e9 60 fd ff ff       	jmp    403020 <_init+0x20>

00000000004032c0 <_ZN2sfgeENS_4TimeES0_@plt>:
  4032c0:	ff 25 9a 6e 00 00    	jmp    *0x6e9a(%rip)        # 40a160 <_ZN2sfgeENS_4TimeES0_@Base>
  4032c6:	68 29 00 00 00       	push   $0x29
  4032cb:	e9 50 fd ff ff       	jmp    403020 <_init+0x20>

00000000004032d0 <_ZN2sf6Window17setFramerateLimitEj@plt>:
  4032d0:	ff 25 92 6e 00 00    	jmp    *0x6e92(%rip)        # 40a168 <_ZN2sf6Window17setFramerateLimitEj@Base>
  4032d6:	68 2a 00 00 00       	push   $0x2a
  4032db:	e9 40 fd ff ff       	jmp    403020 <_init+0x20>

00000000004032e0 <_ZN2sf4Text7setFontERKNS_4FontE@plt>:
  4032e0:	ff 25 8a 6e 00 00    	jmp    *0x6e8a(%rip)        # 40a170 <_ZN2sf4Text7setFontERKNS_4FontE@Base>
  4032e6:	68 2b 00 00 00       	push   $0x2b
  4032eb:	e9 30 fd ff ff       	jmp    403020 <_init+0x20>

00000000004032f0 <_ZSt16__throw_bad_castv@plt>:
  4032f0:	ff 25 82 6e 00 00    	jmp    *0x6e82(%rip)        # 40a178 <_ZSt16__throw_bad_castv@GLIBCXX_3.4>
  4032f6:	68 2c 00 00 00       	push   $0x2c
  4032fb:	e9 20 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403300 <_ZN2sf6Window7displayEv@plt>:
  403300:	ff 25 7a 6e 00 00    	jmp    *0x6e7a(%rip)        # 40a180 <_ZN2sf6Window7displayEv@Base>
  403306:	68 2d 00 00 00       	push   $0x2d
  40330b:	e9 10 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403310 <_ZN2sf5ClockC1Ev@plt>:
  403310:	ff 25 72 6e 00 00    	jmp    *0x6e72(%rip)        # 40a188 <_ZN2sf5ClockC1Ev@Base>
  403316:	68 2e 00 00 00       	push   $0x2e
  40331b:	e9 00 fd ff ff       	jmp    403020 <_init+0x20>

0000000000403320 <_ZN2sf4Text16setCharacterSizeEj@plt>:
  403320:	ff 25 6a 6e 00 00    	jmp    *0x6e6a(%rip)        # 40a190 <_ZN2sf4Text16setCharacterSizeEj@Base>
  403326:	68 2f 00 00 00       	push   $0x2f
  40332b:	e9 f0 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403330 <ioctl@plt>:
  403330:	ff 25 62 6e 00 00    	jmp    *0x6e62(%rip)        # 40a198 <ioctl@GLIBC_2.2.5>
  403336:	68 30 00 00 00       	push   $0x30
  40333b:	e9 e0 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403340 <_ZNSt6localeD1Ev@plt>:
  403340:	ff 25 5a 6e 00 00    	jmp    *0x6e5a(%rip)        # 40a1a0 <_ZNSt6localeD1Ev@GLIBCXX_3.4>
  403346:	68 31 00 00 00       	push   $0x31
  40334b:	e9 d0 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403350 <fprintf@plt>:
  403350:	ff 25 52 6e 00 00    	jmp    *0x6e52(%rip)        # 40a1a8 <fprintf@GLIBC_2.2.5>
  403356:	68 32 00 00 00       	push   $0x32
  40335b:	e9 c0 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403360 <read@plt>:
  403360:	ff 25 4a 6e 00 00    	jmp    *0x6e4a(%rip)        # 40a1b0 <read@GLIBC_2.2.5>
  403366:	68 33 00 00 00       	push   $0x33
  40336b:	e9 b0 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403370 <_ZN2sf5MusicD1Ev@plt>:
  403370:	ff 25 42 6e 00 00    	jmp    *0x6e42(%rip)        # 40a1b8 <_ZN2sf5MusicD1Ev@Base>
  403376:	68 34 00 00 00       	push   $0x34
  40337b:	e9 a0 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403380 <_ZN2sf12RenderWindowC1ENS_9VideoModeERKNS_6StringEjRKNS_15ContextSettingsE@plt>:
  403380:	ff 25 3a 6e 00 00    	jmp    *0x6e3a(%rip)        # 40a1c0 <_ZN2sf12RenderWindowC1ENS_9VideoModeERKNS_6StringEjRKNS_15ContextSettingsE@Base>
  403386:	68 35 00 00 00       	push   $0x35
  40338b:	e9 90 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403390 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
  403390:	ff 25 32 6e 00 00    	jmp    *0x6e32(%rip)        # 40a1c8 <_ZSt24__throw_out_of_range_fmtPKcz@GLIBCXX_3.4.20>
  403396:	68 36 00 00 00       	push   $0x36
  40339b:	e9 80 fc ff ff       	jmp    403020 <_init+0x20>

00000000004033a0 <_ZNK2sf6String7getSizeEv@plt>:
  4033a0:	ff 25 2a 6e 00 00    	jmp    *0x6e2a(%rip)        # 40a1d0 <_ZNK2sf6String7getSizeEv@Base>
  4033a6:	68 37 00 00 00       	push   $0x37
  4033ab:	e9 70 fc ff ff       	jmp    403020 <_init+0x20>

00000000004033b0 <_ZNSt8ios_base4InitC1Ev@plt>:
  4033b0:	ff 25 22 6e 00 00    	jmp    *0x6e22(%rip)        # 40a1d8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
  4033b6:	68 38 00 00 00       	push   $0x38
  4033bb:	e9 60 fc ff ff       	jmp    403020 <_init+0x20>

00000000004033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
  4033c0:	ff 25 1a 6e 00 00    	jmp    *0x6e1a(%rip)        # 40a1e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@GLIBCXX_3.4.21>
  4033c6:	68 39 00 00 00       	push   $0x39
  4033cb:	e9 50 fc ff ff       	jmp    403020 <_init+0x20>

00000000004033d0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>:
  4033d0:	ff 25 12 6e 00 00    	jmp    *0x6e12(%rip)        # 40a1e8 <_ZNK2sf5Clock14getElapsedTimeEv@Base>
  4033d6:	68 3a 00 00 00       	push   $0x3a
  4033db:	e9 40 fc ff ff       	jmp    403020 <_init+0x20>

00000000004033e0 <_ZNK2sf4Text9getStringEv@plt>:
  4033e0:	ff 25 0a 6e 00 00    	jmp    *0x6e0a(%rip)        # 40a1f0 <_ZNK2sf4Text9getStringEv@Base>
  4033e6:	68 3b 00 00 00       	push   $0x3b
  4033eb:	e9 30 fc ff ff       	jmp    403020 <_init+0x20>

00000000004033f0 <_ZN2sfpLERNS_4TimeES0_@plt>:
  4033f0:	ff 25 02 6e 00 00    	jmp    *0x6e02(%rip)        # 40a1f8 <_ZN2sfpLERNS_4TimeES0_@Base>
  4033f6:	68 3c 00 00 00       	push   $0x3c
  4033fb:	e9 20 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403400 <_ZN2sf5Clock7restartEv@plt>:
  403400:	ff 25 fa 6d 00 00    	jmp    *0x6dfa(%rip)        # 40a200 <_ZN2sf5Clock7restartEv@Base>
  403406:	68 3d 00 00 00       	push   $0x3d
  40340b:	e9 10 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403410 <_ZN2sf11SoundStream4playEv@plt>:
  403410:	ff 25 f2 6d 00 00    	jmp    *0x6df2(%rip)        # 40a208 <_ZN2sf11SoundStream4playEv@Base>
  403416:	68 3e 00 00 00       	push   $0x3e
  40341b:	e9 00 fc ff ff       	jmp    403020 <_init+0x20>

0000000000403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>:
  403420:	ff 25 ea 6d 00 00    	jmp    *0x6dea(%rip)        # 40a210 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@Base>
  403426:	68 3f 00 00 00       	push   $0x3f
  40342b:	e9 f0 fb ff ff       	jmp    403020 <_init+0x20>

0000000000403430 <_ZN2sfmIERNS_4TimeES0_@plt>:
  403430:	ff 25 e2 6d 00 00    	jmp    *0x6de2(%rip)        # 40a218 <_ZN2sfmIERNS_4TimeES0_@Base>
  403436:	68 40 00 00 00       	push   $0x40
  40343b:	e9 e0 fb ff ff       	jmp    403020 <_init+0x20>

0000000000403440 <__gxx_personality_v0@plt>:
  403440:	ff 25 da 6d 00 00    	jmp    *0x6dda(%rip)        # 40a220 <__gxx_personality_v0@CXXABI_1.3>
  403446:	68 41 00 00 00       	push   $0x41
  40344b:	e9 d0 fb ff ff       	jmp    403020 <_init+0x20>

0000000000403450 <_ZN2sf6StringaSERKS0_@plt>:
  403450:	ff 25 d2 6d 00 00    	jmp    *0x6dd2(%rip)        # 40a228 <_ZN2sf6StringaSERKS0_@Base>
  403456:	68 42 00 00 00       	push   $0x42
  40345b:	e9 c0 fb ff ff       	jmp    403020 <_init+0x20>

0000000000403460 <_ZNK2sf4Time9asSecondsEv@plt>:
  403460:	ff 25 ca 6d 00 00    	jmp    *0x6dca(%rip)        # 40a230 <_ZNK2sf4Time9asSecondsEv@Base>
  403466:	68 43 00 00 00       	push   $0x43
  40346b:	e9 b0 fb ff ff       	jmp    403020 <_init+0x20>

0000000000403470 <_ZN2sf12RenderWindowD1Ev@plt>:
  403470:	ff 25 c2 6d 00 00    	jmp    *0x6dc2(%rip)        # 40a238 <_ZN2sf12RenderWindowD1Ev@Base>
  403476:	68 44 00 00 00       	push   $0x44
  40347b:	e9 a0 fb ff ff       	jmp    403020 <_init+0x20>

0000000000403480 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>:
  403480:	ff 25 ba 6d 00 00    	jmp    *0x6dba(%rip)        # 40a240 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@Base>
  403486:	68 45 00 00 00       	push   $0x45
  40348b:	e9 90 fb ff ff       	jmp    403020 <_init+0x20>

0000000000403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>:
  403490:	ff 25 b2 6d 00 00    	jmp    *0x6db2(%rip)        # 40a248 <_ZN2sf4Text9setStringERKNS_6StringE@Base>
  403496:	68 46 00 00 00       	push   $0x46
  40349b:	e9 80 fb ff ff       	jmp    403020 <_init+0x20>

00000000004034a0 <_Unwind_Resume@plt>:
  4034a0:	ff 25 aa 6d 00 00    	jmp    *0x6daa(%rip)        # 40a250 <_Unwind_Resume@GCC_3.0>
  4034a6:	68 47 00 00 00       	push   $0x47
  4034ab:	e9 70 fb ff ff       	jmp    403020 <_init+0x20>

00000000004034b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
  4034b0:	ff 25 a2 6d 00 00    	jmp    *0x6da2(%rip)        # 40a258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
  4034b6:	68 48 00 00 00       	push   $0x48
  4034bb:	e9 60 fb ff ff       	jmp    403020 <_init+0x20>

00000000004034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>:
  4034c0:	ff 25 9a 6d 00 00    	jmp    *0x6d9a(%rip)        # 40a260 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@Base>
  4034c6:	68 49 00 00 00       	push   $0x49
  4034cb:	e9 50 fb ff ff       	jmp    403020 <_init+0x20>

00000000004034d0 <_ZN2sf4Text12setFillColorERKNS_5ColorE@plt>:
  4034d0:	ff 25 92 6d 00 00    	jmp    *0x6d92(%rip)        # 40a268 <_ZN2sf4Text12setFillColorERKNS_5ColorE@Base>
  4034d6:	68 4a 00 00 00       	push   $0x4a
  4034db:	e9 40 fb ff ff       	jmp    403020 <_init+0x20>

00000000004034e0 <_ZN2sf6Window5closeEv@plt>:
  4034e0:	ff 25 8a 6d 00 00    	jmp    *0x6d8a(%rip)        # 40a270 <_ZN2sf6Window5closeEv@Base>
  4034e6:	68 4b 00 00 00       	push   $0x4b
  4034eb:	e9 30 fb ff ff       	jmp    403020 <_init+0x20>

00000000004034f0 <_ZNSt6localeC1Ev@plt>:
  4034f0:	ff 25 82 6d 00 00    	jmp    *0x6d82(%rip)        # 40a278 <_ZNSt6localeC1Ev@GLIBCXX_3.4>
  4034f6:	68 4c 00 00 00       	push   $0x4c
  4034fb:	e9 20 fb ff ff       	jmp    403020 <_init+0x20>

0000000000403500 <_ZNSt8ios_base4InitD1Ev@plt>:
  403500:	ff 25 7a 6d 00 00    	jmp    *0x6d7a(%rip)        # 40a280 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
  403506:	68 4d 00 00 00       	push   $0x4d
  40350b:	e9 10 fb ff ff       	jmp    403020 <_init+0x20>

Desmontagem da secção .text:

0000000000403510 <_Z17char_to_stringbitB5cxx11c.cold>:
      _M_length(size_type __length)
      { _M_string_length = __length; }

      pointer
      _M_data() const
      { return _M_dataplus._M_p; }
  403510:	49 8b 3c 24          	mov    (%r12),%rdi
      _M_create(size_type&, size_type);

      void
      _M_dispose()
      {
	if (!_M_is_local())
  403514:	48 39 fb             	cmp    %rdi,%rbx
  403517:	74 0e                	je     403527 <_Z17char_to_stringbitB5cxx11c.cold+0x17>
	  _M_destroy(_M_allocated_capacity);
      }

      void
      _M_destroy(size_type __size) throw()
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403519:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
  40351e:	48 83 c6 01          	add    $0x1,%rsi
# endif
			      std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	::operator delete(__p
  403522:	e8 09 fd ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403527:	48 89 ef             	mov    %rbp,%rdi
  40352a:	e8 71 ff ff ff       	call   4034a0 <_Unwind_Resume@plt>

000000000040352f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold>:
      { return _M_dataplus._M_p; }
  40352f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  403534:	4c 39 e7             	cmp    %r12,%rdi
  403537:	74 0e                	je     403547 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403539:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  40353e:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  403542:	e8 e9 fc ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403547:	48 8b 3c 24          	mov    (%rsp),%rdi
	if (!_M_is_local())
  40354b:	48 39 df             	cmp    %rbx,%rdi
  40354e:	74 0e                	je     40355e <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x2f>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403550:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  403555:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403559:	e8 d2 fc ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  40355e:	48 89 ef             	mov    %rbp,%rdi
  403561:	e8 3a ff ff ff       	call   4034a0 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  403566:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  40356b:	4c 39 e7             	cmp    %r12,%rdi
  40356e:	74 d7                	je     403547 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403570:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  403575:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  403579:	e8 b2 fc ff ff       	call   403230 <_ZdlPvm@plt>
  40357e:	eb c7                	jmp    403547 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { return _M_dataplus._M_p; }
  403580:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  403585:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  40358a:	48 39 c7             	cmp    %rax,%rdi
  40358d:	74 b8                	je     403547 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40358f:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  403594:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403598:	e8 93 fc ff ff       	call   403230 <_ZdlPvm@plt>
  40359d:	eb a8                	jmp    403547 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { return _M_dataplus._M_p; }
  40359f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4035a4:	4c 39 e7             	cmp    %r12,%rdi
  4035a7:	74 9e                	je     403547 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4035a9:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4035ae:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4035b2:	e8 79 fc ff ff       	call   403230 <_ZdlPvm@plt>
  4035b7:	eb 8e                	jmp    403547 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>

00000000004035b9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold>:
      { return _M_dataplus._M_p; }
  4035b9:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4035be:	4c 39 f7             	cmp    %r14,%rdi
  4035c1:	74 0e                	je     4035d1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4035c3:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4035c8:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4035cc:	e8 5f fc ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4035d1:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  4035d6:	48 39 ef             	cmp    %rbp,%rdi
  4035d9:	74 0e                	je     4035e9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x30>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4035db:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  4035e0:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4035e4:	e8 47 fc ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4035e9:	4c 89 e7             	mov    %r12,%rdi
  4035ec:	e8 af fe ff ff       	call   4034a0 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  4035f1:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4035f6:	4c 39 f7             	cmp    %r14,%rdi
  4035f9:	74 0e                	je     403609 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x50>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4035fb:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  403600:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  403604:	e8 27 fc ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403609:	48 89 ef             	mov    %rbp,%rdi
  40360c:	e8 8f fe ff ff       	call   4034a0 <_Unwind_Resume@plt>

0000000000403611 <main.cold>:
      { return _M_dataplus._M_p; }
  403611:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403618:	00 
	if (!_M_is_local())
  403619:	4c 39 e7             	cmp    %r12,%rdi
  40361c:	74 15                	je     403633 <main.cold+0x22>
	::operator delete(__p
  40361e:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403625:	00 
  403626:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40362d:	00 
  40362e:	e8 fd fb ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403633:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  40363a:	00 
	if (!_M_is_local())
  40363b:	4c 39 ff             	cmp    %r15,%rdi
  40363e:	74 11                	je     403651 <main.cold+0x40>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403640:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  403647:	00 
  403648:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40364c:	e8 df fb ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403651:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  403658:	00 
	if (!_M_is_local())
  403659:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  403660:	00 
  403661:	48 39 c7             	cmp    %rax,%rdi
  403664:	0f 85 22 03 00 00    	jne    40398c <main.cold+0x37b>
			{
				elapsedtime_text -= sf::seconds(.1f);
				if (typedtext.getSize() > 0)
				{
					text.setString(text.getString() + typedtext[0]);
					typedtext = typedtext.toAnsiString().substr(1);
  40366a:	4c 89 f7             	mov    %r14,%rdi
  40366d:	e8 ce fc ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  403672:	48 89 ef             	mov    %rbp,%rdi
  403675:	e8 c6 fc ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
      { return _M_dataplus._M_p; }
  40367a:	48 8b bc 24 f0 00 00 	mov    0xf0(%rsp),%rdi
  403681:	00 
	if (!_M_is_local())
  403682:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
  403689:	00 
  40368a:	48 39 c7             	cmp    %rax,%rdi
  40368d:	74 11                	je     4036a0 <main.cold+0x8f>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40368f:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
  403696:	00 
  403697:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40369b:	e8 90 fb ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4036a0:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
  4036a7:	00 
	if (!_M_is_local())
  4036a8:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
  4036af:	00 
  4036b0:	48 39 c7             	cmp    %rax,%rdi
  4036b3:	74 11                	je     4036c6 <main.cold+0xb5>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4036b5:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
  4036bc:	00 
  4036bd:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4036c1:	e8 6a fb ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4036c6:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
  4036cd:	00 
	if (!_M_is_local())
  4036ce:	48 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%rax
  4036d5:	00 
  4036d6:	48 39 c7             	cmp    %rax,%rdi
  4036d9:	74 15                	je     4036f0 <main.cold+0xdf>
  4036db:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
  4036e2:	00 
  4036e3:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4036ea:	00 
  4036eb:	e8 40 fb ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4036f0:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
  4036f7:	00 
	if (!_M_is_local())
  4036f8:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
  4036ff:	00 
  403700:	48 39 c7             	cmp    %rax,%rdi
  403703:	0f 85 99 02 00 00    	jne    4039a2 <main.cold+0x391>
			// Ih, entrou no vazio
		}
	}

	//close(fd);
}
  403709:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
  403710:	00 
  403711:	e8 5a fc ff ff       	call   403370 <_ZN2sf5MusicD1Ev@plt>
  403716:	48 8d bc 24 70 1e 00 	lea    0x1e70(%rsp),%rdi
  40371d:	00 
  40371e:	e8 ed 3e 00 00       	call   407610 <_ZN2sf4TextD1Ev>
  403723:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  40372a:	00 
  40372b:	e8 e0 3e 00 00       	call   407610 <_ZN2sf4TextD1Ev>
  403730:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  403737:	00 
  403738:	e8 d3 3e 00 00       	call   407610 <_ZN2sf4TextD1Ev>
  40373d:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
  403744:	00 
  403745:	48 89 dd             	mov    %rbx,%rbp
  403748:	e8 23 fb ff ff       	call   403270 <_ZN2sf4FontD1Ev@plt>
{
////////////////////////////////////////////////////////////
/// \brief Specialized shape representing a circle
///
////////////////////////////////////////////////////////////
class SFML_GRAPHICS_API CircleShape : public Shape
  40374d:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  403754:	00 
  403755:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  40375b:	48 8d bc 24 30 1a 00 	lea    0x1a30(%rsp),%rdi
  403762:	00 
  403763:	66 49 0f 6e c4       	movq   %r12,%xmm0
  403768:	0f 16 04 24          	movhps (%rsp),%xmm0
  40376c:	0f 29 84 24 30 1a 00 	movaps %xmm0,0x1a30(%rsp)
  403773:	00 
  403774:	e8 e7 f8 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  403779:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40377e:	48 8d bc 24 d0 18 00 	lea    0x18d0(%rsp),%rdi
  403785:	00 
  403786:	0f 16 04 24          	movhps (%rsp),%xmm0
  40378a:	0f 29 84 24 d0 18 00 	movaps %xmm0,0x18d0(%rsp)
  403791:	00 
  403792:	e8 c9 f8 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  403797:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40379c:	48 8d bc 24 70 17 00 	lea    0x1770(%rsp),%rdi
  4037a3:	00 
  4037a4:	0f 16 04 24          	movhps (%rsp),%xmm0
  4037a8:	0f 29 84 24 70 17 00 	movaps %xmm0,0x1770(%rsp)
  4037af:	00 
  4037b0:	e8 ab f8 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  4037b5:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4037ba:	48 8d bc 24 10 16 00 	lea    0x1610(%rsp),%rdi
  4037c1:	00 
  4037c2:	0f 16 04 24          	movhps (%rsp),%xmm0
  4037c6:	0f 29 84 24 10 16 00 	movaps %xmm0,0x1610(%rsp)
  4037cd:	00 
  4037ce:	e8 8d f8 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  4037d3:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4037d8:	48 8d bc 24 b0 14 00 	lea    0x14b0(%rsp),%rdi
  4037df:	00 
  4037e0:	0f 16 04 24          	movhps (%rsp),%xmm0
  4037e4:	0f 29 84 24 b0 14 00 	movaps %xmm0,0x14b0(%rsp)
  4037eb:	00 
  4037ec:	e8 6f f8 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  4037f1:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4037f6:	48 8d bc 24 50 13 00 	lea    0x1350(%rsp),%rdi
  4037fd:	00 
  4037fe:	0f 16 04 24          	movhps (%rsp),%xmm0
  403802:	0f 29 84 24 50 13 00 	movaps %xmm0,0x1350(%rsp)
  403809:	00 
  40380a:	e8 51 f8 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  40380f:	66 49 0f 6e c4       	movq   %r12,%xmm0
  403814:	48 8d bc 24 f0 11 00 	lea    0x11f0(%rsp),%rdi
  40381b:	00 
  40381c:	0f 16 04 24          	movhps (%rsp),%xmm0
  403820:	0f 29 84 24 f0 11 00 	movaps %xmm0,0x11f0(%rsp)
  403827:	00 
  403828:	e8 33 f8 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  40382d:	66 49 0f 6e c4       	movq   %r12,%xmm0
  403832:	48 8d bc 24 90 10 00 	lea    0x1090(%rsp),%rdi
  403839:	00 
  40383a:	0f 16 04 24          	movhps (%rsp),%xmm0
  40383e:	0f 29 84 24 90 10 00 	movaps %xmm0,0x1090(%rsp)
  403845:	00 
  403846:	e8 15 f8 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  40384b:	66 49 0f 6e c4       	movq   %r12,%xmm0
  403850:	48 8d bc 24 30 0f 00 	lea    0xf30(%rsp),%rdi
  403857:	00 
  403858:	0f 16 04 24          	movhps (%rsp),%xmm0
  40385c:	0f 29 84 24 30 0f 00 	movaps %xmm0,0xf30(%rsp)
  403863:	00 
  403864:	e8 f7 f7 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  403869:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40386e:	48 8d bc 24 d0 0d 00 	lea    0xdd0(%rsp),%rdi
  403875:	00 
  403876:	0f 16 04 24          	movhps (%rsp),%xmm0
  40387a:	0f 29 84 24 d0 0d 00 	movaps %xmm0,0xdd0(%rsp)
  403881:	00 
  403882:	e8 d9 f7 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  403887:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40388c:	48 8d bc 24 70 0c 00 	lea    0xc70(%rsp),%rdi
  403893:	00 
  403894:	0f 16 04 24          	movhps (%rsp),%xmm0
  403898:	0f 29 84 24 70 0c 00 	movaps %xmm0,0xc70(%rsp)
  40389f:	00 
  4038a0:	e8 bb f7 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  4038a5:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4038aa:	48 8d bc 24 10 0b 00 	lea    0xb10(%rsp),%rdi
  4038b1:	00 
  4038b2:	0f 16 04 24          	movhps (%rsp),%xmm0
  4038b6:	0f 29 84 24 10 0b 00 	movaps %xmm0,0xb10(%rsp)
  4038bd:	00 
  4038be:	e8 9d f7 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  4038c3:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4038c8:	48 8d bc 24 b0 09 00 	lea    0x9b0(%rsp),%rdi
  4038cf:	00 
  4038d0:	0f 16 04 24          	movhps (%rsp),%xmm0
  4038d4:	0f 29 84 24 b0 09 00 	movaps %xmm0,0x9b0(%rsp)
  4038db:	00 
  4038dc:	e8 7f f7 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  4038e1:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4038e6:	48 8d bc 24 50 08 00 	lea    0x850(%rsp),%rdi
  4038ed:	00 
  4038ee:	0f 16 04 24          	movhps (%rsp),%xmm0
  4038f2:	0f 29 84 24 50 08 00 	movaps %xmm0,0x850(%rsp)
  4038f9:	00 
  4038fa:	e8 61 f7 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  4038ff:	66 49 0f 6e c4       	movq   %r12,%xmm0
  403904:	48 8d bc 24 f0 06 00 	lea    0x6f0(%rsp),%rdi
  40390b:	00 
  40390c:	0f 16 04 24          	movhps (%rsp),%xmm0
  403910:	0f 29 84 24 f0 06 00 	movaps %xmm0,0x6f0(%rsp)
  403917:	00 
  403918:	e8 43 f7 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  40391d:	66 49 0f 6e c4       	movq   %r12,%xmm0
  403922:	48 8d bc 24 90 05 00 	lea    0x590(%rsp),%rdi
  403929:	00 
  40392a:	0f 16 04 24          	movhps (%rsp),%xmm0
  40392e:	0f 29 84 24 90 05 00 	movaps %xmm0,0x590(%rsp)
  403935:	00 
  403936:	e8 25 f7 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  40393b:	66 49 0f 6e c4       	movq   %r12,%xmm0
  403940:	48 8d bc 24 30 04 00 	lea    0x430(%rsp),%rdi
  403947:	00 
  403948:	0f 16 04 24          	movhps (%rsp),%xmm0
  40394c:	0f 29 84 24 30 04 00 	movaps %xmm0,0x430(%rsp)
  403953:	00 
  403954:	e8 07 f7 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  403959:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40395e:	48 8d bc 24 d0 02 00 	lea    0x2d0(%rsp),%rdi
  403965:	00 
  403966:	0f 16 04 24          	movhps (%rsp),%xmm0
  40396a:	0f 29 84 24 d0 02 00 	movaps %xmm0,0x2d0(%rsp)
  403971:	00 
  403972:	e8 e9 f6 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  403977:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  40397e:	00 
  40397f:	e8 ec fa ff ff       	call   403470 <_ZN2sf12RenderWindowD1Ev@plt>
  403984:	48 89 ef             	mov    %rbp,%rdi
  403987:	e8 14 fb ff ff       	call   4034a0 <_Unwind_Resume@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40398c:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  403993:	00 
  403994:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403998:	e8 93 f8 ff ff       	call   403230 <_ZdlPvm@plt>
  40399d:	e9 c8 fc ff ff       	jmp    40366a <main.cold+0x59>
  4039a2:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
  4039a9:	00 
  4039aa:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4039b1:	00 
  4039b2:	e8 79 f8 ff ff       	call   403230 <_ZdlPvm@plt>
  4039b7:	e9 4d fd ff ff       	jmp    403709 <main.cold+0xf8>
      { return _M_dataplus._M_p; }
  4039bc:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  4039c3:	00 
	if (!_M_is_local())
  4039c4:	4c 39 e7             	cmp    %r12,%rdi
  4039c7:	74 15                	je     4039de <main.cold+0x3cd>
  4039c9:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  4039d0:	00 
  4039d1:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4039d8:	00 
  4039d9:	e8 52 f8 ff ff       	call   403230 <_ZdlPvm@plt>
				typedtext.insert(0, "Quarta fase");
  4039de:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  4039e5:	00 
  4039e6:	e8 55 f9 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  4039eb:	e9 8a fc ff ff       	jmp    40367a <main.cold+0x69>
      { return _M_dataplus._M_p; }
  4039f0:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  4039f7:	00 
	if (!_M_is_local())
  4039f8:	4c 39 e7             	cmp    %r12,%rdi
  4039fb:	74 e1                	je     4039de <main.cold+0x3cd>
  4039fd:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403a04:	00 
  403a05:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403a0c:	00 
  403a0d:	e8 1e f8 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403a12:	eb ca                	jmp    4039de <main.cold+0x3cd>
      { return _M_dataplus._M_p; }
  403a14:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403a1b:	00 
	if (!_M_is_local())
  403a1c:	4c 39 e7             	cmp    %r12,%rdi
  403a1f:	74 15                	je     403a36 <main.cold+0x425>
  403a21:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403a28:	00 
  403a29:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403a30:	00 
  403a31:	e8 fa f7 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403a36:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  403a3d:	00 
	if (!_M_is_local())
  403a3e:	48 8d 84 24 40 01 00 	lea    0x140(%rsp),%rax
  403a45:	00 
  403a46:	48 39 c7             	cmp    %rax,%rdi
  403a49:	0f 84 2b fc ff ff    	je     40367a <main.cold+0x69>
  403a4f:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  403a56:	00 
  403a57:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403a5e:	00 
  403a5f:	e8 cc f7 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403a64:	e9 11 fc ff ff       	jmp    40367a <main.cold+0x69>
      { return _M_dataplus._M_p; }
  403a69:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403a70:	00 
	if (!_M_is_local())
  403a71:	48 8d 84 24 60 01 00 	lea    0x160(%rsp),%rax
  403a78:	00 
  403a79:	48 39 c7             	cmp    %rax,%rdi
  403a7c:	0f 84 87 fc ff ff    	je     403709 <main.cold+0xf8>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403a82:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403a89:	00 
  403a8a:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403a8e:	e8 9d f7 ff ff       	call   403230 <_ZdlPvm@plt>
  403a93:	e9 71 fc ff ff       	jmp    403709 <main.cold+0xf8>
      { return _M_dataplus._M_p; }
  403a98:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403a9f:	00 
	if (!_M_is_local())
  403aa0:	4c 39 e7             	cmp    %r12,%rdi
  403aa3:	74 15                	je     403aba <main.cold+0x4a9>
  403aa5:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403aac:	00 
  403aad:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403ab4:	00 
  403ab5:	e8 76 f7 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403aba:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  403ac1:	00 
	if (!_M_is_local())
  403ac2:	4c 39 ff             	cmp    %r15,%rdi
  403ac5:	74 11                	je     403ad8 <main.cold+0x4c7>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403ac7:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  403ace:	00 
  403acf:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403ad3:	e8 58 f7 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403ad8:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  403adf:	00 
	if (!_M_is_local())
  403ae0:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  403ae7:	00 
  403ae8:	48 39 c7             	cmp    %rax,%rdi
  403aeb:	0f 84 79 fb ff ff    	je     40366a <main.cold+0x59>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403af1:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  403af8:	00 
  403af9:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403afd:	e8 2e f7 ff ff       	call   403230 <_ZdlPvm@plt>
  403b02:	e9 63 fb ff ff       	jmp    40366a <main.cold+0x59>
      { return _M_dataplus._M_p; }
  403b07:	48 8b bc 24 70 1e 00 	mov    0x1e70(%rsp),%rdi
  403b0e:	00 
	if (!_M_is_local())
  403b0f:	48 8d 84 24 80 1e 00 	lea    0x1e80(%rsp),%rax
  403b16:	00 
  403b17:	48 39 c7             	cmp    %rax,%rdi
  403b1a:	74 15                	je     403b31 <main.cold+0x520>
  403b1c:	48 8b 84 24 80 1e 00 	mov    0x1e80(%rsp),%rax
  403b23:	00 
  403b24:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403b2b:	00 
  403b2c:	e8 ff f6 ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403b31:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  403b38:	00 
  403b39:	e8 02 f8 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  403b3e:	48 89 ef             	mov    %rbp,%rdi
  403b41:	e8 5a f9 ff ff       	call   4034a0 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  403b46:	48 8b bc 24 70 1e 00 	mov    0x1e70(%rsp),%rdi
  403b4d:	00 
	if (!_M_is_local())
  403b4e:	48 39 ef             	cmp    %rbp,%rdi
  403b51:	74 15                	je     403b68 <main.cold+0x557>
	::operator delete(__p
  403b53:	48 8b 84 24 80 1e 00 	mov    0x1e80(%rsp),%rax
  403b5a:	00 
  403b5b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403b62:	00 
  403b63:	e8 c8 f6 ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403b68:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  403b6f:	00 
  403b70:	e8 cb f7 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  403b75:	e9 c3 fb ff ff       	jmp    40373d <main.cold+0x12c>
      { return _M_dataplus._M_p; }
  403b7a:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403b81:	00 
	if (!_M_is_local())
  403b82:	4c 39 e7             	cmp    %r12,%rdi
  403b85:	74 15                	je     403b9c <main.cold+0x58b>
	::operator delete(__p
  403b87:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403b8e:	00 
  403b8f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403b96:	00 
  403b97:	e8 94 f6 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403b9c:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  403ba3:	00 
	if (!_M_is_local())
  403ba4:	48 39 df             	cmp    %rbx,%rdi
  403ba7:	75 5d                	jne    403c06 <main.cold+0x5f5>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403ba9:	4c 89 eb             	mov    %r13,%rbx
      { return _M_dataplus._M_p; }
  403bac:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  403bb3:	00 
	if (!_M_is_local())
  403bb4:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  403bbb:	00 
  403bbc:	48 39 c7             	cmp    %rax,%rdi
  403bbf:	0f 84 a5 fa ff ff    	je     40366a <main.cold+0x59>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403bc5:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  403bcc:	00 
  403bcd:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  403bd1:	e8 5a f6 ff ff       	call   403230 <_ZdlPvm@plt>
  403bd6:	e9 8f fa ff ff       	jmp    40366a <main.cold+0x59>
      { return _M_dataplus._M_p; }
  403bdb:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403be2:	00 
	if (!_M_is_local())
  403be3:	4c 39 e7             	cmp    %r12,%rdi
  403be6:	0f 84 f2 fd ff ff    	je     4039de <main.cold+0x3cd>
  403bec:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403bf3:	00 
  403bf4:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403bfb:	00 
  403bfc:	e8 2f f6 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403c01:	e9 d8 fd ff ff       	jmp    4039de <main.cold+0x3cd>
  403c06:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  403c0d:	00 
  403c0e:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403c12:	e8 19 f6 ff ff       	call   403230 <_ZdlPvm@plt>
  403c17:	eb 90                	jmp    403ba9 <main.cold+0x598>
      { return _M_dataplus._M_p; }
  403c19:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403c20:	00 
	if (!_M_is_local())
  403c21:	4c 39 e7             	cmp    %r12,%rdi
  403c24:	0f 84 b4 fd ff ff    	je     4039de <main.cold+0x3cd>
  403c2a:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403c31:	00 
  403c32:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403c39:	00 
  403c3a:	e8 f1 f5 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403c3f:	e9 9a fd ff ff       	jmp    4039de <main.cold+0x3cd>
      { return _M_dataplus._M_p; }
  403c44:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403c4b:	00 
	if (!_M_is_local())
  403c4c:	4c 39 e7             	cmp    %r12,%rdi
  403c4f:	0f 84 89 fd ff ff    	je     4039de <main.cold+0x3cd>
  403c55:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403c5c:	00 
  403c5d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403c64:	00 
  403c65:	e8 c6 f5 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403c6a:	e9 6f fd ff ff       	jmp    4039de <main.cold+0x3cd>
  403c6f:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  403c76:	00 
  403c77:	e8 c4 f6 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  403c7c:	e9 88 fa ff ff       	jmp    403709 <main.cold+0xf8>
  403c81:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  403c88:	00 
  403c89:	e8 b2 f6 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  403c8e:	e9 5d fa ff ff       	jmp    4036f0 <main.cold+0xdf>
      { return _M_dataplus._M_p; }
  403c93:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403c9a:	00 
	if (!_M_is_local())
  403c9b:	4c 39 e7             	cmp    %r12,%rdi
  403c9e:	0f 84 3a fd ff ff    	je     4039de <main.cold+0x3cd>
  403ca4:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403cab:	00 
  403cac:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403cb3:	00 
  403cb4:	e8 77 f5 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403cb9:	e9 20 fd ff ff       	jmp    4039de <main.cold+0x3cd>
      { return _M_dataplus._M_p; }
  403cbe:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403cc5:	00 
	if (!_M_is_local())
  403cc6:	4c 39 e7             	cmp    %r12,%rdi
  403cc9:	0f 84 0f fd ff ff    	je     4039de <main.cold+0x3cd>
  403ccf:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403cd6:	00 
  403cd7:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403cde:	00 
  403cdf:	e8 4c f5 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403ce4:	e9 f5 fc ff ff       	jmp    4039de <main.cold+0x3cd>
      { return _M_dataplus._M_p; }
  403ce9:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403cf0:	00 
	if (!_M_is_local())
  403cf1:	4c 39 e7             	cmp    %r12,%rdi
  403cf4:	0f 84 3c fd ff ff    	je     403a36 <main.cold+0x425>
  403cfa:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403d01:	00 
  403d02:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403d09:	00 
  403d0a:	e8 21 f5 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403d0f:	e9 22 fd ff ff       	jmp    403a36 <main.cold+0x425>
      { return _M_dataplus._M_p; }
  403d14:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403d1b:	00 
	if (!_M_is_local())
  403d1c:	4c 39 e7             	cmp    %r12,%rdi
  403d1f:	74 15                	je     403d36 <main.cold+0x725>
  403d21:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403d28:	00 
  403d29:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403d30:	00 
  403d31:	e8 fa f4 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403d36:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  403d3d:	00 
	if (!_M_is_local())
  403d3e:	4c 39 ef             	cmp    %r13,%rdi
  403d41:	74 11                	je     403d54 <main.cold+0x743>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403d43:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  403d4a:	00 
  403d4b:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403d4f:	e8 dc f4 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403d54:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  403d5b:	00 
	if (!_M_is_local())
  403d5c:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  403d63:	00 
  403d64:	48 39 c7             	cmp    %rax,%rdi
  403d67:	0f 84 fd f8 ff ff    	je     40366a <main.cold+0x59>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403d6d:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  403d74:	00 
  403d75:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403d79:	e8 b2 f4 ff ff       	call   403230 <_ZdlPvm@plt>
  403d7e:	e9 e7 f8 ff ff       	jmp    40366a <main.cold+0x59>
      { return _M_dataplus._M_p; }
  403d83:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  403d8a:	00 
	if (!_M_is_local())
  403d8b:	4c 39 f7             	cmp    %r14,%rdi
  403d8e:	0f 84 de f8 ff ff    	je     403672 <main.cold+0x61>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403d94:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  403d9b:	00 
  403d9c:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403da0:	e8 8b f4 ff ff       	call   403230 <_ZdlPvm@plt>
  403da5:	e9 c8 f8 ff ff       	jmp    403672 <main.cold+0x61>
      { return _M_dataplus._M_p; }
  403daa:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403db1:	00 
	if (!_M_is_local())
  403db2:	4c 39 e7             	cmp    %r12,%rdi
  403db5:	74 15                	je     403dcc <main.cold+0x7bb>
  403db7:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403dbe:	00 
  403dbf:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403dc6:	00 
  403dc7:	e8 64 f4 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403dcc:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  403dd3:	00 
	if (!_M_is_local())
  403dd4:	4c 39 ef             	cmp    %r13,%rdi
  403dd7:	74 11                	je     403dea <main.cold+0x7d9>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403dd9:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  403de0:	00 
  403de1:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403de5:	e8 46 f4 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403dea:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  403df1:	00 
	if (!_M_is_local())
  403df2:	4c 39 f7             	cmp    %r14,%rdi
  403df5:	0f 84 77 f8 ff ff    	je     403672 <main.cold+0x61>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403dfb:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  403e02:	00 
  403e03:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403e07:	e8 24 f4 ff ff       	call   403230 <_ZdlPvm@plt>
  403e0c:	e9 61 f8 ff ff       	jmp    403672 <main.cold+0x61>
      { return _M_dataplus._M_p; }
  403e11:	48 8b bc 24 00 02 00 	mov    0x200(%rsp),%rdi
  403e18:	00 
	if (!_M_is_local())
  403e19:	48 8d 84 24 10 02 00 	lea    0x210(%rsp),%rax
  403e20:	00 
  403e21:	48 39 c7             	cmp    %rax,%rdi
  403e24:	74 15                	je     403e3b <main.cold+0x82a>
  403e26:	48 8b 84 24 10 02 00 	mov    0x210(%rsp),%rax
  403e2d:	00 
  403e2e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403e35:	00 
  403e36:	e8 f5 f3 ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403e3b:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  403e42:	00 
  403e43:	e8 f8 f4 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  403e48:	e9 d6 f8 ff ff       	jmp    403723 <main.cold+0x112>
      { return _M_dataplus._M_p; }
  403e4d:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403e54:	00 
	if (!_M_is_local())
  403e55:	4c 39 e7             	cmp    %r12,%rdi
  403e58:	0f 84 d8 fb ff ff    	je     403a36 <main.cold+0x425>
	::operator delete(__p
  403e5e:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403e65:	00 
  403e66:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403e6d:	00 
  403e6e:	e8 bd f3 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403e73:	e9 be fb ff ff       	jmp    403a36 <main.cold+0x425>
      { return _M_dataplus._M_p; }
  403e78:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403e7f:	00 
	if (!_M_is_local())
  403e80:	4c 39 e7             	cmp    %r12,%rdi
  403e83:	0f 84 ad fb ff ff    	je     403a36 <main.cold+0x425>
  403e89:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403e90:	00 
  403e91:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403e98:	00 
  403e99:	e8 92 f3 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403e9e:	e9 93 fb ff ff       	jmp    403a36 <main.cold+0x425>
      { return _M_dataplus._M_p; }
  403ea3:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403eaa:	00 
	if (!_M_is_local())
  403eab:	4c 39 e7             	cmp    %r12,%rdi
  403eae:	74 15                	je     403ec5 <main.cold+0x8b4>
  403eb0:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403eb7:	00 
  403eb8:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403ebf:	00 
  403ec0:	e8 6b f3 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403ec5:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  403ecc:	00 
	if (!_M_is_local())
  403ecd:	4c 39 ff             	cmp    %r15,%rdi
  403ed0:	74 11                	je     403ee3 <main.cold+0x8d2>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403ed2:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  403ed9:	00 
  403eda:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403ede:	e8 4d f3 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403ee3:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  403eea:	00 
	if (!_M_is_local())
  403eeb:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  403ef2:	00 
  403ef3:	48 39 c7             	cmp    %rax,%rdi
  403ef6:	0f 84 6e f7 ff ff    	je     40366a <main.cold+0x59>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403efc:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  403f03:	00 
  403f04:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403f08:	e8 23 f3 ff ff       	call   403230 <_ZdlPvm@plt>
  403f0d:	e9 58 f7 ff ff       	jmp    40366a <main.cold+0x59>
      { return _M_dataplus._M_p; }
  403f12:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403f19:	00 
	if (!_M_is_local())
  403f1a:	4c 39 e7             	cmp    %r12,%rdi
  403f1d:	0f 84 13 fb ff ff    	je     403a36 <main.cold+0x425>
  403f23:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403f2a:	00 
  403f2b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403f32:	00 
  403f33:	e8 f8 f2 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403f38:	e9 f9 fa ff ff       	jmp    403a36 <main.cold+0x425>
      { return _M_dataplus._M_p; }
  403f3d:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  403f44:	00 
	if (!_M_is_local())
  403f45:	4c 39 e7             	cmp    %r12,%rdi
  403f48:	0f 84 90 fa ff ff    	je     4039de <main.cold+0x3cd>
  403f4e:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  403f55:	00 
  403f56:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403f5d:	00 
  403f5e:	e8 cd f2 ff ff       	call   403230 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403f63:	e9 76 fa ff ff       	jmp    4039de <main.cold+0x3cd>
      { return _M_dataplus._M_p; }
  403f68:	48 8b bc 24 70 1e 00 	mov    0x1e70(%rsp),%rdi
  403f6f:	00 
	if (!_M_is_local())
  403f70:	48 39 ef             	cmp    %rbp,%rdi
  403f73:	0f 84 c4 f7 ff ff    	je     40373d <main.cold+0x12c>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403f79:	48 8b 84 24 80 1e 00 	mov    0x1e80(%rsp),%rax
  403f80:	00 
  403f81:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403f85:	e8 a6 f2 ff ff       	call   403230 <_ZdlPvm@plt>
  403f8a:	e9 ae f7 ff ff       	jmp    40373d <main.cold+0x12c>

0000000000403f8f <.annobin_abi_note.c.exit>:
  403f8f:	90                   	nop

0000000000403f90 <_GLOBAL__sub_I__Z17char_to_stringbitB5cxx11c>:
}
  403f90:	48 83 ec 08          	sub    $0x8,%rsp
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
  403f94:	bf ad a4 40 00       	mov    $0x40a4ad,%edi
  403f99:	e8 12 f4 ff ff       	call   4033b0 <_ZNSt8ios_base4InitC1Ev@plt>
  403f9e:	ba 08 80 40 00       	mov    $0x408008,%edx
  403fa3:	be ad a4 40 00       	mov    $0x40a4ad,%esi
  403fa8:	bf 00 35 40 00       	mov    $0x403500,%edi
  403fad:	48 83 c4 08          	add    $0x8,%rsp
  403fb1:	e9 5a f2 ff ff       	jmp    403210 <__cxa_atexit@plt>
  403fb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  403fbd:	00 00 00 

0000000000403fc0 <main>:
{
  403fc0:	41 57                	push   %r15
  403fc2:	41 56                	push   %r14
  403fc4:	41 55                	push   %r13
  403fc6:	41 54                	push   %r12
  403fc8:	55                   	push   %rbp
  403fc9:	53                   	push   %rbx
  403fca:	48 89 f3             	mov    %rsi,%rbx
  403fcd:	48 81 ec f8 21 00 00 	sub    $0x21f8,%rsp
	if(argc < 2){
  403fd4:	83 ff 01             	cmp    $0x1,%edi
  403fd7:	0f 8e a7 21 00 00    	jle    406184 <main+0x21c4>
	if((fd = open(argv[1], O_RDWR)) < 0){
  403fdd:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  403fe1:	31 c0                	xor    %eax,%eax
  403fe3:	be 02 00 00 00       	mov    $0x2,%esi
  403fe8:	e8 b3 f1 ff ff       	call   4031a0 <open@plt>
  403fed:	89 44 24 18          	mov    %eax,0x18(%rsp)
  403ff1:	85 c0                	test   %eax,%eax
  403ff3:	0f 88 e8 22 00 00    	js     4062e1 <main+0x2321>
	sf::VideoMode videomode(800, 600);
  403ff9:	ba 58 02 00 00       	mov    $0x258,%edx
  403ffe:	be 20 03 00 00       	mov    $0x320,%esi
  404003:	b9 20 00 00 00       	mov    $0x20,%ecx
  404008:	48 8d 7c 24 64       	lea    0x64(%rsp),%rdi
  40400d:	e8 9e f1 ff ff       	call   4031b0 <_ZN2sf9VideoModeC1Ejjj@plt>
    /// \param attributes   Attribute flags of the context
    /// \param sRgb         sRGB capable framebuffer
    ///
    ////////////////////////////////////////////////////////////
    explicit ContextSettings(unsigned int depth = 0, unsigned int stencil = 0, unsigned int antialiasing = 0, unsigned int major = 1, unsigned int minor = 1, unsigned int attributes = Default, bool sRgb = false) :
    depthBits        (depth),
  404012:	66 0f 6f 05 b6 44 00 	movdqa 0x44b6(%rip),%xmm0        # 4084d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xf0>
  404019:	00 
    stencilBits      (stencil),
    antialiasingLevel(antialiasing),
    majorVersion     (major),
    minorVersion     (minor),
  40401a:	48 8b 05 97 44 00 00 	mov    0x4497(%rip),%rax        # 4084b8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd8>
	sf::RenderWindow window(videomode, "Project IHS", sf::Style::Titlebar | sf::Style::Default); //close button and not resizable
  404021:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  404028:	00 
    attributeFlags   (attributes),
    sRgbCapable      (sRgb)
  404029:	c6 84 24 18 1d 00 00 	movb   $0x0,0x1d18(%rsp)
  404030:	00 
    minorVersion     (minor),
  404031:	48 89 84 24 10 1d 00 	mov    %rax,0x1d10(%rsp)
  404038:	00 
    depthBits        (depth),
  404039:	0f 29 84 24 00 1d 00 	movaps %xmm0,0x1d00(%rsp)
  404040:	00 
  404041:	e8 aa f4 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  404046:	48 8d 94 24 90 1b 00 	lea    0x1b90(%rsp),%rdx
  40404d:	00 
  40404e:	be 9a 80 40 00       	mov    $0x40809a,%esi
  404053:	48 8d bc 24 70 1e 00 	lea    0x1e70(%rsp),%rdi
  40405a:	00 
  40405b:	e8 90 f0 ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404060:	48 8b 74 24 64       	mov    0x64(%rsp),%rsi
  404065:	8b 54 24 6c          	mov    0x6c(%rsp),%edx
  404069:	4c 8d 8c 24 00 1d 00 	lea    0x1d00(%rsp),%r9
  404070:	00 
  404071:	41 b8 07 00 00 00    	mov    $0x7,%r8d
  404077:	48 8d 8c 24 70 1e 00 	lea    0x1e70(%rsp),%rcx
  40407e:	00 
  40407f:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  404086:	00 
  404087:	e8 f4 f2 ff ff       	call   403380 <_ZN2sf12RenderWindowC1ENS_9VideoModeERKNS_6StringEjRKNS_15ContextSettingsE@plt>
      { return _M_dataplus._M_p; }
  40408c:	48 8b bc 24 70 1e 00 	mov    0x1e70(%rsp),%rdi
  404093:	00 
	if (!_M_is_local())
  404094:	48 8d ac 24 80 1e 00 	lea    0x1e80(%rsp),%rbp
  40409b:	00 
  40409c:	48 39 ef             	cmp    %rbp,%rdi
  40409f:	74 15                	je     4040b6 <main+0xf6>
  4040a1:	48 8b 84 24 80 1e 00 	mov    0x1e80(%rsp),%rax
  4040a8:	00 
  4040a9:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4040b0:	00 
  4040b1:	e8 7a f1 ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4040b6:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  4040bd:	00 
  4040be:	e8 7d f2 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
	sf::CircleShape square1(30, 4);
  4040c3:	f3 0f 10 05 15 44 00 	movss  0x4415(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  4040ca:	00 
  4040cb:	be 04 00 00 00       	mov    $0x4,%esi
  4040d0:	48 8d bc 24 d0 02 00 	lea    0x2d0(%rsp),%rdi
  4040d7:	00 
  4040d8:	e8 f3 f0 ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square1.setFillColor(sf::Color::Magenta);
  4040dd:	be 90 a4 40 00       	mov    $0x40a490,%esi
  4040e2:	48 8d bc 24 d0 02 00 	lea    0x2d0(%rsp),%rdi
  4040e9:	00 
  4040ea:	e8 d1 f3 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square1.setPosition(20.f, 50.f);
  4040ef:	f3 0f 10 0d ed 43 00 	movss  0x43ed(%rip),%xmm1        # 4084e4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x104>
  4040f6:	00 
  4040f7:	f3 0f 10 05 e9 43 00 	movss  0x43e9(%rip),%xmm0        # 4084e8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x108>
  4040fe:	00 
  4040ff:	48 8d bc 24 d8 02 00 	lea    0x2d8(%rsp),%rdi
  404106:	00 
  404107:	e8 34 f0 ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square2(30, 4);
  40410c:	f3 0f 10 05 cc 43 00 	movss  0x43cc(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  404113:	00 
  404114:	be 04 00 00 00       	mov    $0x4,%esi
  404119:	48 8d bc 24 30 04 00 	lea    0x430(%rsp),%rdi
  404120:	00 
  404121:	e8 aa f0 ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square2.setFillColor(sf::Color::Magenta);
  404126:	be 90 a4 40 00       	mov    $0x40a490,%esi
  40412b:	48 8d bc 24 30 04 00 	lea    0x430(%rsp),%rdi
  404132:	00 
  404133:	e8 88 f3 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square2.setPosition(100.f, 50.f);
  404138:	f3 0f 10 0d a4 43 00 	movss  0x43a4(%rip),%xmm1        # 4084e4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x104>
  40413f:	00 
  404140:	f3 0f 10 05 a4 43 00 	movss  0x43a4(%rip),%xmm0        # 4084ec <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x10c>
  404147:	00 
  404148:	48 8d bc 24 38 04 00 	lea    0x438(%rsp),%rdi
  40414f:	00 
  404150:	e8 eb ef ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square3(30, 4);
  404155:	f3 0f 10 05 83 43 00 	movss  0x4383(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  40415c:	00 
  40415d:	be 04 00 00 00       	mov    $0x4,%esi
  404162:	48 8d bc 24 90 05 00 	lea    0x590(%rsp),%rdi
  404169:	00 
  40416a:	e8 61 f0 ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square3.setFillColor(sf::Color::Blue);
  40416f:	be a8 a4 40 00       	mov    $0x40a4a8,%esi
  404174:	48 8d bc 24 90 05 00 	lea    0x590(%rsp),%rdi
  40417b:	00 
  40417c:	e8 3f f3 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square3.setPosition(180.f, 50.f);
  404181:	f3 0f 10 0d 5b 43 00 	movss  0x435b(%rip),%xmm1        # 4084e4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x104>
  404188:	00 
  404189:	f3 0f 10 05 5f 43 00 	movss  0x435f(%rip),%xmm0        # 4084f0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x110>
  404190:	00 
  404191:	48 8d bc 24 98 05 00 	lea    0x598(%rsp),%rdi
  404198:	00 
  404199:	e8 a2 ef ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square4(30, 4);
  40419e:	f3 0f 10 05 3a 43 00 	movss  0x433a(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  4041a5:	00 
  4041a6:	be 04 00 00 00       	mov    $0x4,%esi
  4041ab:	48 8d bc 24 f0 06 00 	lea    0x6f0(%rsp),%rdi
  4041b2:	00 
  4041b3:	e8 18 f0 ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square4.setFillColor(sf::Color::Magenta);
  4041b8:	be 90 a4 40 00       	mov    $0x40a490,%esi
  4041bd:	48 8d bc 24 f0 06 00 	lea    0x6f0(%rsp),%rdi
  4041c4:	00 
  4041c5:	e8 f6 f2 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square4.setPosition(20.f, 120.f);
  4041ca:	f3 0f 10 0d 22 43 00 	movss  0x4322(%rip),%xmm1        # 4084f4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x114>
  4041d1:	00 
  4041d2:	f3 0f 10 05 0e 43 00 	movss  0x430e(%rip),%xmm0        # 4084e8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x108>
  4041d9:	00 
  4041da:	48 8d bc 24 f8 06 00 	lea    0x6f8(%rsp),%rdi
  4041e1:	00 
  4041e2:	e8 59 ef ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square5(30, 4);
  4041e7:	f3 0f 10 05 f1 42 00 	movss  0x42f1(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  4041ee:	00 
  4041ef:	be 04 00 00 00       	mov    $0x4,%esi
  4041f4:	48 8d bc 24 50 08 00 	lea    0x850(%rsp),%rdi
  4041fb:	00 
  4041fc:	e8 cf ef ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square5.setFillColor(sf::Color::Blue);
  404201:	be a8 a4 40 00       	mov    $0x40a4a8,%esi
  404206:	48 8d bc 24 50 08 00 	lea    0x850(%rsp),%rdi
  40420d:	00 
  40420e:	e8 ad f2 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square5.setPosition(100.f, 120.f);
  404213:	f3 0f 10 0d d9 42 00 	movss  0x42d9(%rip),%xmm1        # 4084f4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x114>
  40421a:	00 
  40421b:	f3 0f 10 05 c9 42 00 	movss  0x42c9(%rip),%xmm0        # 4084ec <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x10c>
  404222:	00 
  404223:	48 8d bc 24 58 08 00 	lea    0x858(%rsp),%rdi
  40422a:	00 
  40422b:	e8 10 ef ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square6(30, 4);
  404230:	f3 0f 10 05 a8 42 00 	movss  0x42a8(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  404237:	00 
  404238:	be 04 00 00 00       	mov    $0x4,%esi
  40423d:	48 8d bc 24 b0 09 00 	lea    0x9b0(%rsp),%rdi
  404244:	00 
  404245:	e8 86 ef ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square6.setFillColor(sf::Color::Magenta);
  40424a:	be 90 a4 40 00       	mov    $0x40a490,%esi
  40424f:	48 8d bc 24 b0 09 00 	lea    0x9b0(%rsp),%rdi
  404256:	00 
  404257:	e8 64 f2 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square6.setPosition(180.f, 120.f);
  40425c:	f3 0f 10 0d 90 42 00 	movss  0x4290(%rip),%xmm1        # 4084f4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x114>
  404263:	00 
  404264:	f3 0f 10 05 84 42 00 	movss  0x4284(%rip),%xmm0        # 4084f0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x110>
  40426b:	00 
  40426c:	48 8d bc 24 b8 09 00 	lea    0x9b8(%rsp),%rdi
  404273:	00 
  404274:	e8 c7 ee ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square7(30, 4);
  404279:	f3 0f 10 05 5f 42 00 	movss  0x425f(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  404280:	00 
  404281:	be 04 00 00 00       	mov    $0x4,%esi
  404286:	48 8d bc 24 10 0b 00 	lea    0xb10(%rsp),%rdi
  40428d:	00 
  40428e:	e8 3d ef ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square7.setFillColor(sf::Color::Blue);
  404293:	be a8 a4 40 00       	mov    $0x40a4a8,%esi
  404298:	48 8d bc 24 10 0b 00 	lea    0xb10(%rsp),%rdi
  40429f:	00 
  4042a0:	e8 1b f2 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square7.setPosition(20.f, 190.f);
  4042a5:	f3 0f 10 0d 4b 42 00 	movss  0x424b(%rip),%xmm1        # 4084f8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x118>
  4042ac:	00 
  4042ad:	f3 0f 10 05 33 42 00 	movss  0x4233(%rip),%xmm0        # 4084e8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x108>
  4042b4:	00 
  4042b5:	48 8d bc 24 18 0b 00 	lea    0xb18(%rsp),%rdi
  4042bc:	00 
  4042bd:	e8 7e ee ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square8(30, 4);
  4042c2:	f3 0f 10 05 16 42 00 	movss  0x4216(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  4042c9:	00 
  4042ca:	be 04 00 00 00       	mov    $0x4,%esi
  4042cf:	48 8d bc 24 70 0c 00 	lea    0xc70(%rsp),%rdi
  4042d6:	00 
  4042d7:	e8 f4 ee ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square8.setFillColor(sf::Color::Magenta);
  4042dc:	be 90 a4 40 00       	mov    $0x40a490,%esi
  4042e1:	48 8d bc 24 70 0c 00 	lea    0xc70(%rsp),%rdi
  4042e8:	00 
  4042e9:	e8 d2 f1 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square8.setPosition(100.f, 190.f);
  4042ee:	f3 0f 10 0d 02 42 00 	movss  0x4202(%rip),%xmm1        # 4084f8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x118>
  4042f5:	00 
  4042f6:	f3 0f 10 05 ee 41 00 	movss  0x41ee(%rip),%xmm0        # 4084ec <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x10c>
  4042fd:	00 
  4042fe:	48 8d bc 24 78 0c 00 	lea    0xc78(%rsp),%rdi
  404305:	00 
  404306:	e8 35 ee ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square9(30, 4);
  40430b:	f3 0f 10 05 cd 41 00 	movss  0x41cd(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  404312:	00 
  404313:	be 04 00 00 00       	mov    $0x4,%esi
  404318:	48 8d bc 24 d0 0d 00 	lea    0xdd0(%rsp),%rdi
  40431f:	00 
  404320:	e8 ab ee ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square9.setFillColor(sf::Color::Blue);
  404325:	be a8 a4 40 00       	mov    $0x40a4a8,%esi
  40432a:	48 8d bc 24 d0 0d 00 	lea    0xdd0(%rsp),%rdi
  404331:	00 
  404332:	e8 89 f1 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square9.setPosition(180.f, 190.f);
  404337:	f3 0f 10 0d b9 41 00 	movss  0x41b9(%rip),%xmm1        # 4084f8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x118>
  40433e:	00 
  40433f:	f3 0f 10 05 a9 41 00 	movss  0x41a9(%rip),%xmm0        # 4084f0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x110>
  404346:	00 
  404347:	48 8d bc 24 d8 0d 00 	lea    0xdd8(%rsp),%rdi
  40434e:	00 
  40434f:	e8 ec ed ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square10(30, 4);
  404354:	f3 0f 10 05 84 41 00 	movss  0x4184(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  40435b:	00 
  40435c:	be 04 00 00 00       	mov    $0x4,%esi
  404361:	48 8d bc 24 30 0f 00 	lea    0xf30(%rsp),%rdi
  404368:	00 
  404369:	e8 62 ee ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square10.setFillColor(sf::Color::Magenta);
  40436e:	be 90 a4 40 00       	mov    $0x40a490,%esi
  404373:	48 8d bc 24 30 0f 00 	lea    0xf30(%rsp),%rdi
  40437a:	00 
  40437b:	e8 40 f1 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square10.setPosition(20.f, 260.f);
  404380:	f3 0f 10 0d 74 41 00 	movss  0x4174(%rip),%xmm1        # 4084fc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x11c>
  404387:	00 
  404388:	f3 0f 10 05 58 41 00 	movss  0x4158(%rip),%xmm0        # 4084e8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x108>
  40438f:	00 
  404390:	48 8d bc 24 38 0f 00 	lea    0xf38(%rsp),%rdi
  404397:	00 
  404398:	e8 a3 ed ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square11(30, 4);
  40439d:	f3 0f 10 05 3b 41 00 	movss  0x413b(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  4043a4:	00 
  4043a5:	be 04 00 00 00       	mov    $0x4,%esi
  4043aa:	48 8d bc 24 90 10 00 	lea    0x1090(%rsp),%rdi
  4043b1:	00 
  4043b2:	e8 19 ee ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square11.setFillColor(sf::Color::Magenta);
  4043b7:	be 90 a4 40 00       	mov    $0x40a490,%esi
  4043bc:	48 8d bc 24 90 10 00 	lea    0x1090(%rsp),%rdi
  4043c3:	00 
  4043c4:	e8 f7 f0 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square11.setPosition(100.f, 260.f);
  4043c9:	f3 0f 10 0d 2b 41 00 	movss  0x412b(%rip),%xmm1        # 4084fc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x11c>
  4043d0:	00 
  4043d1:	f3 0f 10 05 13 41 00 	movss  0x4113(%rip),%xmm0        # 4084ec <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x10c>
  4043d8:	00 
  4043d9:	48 8d bc 24 98 10 00 	lea    0x1098(%rsp),%rdi
  4043e0:	00 
  4043e1:	e8 5a ed ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square12(30, 4);
  4043e6:	f3 0f 10 05 f2 40 00 	movss  0x40f2(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  4043ed:	00 
  4043ee:	be 04 00 00 00       	mov    $0x4,%esi
  4043f3:	48 8d bc 24 f0 11 00 	lea    0x11f0(%rsp),%rdi
  4043fa:	00 
  4043fb:	e8 d0 ed ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square12.setFillColor(sf::Color::Magenta);
  404400:	be 90 a4 40 00       	mov    $0x40a490,%esi
  404405:	48 8d bc 24 f0 11 00 	lea    0x11f0(%rsp),%rdi
  40440c:	00 
  40440d:	e8 ae f0 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square12.setPosition(180.f, 260.f);
  404412:	f3 0f 10 0d e2 40 00 	movss  0x40e2(%rip),%xmm1        # 4084fc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x11c>
  404419:	00 
  40441a:	f3 0f 10 05 ce 40 00 	movss  0x40ce(%rip),%xmm0        # 4084f0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x110>
  404421:	00 
  404422:	48 8d bc 24 f8 11 00 	lea    0x11f8(%rsp),%rdi
  404429:	00 
  40442a:	e8 11 ed ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square13(30, 4);
  40442f:	f3 0f 10 05 a9 40 00 	movss  0x40a9(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  404436:	00 
  404437:	be 04 00 00 00       	mov    $0x4,%esi
  40443c:	48 8d bc 24 50 13 00 	lea    0x1350(%rsp),%rdi
  404443:	00 
  404444:	e8 87 ed ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square13.setFillColor(sf::Color::Magenta);
  404449:	be 90 a4 40 00       	mov    $0x40a490,%esi
  40444e:	48 8d bc 24 50 13 00 	lea    0x1350(%rsp),%rdi
  404455:	00 
  404456:	e8 65 f0 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square13.setPosition(20.f, 330.f);
  40445b:	f3 0f 10 0d 9d 40 00 	movss  0x409d(%rip),%xmm1        # 408500 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x120>
  404462:	00 
  404463:	f3 0f 10 05 7d 40 00 	movss  0x407d(%rip),%xmm0        # 4084e8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x108>
  40446a:	00 
  40446b:	48 8d bc 24 58 13 00 	lea    0x1358(%rsp),%rdi
  404472:	00 
  404473:	e8 c8 ec ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square14(30, 4);
  404478:	f3 0f 10 05 60 40 00 	movss  0x4060(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  40447f:	00 
  404480:	be 04 00 00 00       	mov    $0x4,%esi
  404485:	48 8d bc 24 b0 14 00 	lea    0x14b0(%rsp),%rdi
  40448c:	00 
  40448d:	e8 3e ed ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square14.setFillColor(sf::Color::Blue);
  404492:	be a8 a4 40 00       	mov    $0x40a4a8,%esi
  404497:	48 8d bc 24 b0 14 00 	lea    0x14b0(%rsp),%rdi
  40449e:	00 
  40449f:	e8 1c f0 ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square14.setPosition(100.f, 330.f);
  4044a4:	f3 0f 10 0d 54 40 00 	movss  0x4054(%rip),%xmm1        # 408500 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x120>
  4044ab:	00 
  4044ac:	f3 0f 10 05 38 40 00 	movss  0x4038(%rip),%xmm0        # 4084ec <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x10c>
  4044b3:	00 
  4044b4:	48 8d bc 24 b8 14 00 	lea    0x14b8(%rsp),%rdi
  4044bb:	00 
  4044bc:	e8 7f ec ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square15(30, 4);
  4044c1:	f3 0f 10 05 17 40 00 	movss  0x4017(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  4044c8:	00 
  4044c9:	be 04 00 00 00       	mov    $0x4,%esi
  4044ce:	48 8d bc 24 10 16 00 	lea    0x1610(%rsp),%rdi
  4044d5:	00 
  4044d6:	e8 f5 ec ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square15.setFillColor(sf::Color::Magenta);
  4044db:	be 90 a4 40 00       	mov    $0x40a490,%esi
  4044e0:	48 8d bc 24 10 16 00 	lea    0x1610(%rsp),%rdi
  4044e7:	00 
  4044e8:	e8 d3 ef ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square15.setPosition(180.f, 330.f);
  4044ed:	f3 0f 10 0d 0b 40 00 	movss  0x400b(%rip),%xmm1        # 408500 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x120>
  4044f4:	00 
  4044f5:	f3 0f 10 05 f3 3f 00 	movss  0x3ff3(%rip),%xmm0        # 4084f0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x110>
  4044fc:	00 
  4044fd:	48 8d bc 24 18 16 00 	lea    0x1618(%rsp),%rdi
  404504:	00 
  404505:	e8 36 ec ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square16(30, 4);
  40450a:	f3 0f 10 05 ce 3f 00 	movss  0x3fce(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  404511:	00 
  404512:	be 04 00 00 00       	mov    $0x4,%esi
  404517:	48 8d bc 24 70 17 00 	lea    0x1770(%rsp),%rdi
  40451e:	00 
  40451f:	e8 ac ec ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square16.setFillColor(sf::Color::Blue);
  404524:	be a8 a4 40 00       	mov    $0x40a4a8,%esi
  404529:	48 8d bc 24 70 17 00 	lea    0x1770(%rsp),%rdi
  404530:	00 
  404531:	e8 8a ef ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square16.setPosition(20.f, 400.f);
  404536:	f3 0f 10 0d c6 3f 00 	movss  0x3fc6(%rip),%xmm1        # 408504 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x124>
  40453d:	00 
  40453e:	f3 0f 10 05 a2 3f 00 	movss  0x3fa2(%rip),%xmm0        # 4084e8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x108>
  404545:	00 
  404546:	48 8d bc 24 78 17 00 	lea    0x1778(%rsp),%rdi
  40454d:	00 
  40454e:	e8 ed eb ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square17(30, 4);
  404553:	f3 0f 10 05 85 3f 00 	movss  0x3f85(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  40455a:	00 
  40455b:	be 04 00 00 00       	mov    $0x4,%esi
  404560:	48 8d bc 24 d0 18 00 	lea    0x18d0(%rsp),%rdi
  404567:	00 
  404568:	e8 63 ec ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square17.setFillColor(sf::Color::Magenta);
  40456d:	be 90 a4 40 00       	mov    $0x40a490,%esi
  404572:	48 8d bc 24 d0 18 00 	lea    0x18d0(%rsp),%rdi
  404579:	00 
  40457a:	e8 41 ef ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square17.setPosition(100.f, 400.f);
  40457f:	f3 0f 10 0d 7d 3f 00 	movss  0x3f7d(%rip),%xmm1        # 408504 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x124>
  404586:	00 
  404587:	f3 0f 10 05 5d 3f 00 	movss  0x3f5d(%rip),%xmm0        # 4084ec <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x10c>
  40458e:	00 
  40458f:	48 8d bc 24 d8 18 00 	lea    0x18d8(%rsp),%rdi
  404596:	00 
  404597:	e8 a4 eb ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	sf::CircleShape square18(30, 4);
  40459c:	f3 0f 10 05 3c 3f 00 	movss  0x3f3c(%rip),%xmm0        # 4084e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  4045a3:	00 
  4045a4:	be 04 00 00 00       	mov    $0x4,%esi
  4045a9:	48 8d bc 24 30 1a 00 	lea    0x1a30(%rsp),%rdi
  4045b0:	00 
  4045b1:	e8 1a ec ff ff       	call   4031d0 <_ZN2sf11CircleShapeC1Efm@plt>
	square18.setFillColor(sf::Color::Blue);
  4045b6:	be a8 a4 40 00       	mov    $0x40a4a8,%esi
  4045bb:	48 8d bc 24 30 1a 00 	lea    0x1a30(%rsp),%rdi
  4045c2:	00 
  4045c3:	e8 f8 ee ff ff       	call   4034c0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
	square18.setPosition(180.f, 400.f);
  4045c8:	f3 0f 10 0d 34 3f 00 	movss  0x3f34(%rip),%xmm1        # 408504 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x124>
  4045cf:	00 
  4045d0:	f3 0f 10 05 18 3f 00 	movss  0x3f18(%rip),%xmm0        # 4084f0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x110>
  4045d7:	00 
  4045d8:	48 8d bc 24 38 1a 00 	lea    0x1a38(%rsp),%rdi
  4045df:	00 
  4045e0:	e8 5b eb ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	window.setFramerateLimit(12);
  4045e5:	be 0c 00 00 00       	mov    $0xc,%esi
  4045ea:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  4045f1:	00 
  4045f2:	e8 d9 ec ff ff       	call   4032d0 <_ZN2sf6Window17setFramerateLimitEj@plt>
	sf::Font font;
  4045f7:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
  4045fe:	00 
  4045ff:	e8 ac ea ff ff       	call   4030b0 <_ZN2sf4FontC1Ev@plt>
	font.loadFromFile("/home/de2i-150/Desktop/Projeto-IHS/IHS-Project/ihs-project-layout/app/fonts/Hack-Regular.ttf");
  404604:	48 8d 94 24 00 1d 00 	lea    0x1d00(%rsp),%rdx
  40460b:	00 
  40460c:	be f8 81 40 00       	mov    $0x4081f8,%esi
  404611:	48 8d bc 24 70 1e 00 	lea    0x1e70(%rsp),%rdi
  404618:	00 
  404619:	e8 42 2f 00 00       	call   407560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
  40461e:	48 8d b4 24 70 1e 00 	lea    0x1e70(%rsp),%rsi
  404625:	00 
  404626:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
  40462d:	00 
  40462e:	e8 ed eb ff ff       	call   403220 <_ZN2sf4Font12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
      { return _M_dataplus._M_p; }
  404633:	48 8b bc 24 70 1e 00 	mov    0x1e70(%rsp),%rdi
  40463a:	00 
	if (!_M_is_local())
  40463b:	48 39 ef             	cmp    %rbp,%rdi
  40463e:	74 11                	je     404651 <main+0x691>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404640:	48 8b 84 24 80 1e 00 	mov    0x1e80(%rsp),%rax
  404647:	00 
  404648:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  40464c:	e8 df eb ff ff       	call   403230 <_ZdlPvm@plt>
	sf::Text text("", font, 30);
  404651:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  404658:	00 
  404659:	e8 92 ee ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  40465e:	48 8d 94 24 00 1d 00 	lea    0x1d00(%rsp),%rdx
  404665:	00 
  404666:	be 99 80 40 00       	mov    $0x408099,%esi
  40466b:	48 8d bc 24 70 1e 00 	lea    0x1e70(%rsp),%rdi
  404672:	00 
  404673:	e8 78 ea ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404678:	b9 1e 00 00 00       	mov    $0x1e,%ecx
  40467d:	48 8d 94 24 70 01 00 	lea    0x170(%rsp),%rdx
  404684:	00 
  404685:	48 8d b4 24 70 1e 00 	lea    0x1e70(%rsp),%rsi
  40468c:	00 
  40468d:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  404694:	00 
  404695:	e8 66 eb ff ff       	call   403200 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@plt>
      { return _M_dataplus._M_p; }
  40469a:	48 8b bc 24 70 1e 00 	mov    0x1e70(%rsp),%rdi
  4046a1:	00 
	if (!_M_is_local())
  4046a2:	48 39 ef             	cmp    %rbp,%rdi
  4046a5:	74 15                	je     4046bc <main+0x6fc>
  4046a7:	48 8b 84 24 80 1e 00 	mov    0x1e80(%rsp),%rax
  4046ae:	00 
  4046af:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4046b6:	00 
  4046b7:	e8 74 eb ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4046bc:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  4046c3:	00 
  4046c4:	e8 77 ec ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
	text.setFillColor(sf::Color(14, 107, 14));
  4046c9:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4046cf:	b9 0e 00 00 00       	mov    $0xe,%ecx
  4046d4:	ba 6b 00 00 00       	mov    $0x6b,%edx
  4046d9:	be 0e 00 00 00       	mov    $0xe,%esi
  4046de:	48 8d bc 24 70 1e 00 	lea    0x1e70(%rsp),%rdi
  4046e5:	00 
  4046e6:	e8 15 ea ff ff       	call   403100 <_ZN2sf5ColorC1Ehhhh@plt>
  4046eb:	48 8d b4 24 70 1e 00 	lea    0x1e70(%rsp),%rsi
  4046f2:	00 
  4046f3:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  4046fa:	00 
  4046fb:	e8 d0 ed ff ff       	call   4034d0 <_ZN2sf4Text12setFillColorERKNS_5ColorE@plt>
	sf::Text timer_text;
  404700:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  404707:	00 
  404708:	e8 53 eb ff ff       	call   403260 <_ZN2sf4TextC1Ev@plt>
	timer_text.setFont(font);
  40470d:	48 8d b4 24 70 01 00 	lea    0x170(%rsp),%rsi
  404714:	00 
  404715:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  40471c:	00 
  40471d:	e8 be eb ff ff       	call   4032e0 <_ZN2sf4Text7setFontERKNS_4FontE@plt>
	timer_text.setPosition(200, 200);
  404722:	f3 0f 10 0d de 3d 00 	movss  0x3dde(%rip),%xmm1        # 408508 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x128>
  404729:	00 
  40472a:	48 8d bc 24 08 1d 00 	lea    0x1d08(%rsp),%rdi
  404731:	00 
  404732:	0f 28 c1             	movaps %xmm1,%xmm0
  404735:	e8 06 ea ff ff       	call   403140 <_ZN2sf13Transformable11setPositionEff@plt>
	timer_text.setCharacterSize(30);
  40473a:	be 1e 00 00 00       	mov    $0x1e,%esi
  40473f:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  404746:	00 
  404747:	e8 d4 eb ff ff       	call   403320 <_ZN2sf4Text16setCharacterSizeEj@plt>
	timer_text.setFillColor(sf::Color::White);
  40474c:	be c0 a2 40 00       	mov    $0x40a2c0,%esi
  404751:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  404758:	00 
  404759:	e8 72 ed ff ff       	call   4034d0 <_ZN2sf4Text12setFillColorERKNS_5ColorE@plt>
	sf::Text challenge1_text("", font, 30);
  40475e:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  404765:	00 
  404766:	e8 85 ed ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  40476b:	48 8d 94 24 50 01 00 	lea    0x150(%rsp),%rdx
  404772:	00 
  404773:	be 99 80 40 00       	mov    $0x408099,%esi
  404778:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
  40477f:	00 
  404780:	e8 6b e9 ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404785:	b9 1e 00 00 00       	mov    $0x1e,%ecx
  40478a:	48 8d 94 24 70 01 00 	lea    0x170(%rsp),%rdx
  404791:	00 
  404792:	48 8d b4 24 00 02 00 	lea    0x200(%rsp),%rsi
  404799:	00 
  40479a:	48 8d bc 24 70 1e 00 	lea    0x1e70(%rsp),%rdi
  4047a1:	00 
  4047a2:	e8 59 ea ff ff       	call   403200 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@plt>
      { return _M_dataplus._M_p; }
  4047a7:	48 8b bc 24 00 02 00 	mov    0x200(%rsp),%rdi
  4047ae:	00 
	if (!_M_is_local())
  4047af:	48 8d 84 24 10 02 00 	lea    0x210(%rsp),%rax
  4047b6:	00 
  4047b7:	48 39 c7             	cmp    %rax,%rdi
  4047ba:	74 15                	je     4047d1 <main+0x811>
	::operator delete(__p
  4047bc:	48 8b 84 24 10 02 00 	mov    0x210(%rsp),%rax
  4047c3:	00 
  4047c4:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4047cb:	00 
  4047cc:	e8 5f ea ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4047d1:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  4047d8:	00 
  4047d9:	e8 62 eb ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
	challenge1_text.setFillColor(sf::Color(14, 107, 14));
  4047de:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4047e4:	b9 0e 00 00 00       	mov    $0xe,%ecx
  4047e9:	ba 6b 00 00 00       	mov    $0x6b,%edx
  4047ee:	be 0e 00 00 00       	mov    $0xe,%esi
  4047f3:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
  4047fa:	00 
  4047fb:	e8 00 e9 ff ff       	call   403100 <_ZN2sf5ColorC1Ehhhh@plt>
  404800:	48 8d b4 24 00 02 00 	lea    0x200(%rsp),%rsi
  404807:	00 
  404808:	48 8d bc 24 70 1e 00 	lea    0x1e70(%rsp),%rdi
  40480f:	00 
  404810:	e8 bb ec ff ff       	call   4034d0 <_ZN2sf4Text12setFillColorERKNS_5ColorE@plt>
	sf::Music typing;
  404815:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
  40481c:	00 
  40481d:	e8 4e e8 ff ff       	call   403070 <_ZN2sf5MusicC1Ev@plt>
	if (!typing.openFromFile("/home/de2i-150/Desktop/Projeto-IHS/IHS-Project/ihs-project-layout/app/assets/sounds/typing.ogg"))
  404822:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  404829:	00 
  40482a:	be 58 82 40 00       	mov    $0x408258,%esi
  40482f:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  404836:	00 
  404837:	e8 24 2d 00 00       	call   407560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
  40483c:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  404843:	00 
  404844:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
  40484b:	00 
  40484c:	e8 2f e8 ff ff       	call   403080 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
      { return _M_dataplus._M_p; }
  404851:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  404858:	00 
	if (!_M_is_local())
  404859:	4c 8d a4 24 60 01 00 	lea    0x160(%rsp),%r12
  404860:	00 
  404861:	89 c3                	mov    %eax,%ebx
  404863:	4c 39 e7             	cmp    %r12,%rdi
  404866:	74 11                	je     404879 <main+0x8b9>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404868:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  40486f:	00 
  404870:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  404874:	e8 b7 e9 ff ff       	call   403230 <_ZdlPvm@plt>
  404879:	84 db                	test   %bl,%bl
  40487b:	0f 84 6d 18 00 00    	je     4060ee <main+0x212e>
	sf::String typedtext = "Ola, vejo que voce encontrou minha caixa...\n\nEspero (ou nao) que voce consiga completar\nos desafios que preparei para hoje.\n\nMas cuidado com o tempo e tente nao perder\na cabeca!!\n\nASS ?";
  404881:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  404888:	00 
  404889:	e8 62 ec ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  40488e:	48 8d 94 24 50 01 00 	lea    0x150(%rsp),%rdx
  404895:	00 
  404896:	be d8 82 40 00       	mov    $0x4082d8,%esi
  40489b:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  4048a2:	00 
  4048a3:	e8 48 e8 ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4048a8:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  4048af:	00 
  4048b0:	e8 8b ea ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
	sf::String challenge1_string = "Voce deveria saber matematica";
  4048b5:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  4048bc:	00 
  4048bd:	e8 2e ec ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  4048c2:	48 8d 94 24 50 01 00 	lea    0x150(%rsp),%rdx
  4048c9:	00 
  4048ca:	be a6 80 40 00       	mov    $0x4080a6,%esi
  4048cf:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
  4048d6:	00 
  4048d7:	e8 14 e8 ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4048dc:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  4048e3:	00 
  4048e4:	e8 57 ea ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
	sf::Clock clock_text;
  4048e9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  4048ee:	e8 1d ea ff ff       	call   403310 <_ZN2sf5ClockC1Ev@plt>
	sf::Time elapsedtime_text;
  4048f3:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  4048f8:	e8 53 e7 ff ff       	call   403050 <_ZN2sf4TimeC1Ev@plt>
	sf::Clock temp_clock;
  4048fd:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
  404902:	e8 09 ea ff ff       	call   403310 <_ZN2sf5ClockC1Ev@plt>
	sf::Time temp_time;
  404907:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
  40490c:	e8 3f e7 ff ff       	call   403050 <_ZN2sf4TimeC1Ev@plt>
	sf::Clock clock_bomb;
  404911:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  404916:	e8 f5 e9 ff ff       	call   403310 <_ZN2sf5ClockC1Ev@plt>
	sf::Time time_bomb;
  40491b:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
  404920:	e8 2b e7 ff ff       	call   403050 <_ZN2sf4TimeC1Ev@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  404925:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
  40492c:	00 
	int screen = 0;
  40492d:	31 db                	xor    %ebx,%ebx
      { _M_string_length = __length; }
  40492f:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
  404936:	00 00 00 00 00 
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  40493b:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
  404942:	00 
  404943:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
  40494a:	00 
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { __c1 = __c2; }
  40494b:	c6 84 24 e0 00 00 00 	movb   $0x0,0xe0(%rsp)
  404952:	00 
  404953:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
  40495a:	00 
      { _M_string_length = __length; }
  40495b:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
  404962:	00 00 00 00 00 
  404967:	c6 84 24 00 01 00 00 	movb   $0x0,0x100(%rsp)
  40496e:	00 
	unsigned int switches = 0x00000;
  40496f:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
  404976:	00 
  404977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40497e:	00 00 
	while (window.isOpen())
  404980:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  404987:	00 
  404988:	e8 c3 e8 ff ff       	call   403250 <_ZNK2sf6Window6isOpenEv@plt>
  40498d:	84 c0                	test   %al,%al
  40498f:	75 1b                	jne    4049ac <main+0x9ec>
  404991:	e9 5f 14 00 00       	jmp    405df5 <main+0x1e35>
  404996:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40499d:	00 00 00 
			if (event.type == sf::Event::Closed)
  4049a0:	8b 54 24 70          	mov    0x70(%rsp),%edx
  4049a4:	85 d2                	test   %edx,%edx
  4049a6:	0f 84 94 02 00 00    	je     404c40 <main+0xc80>
		while (window.pollEvent(event))
  4049ac:	48 8d 74 24 70       	lea    0x70(%rsp),%rsi
  4049b1:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  4049b8:	00 
  4049b9:	e8 32 e8 ff ff       	call   4031f0 <_ZN2sf6Window9pollEventERNS_5EventE@plt>
  4049be:	84 c0                	test   %al,%al
  4049c0:	75 de                	jne    4049a0 <main+0x9e0>
		window.clear();
  4049c2:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4049c8:	31 c9                	xor    %ecx,%ecx
  4049ca:	31 d2                	xor    %edx,%edx
  4049cc:	31 f6                	xor    %esi,%esi
  4049ce:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  4049d5:	00 
  4049d6:	e8 25 e7 ff ff       	call   403100 <_ZN2sf5ColorC1Ehhhh@plt>
  4049db:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  4049e2:	00 
  4049e3:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  4049ea:	00 
  4049eb:	e8 a0 e7 ff ff       	call   403190 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@plt>
		if(screen == 0){
  4049f0:	85 db                	test   %ebx,%ebx
  4049f2:	0f 84 68 09 00 00    	je     405360 <main+0x13a0>
		if (screen != 1 && screen != 6)
  4049f8:	83 fb 01             	cmp    $0x1,%ebx
  4049fb:	0f 84 27 02 00 00    	je     404c28 <main+0xc68>
  404a01:	83 fb 06             	cmp    $0x6,%ebx
  404a04:	0f 84 1e 02 00 00    	je     404c28 <main+0xc68>
			time_bomb = clock_bomb.getElapsedTime();
  404a0a:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  404a0f:	e8 bc e9 ff ff       	call   4033d0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>
			seconds = 300 - time_bomb.asSeconds();
  404a14:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
			time_bomb = clock_bomb.getElapsedTime();
  404a19:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
			seconds = 300 - time_bomb.asSeconds();
  404a1e:	e8 3d ea ff ff       	call   403460 <_ZNK2sf4Time9asSecondsEv@plt>
  404a23:	0f 28 c8             	movaps %xmm0,%xmm1
  404a26:	f3 0f 10 05 de 3a 00 	movss  0x3ade(%rip),%xmm0        # 40850c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x12c>
  404a2d:	00 
			int_to_string(fd, seconds, min_string, sec_string);
  404a2e:	8b 7c 24 18          	mov    0x18(%rsp),%edi
  404a32:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
  404a39:	00 
  404a3a:	48 8d 94 24 f0 00 00 	lea    0xf0(%rsp),%rdx
  404a41:	00 
			seconds = 300 - time_bomb.asSeconds();
  404a42:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  404a46:	f3 48 0f 2c c0       	cvttss2si %xmm0,%rax
  404a4b:	89 c6                	mov    %eax,%esi
  404a4d:	48 89 04 24          	mov    %rax,(%rsp)
			int_to_string(fd, seconds, min_string, sec_string);
  404a51:	e8 0a 22 00 00       	call   406c60 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_>
			timer_text.setString(min_string + ":" + sec_string);
  404a56:	48 8d 6c 24 58       	lea    0x58(%rsp),%rbp
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  404a5b:	4c 8d b4 24 20 01 00 	lea    0x120(%rsp),%r14
  404a62:	00 
  404a63:	48 89 ef             	mov    %rbp,%rdi
  404a66:	e8 85 ea ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
      { return _M_dataplus._M_p; }
  404a6b:	4c 8b bc 24 f0 00 00 	mov    0xf0(%rsp),%r15
  404a72:	00 

      ///  Returns the number of characters in the string, not including any
      ///  null-termination.
      size_type
      length() const _GLIBCXX_NOEXCEPT
      { return _M_string_length; }
  404a73:	4c 8b ac 24 f8 00 00 	mov    0xf8(%rsp),%r13
  404a7a:	00 
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  404a7b:	4c 89 b4 24 10 01 00 	mov    %r14,0x110(%rsp)
  404a82:	00 
      basic_string<_CharT, _Traits, _Alloc>::
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
	// NB: Not required, but considered best practice.
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
  404a83:	4c 89 f8             	mov    %r15,%rax
  404a86:	4c 01 e8             	add    %r13,%rax
  404a89:	74 09                	je     404a94 <main+0xad4>
  404a8b:	4d 85 ff             	test   %r15,%r15
  404a8e:	0f 84 9d 18 00 00    	je     406331 <main+0x2371>
	  std::__throw_logic_error(__N("basic_string::"
				       "_M_construct null not valid"));

	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  404a94:	4c 89 ac 24 50 01 00 	mov    %r13,0x150(%rsp)
  404a9b:	00 

	if (__dnew > size_type(_S_local_capacity))
  404a9c:	49 83 fd 0f          	cmp    $0xf,%r13
  404aa0:	0f 87 8a 16 00 00    	ja     406130 <main+0x2170>
	if (__n == 1)
  404aa6:	49 83 fd 01          	cmp    $0x1,%r13
  404aaa:	0f 85 30 16 00 00    	jne    4060e0 <main+0x2120>
  404ab0:	41 0f b6 07          	movzbl (%r15),%eax
  404ab4:	88 84 24 20 01 00 00 	mov    %al,0x120(%rsp)
	  {
	    _M_dispose();
	    __throw_exception_again;
	  }

	_M_set_length(__dnew);
  404abb:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
  404ac2:	00 
  404ac3:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
  404aca:	00 
      { _M_string_length = __length; }
  404acb:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
  404ad2:	00 
  404ad3:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
	if (this->max_size() - (this->size() - __n1) < __n2)
  404ad7:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
  404ade:	ff ff 3f 
  404ae1:	48 39 84 24 18 01 00 	cmp    %rax,0x118(%rsp)
  404ae8:	00 
  404ae9:	0f 84 38 18 00 00    	je     406327 <main+0x2367>
      append(const _CharT* __s)
      {
	__glibcxx_requires_string(__s);
	const size_type __n = traits_type::length(__s);
	_M_check_length(size_type(0), __n, "basic_string::append");
	return _M_append(__s, __n);
  404aef:	4c 8d ac 24 10 01 00 	lea    0x110(%rsp),%r13
  404af6:	00 
  404af7:	ba 01 00 00 00       	mov    $0x1,%edx
  404afc:	be d9 80 40 00       	mov    $0x4080d9,%esi
  404b01:	4c 89 ef             	mov    %r13,%rdi
  404b04:	e8 87 e5 ff ff       	call   403090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_append(__str._M_data(), __str.size()); }
  404b09:	48 8b 94 24 d8 00 00 	mov    0xd8(%rsp),%rdx
  404b10:	00 
  404b11:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
  404b18:	00 
  404b19:	4c 89 ef             	mov    %r13,%rdi
  404b1c:	e8 6f e5 ff ff       	call   403090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  404b21:	4c 8d ac 24 40 01 00 	lea    0x140(%rsp),%r13
  404b28:	00 
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  404b29:	48 8d 50 10          	lea    0x10(%rax),%rdx
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  404b2d:	4c 89 ac 24 30 01 00 	mov    %r13,0x130(%rsp)
  404b34:	00 
      { return _M_dataplus._M_p; }
  404b35:	48 8b 08             	mov    (%rax),%rcx
	if (__str._M_is_local())
  404b38:	48 39 d1             	cmp    %rdx,%rcx
  404b3b:	0f 84 31 16 00 00    	je     406172 <main+0x21b2>
      { _M_dataplus._M_p = __p; }
  404b41:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
  404b48:	00 
	    _M_capacity(__str._M_allocated_capacity);
  404b49:	48 8b 48 10          	mov    0x10(%rax),%rcx
      { _M_allocated_capacity = __capacity; }
  404b4d:	48 89 8c 24 40 01 00 	mov    %rcx,0x140(%rsp)
  404b54:	00 
      { return _M_string_length; }
  404b55:	48 8b 48 08          	mov    0x8(%rax),%rcx
  404b59:	48 8d b4 24 30 01 00 	lea    0x130(%rsp),%rsi
  404b60:	00 
  404b61:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  404b68:	00 
      { _M_string_length = __length; }
  404b69:	48 89 8c 24 38 01 00 	mov    %rcx,0x138(%rsp)
  404b70:	00 
      { _M_dataplus._M_p = __p; }
  404b71:	48 89 10             	mov    %rdx,(%rax)
  404b74:	48 89 ea             	mov    %rbp,%rdx
      { _M_string_length = __length; }
  404b77:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  404b7e:	00 
  404b7f:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  404b83:	e8 18 e5 ff ff       	call   4030a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  404b88:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  404b8f:	00 
  404b90:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  404b97:	00 
  404b98:	e8 f3 e8 ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  404b9d:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  404ba4:	00 
	if (!_M_is_local())
  404ba5:	4c 39 e7             	cmp    %r12,%rdi
  404ba8:	74 15                	je     404bbf <main+0xbff>
  404baa:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  404bb1:	00 
  404bb2:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404bb9:	00 
  404bba:	e8 71 e6 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  404bbf:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  404bc6:	00 
	if (!_M_is_local())
  404bc7:	4c 39 ef             	cmp    %r13,%rdi
  404bca:	74 11                	je     404bdd <main+0xc1d>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404bcc:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  404bd3:	00 
  404bd4:	48 8d 70 01          	lea    0x1(%rax),%rsi
  404bd8:	e8 53 e6 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  404bdd:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  404be4:	00 
	if (!_M_is_local())
  404be5:	4c 39 f7             	cmp    %r14,%rdi
  404be8:	74 11                	je     404bfb <main+0xc3b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404bea:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  404bf1:	00 
  404bf2:	48 8d 70 01          	lea    0x1(%rax),%rsi
  404bf6:	e8 35 e6 ff ff       	call   403230 <_ZdlPvm@plt>
  404bfb:	48 89 ef             	mov    %rbp,%rdi
  404bfe:	e8 3d e7 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
			window.draw(timer_text);
  404c03:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404c08:	48 8d b4 24 00 1d 00 	lea    0x1d00(%rsp),%rsi
  404c0f:	00 
  404c10:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404c17:	00 
  404c18:	e8 03 e8 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			if (seconds <= 0)
  404c1d:	8b 04 24             	mov    (%rsp),%eax
  404c20:	85 c0                	test   %eax,%eax
  404c22:	0f 84 7f 03 00 00    	je     404fa7 <main+0xfe7>
		switch (screen)
  404c28:	83 fb 06             	cmp    $0x6,%ebx
  404c2b:	0f 87 4f fd ff ff    	ja     404980 <main+0x9c0>
  404c31:	89 d8                	mov    %ebx,%eax
  404c33:	ff 24 c5 70 81 40 00 	jmp    *0x408170(,%rax,8)
  404c3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
				window.close();
  404c40:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  404c47:	00 
  404c48:	e8 93 e8 ff ff       	call   4034e0 <_ZN2sf6Window5closeEv@plt>
  404c4d:	e9 5a fd ff ff       	jmp    4049ac <main+0x9ec>
			elapsedtime_text += clock_text.restart();
  404c52:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  404c57:	e8 a4 e7 ff ff       	call   403400 <_ZN2sf5Clock7restartEv@plt>
  404c5c:	48 89 c6             	mov    %rax,%rsi
  404c5f:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  404c64:	e8 87 e7 ff ff       	call   4033f0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404c69:	f3 0f 10 35 9f 38 00 	movss  0x389f(%rip),%xmm6        # 408510 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404c70:	00 
	if (!_M_is_local())
  404c71:	4c 8d bc 24 40 01 00 	lea    0x140(%rsp),%r15
  404c78:	00 
  404c79:	f3 0f 11 34 24       	movss  %xmm6,(%rsp)
  404c7e:	eb 2d                	jmp    404cad <main+0xced>
				elapsedtime_text -= sf::seconds(.1f);
  404c80:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  404c85:	e8 d6 e4 ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  404c8a:	48 89 c6             	mov    %rax,%rsi
  404c8d:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  404c92:	e8 99 e7 ff ff       	call   403430 <_ZN2sfmIERNS_4TimeES0_@plt>
				if (typedtext.getSize() > 0)
  404c97:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  404c9e:	00 
  404c9f:	e8 fc e6 ff ff       	call   4033a0 <_ZNK2sf6String7getSizeEv@plt>
  404ca4:	48 85 c0             	test   %rax,%rax
  404ca7:	0f 85 24 0e 00 00    	jne    405ad1 <main+0x1b11>
			while (elapsedtime_text >= sf::seconds(.1f))
  404cad:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  404cb2:	e8 a9 e4 ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  404cb7:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  404cbc:	48 89 c6             	mov    %rax,%rsi
  404cbf:	e8 fc e5 ff ff       	call   4032c0 <_ZN2sfgeENS_4TimeES0_@plt>
  404cc4:	84 c0                	test   %al,%al
  404cc6:	75 b8                	jne    404c80 <main+0xcc0>
			window.draw(text);
  404cc8:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404ccd:	48 8d b4 24 90 1b 00 	lea    0x1b90(%rsp),%rsi
  404cd4:	00 
  404cd5:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404cdc:	00 
  404cdd:	e8 3e e7 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square1);
  404ce2:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404ce7:	48 8d b4 24 d0 02 00 	lea    0x2d0(%rsp),%rsi
  404cee:	00 
  404cef:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404cf6:	00 
  404cf7:	e8 24 e7 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square2);
  404cfc:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404d01:	48 8d b4 24 30 04 00 	lea    0x430(%rsp),%rsi
  404d08:	00 
  404d09:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404d10:	00 
  404d11:	e8 0a e7 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square3);
  404d16:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404d1b:	48 8d b4 24 90 05 00 	lea    0x590(%rsp),%rsi
  404d22:	00 
  404d23:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404d2a:	00 
  404d2b:	e8 f0 e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square4);
  404d30:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404d35:	48 8d b4 24 f0 06 00 	lea    0x6f0(%rsp),%rsi
  404d3c:	00 
  404d3d:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404d44:	00 
  404d45:	e8 d6 e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square5);
  404d4a:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404d4f:	48 8d b4 24 50 08 00 	lea    0x850(%rsp),%rsi
  404d56:	00 
  404d57:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404d5e:	00 
  404d5f:	e8 bc e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square6);
  404d64:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404d69:	48 8d b4 24 b0 09 00 	lea    0x9b0(%rsp),%rsi
  404d70:	00 
  404d71:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404d78:	00 
  404d79:	e8 a2 e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square7);
  404d7e:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404d83:	48 8d b4 24 10 0b 00 	lea    0xb10(%rsp),%rsi
  404d8a:	00 
  404d8b:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404d92:	00 
  404d93:	e8 88 e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square8);
  404d98:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404d9d:	48 8d b4 24 70 0c 00 	lea    0xc70(%rsp),%rsi
  404da4:	00 
  404da5:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404dac:	00 
  404dad:	e8 6e e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square9);
  404db2:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404db7:	48 8d b4 24 d0 0d 00 	lea    0xdd0(%rsp),%rsi
  404dbe:	00 
  404dbf:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404dc6:	00 
  404dc7:	e8 54 e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square10);
  404dcc:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404dd1:	48 8d b4 24 30 0f 00 	lea    0xf30(%rsp),%rsi
  404dd8:	00 
  404dd9:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404de0:	00 
  404de1:	e8 3a e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square11);
  404de6:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404deb:	48 8d b4 24 90 10 00 	lea    0x1090(%rsp),%rsi
  404df2:	00 
  404df3:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404dfa:	00 
  404dfb:	e8 20 e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square12);
  404e00:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404e05:	48 8d b4 24 f0 11 00 	lea    0x11f0(%rsp),%rsi
  404e0c:	00 
  404e0d:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404e14:	00 
  404e15:	e8 06 e6 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square13);
  404e1a:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404e1f:	48 8d b4 24 50 13 00 	lea    0x1350(%rsp),%rsi
  404e26:	00 
  404e27:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404e2e:	00 
  404e2f:	e8 ec e5 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square14);
  404e34:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404e39:	48 8d b4 24 b0 14 00 	lea    0x14b0(%rsp),%rsi
  404e40:	00 
  404e41:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404e48:	00 
  404e49:	e8 d2 e5 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square15);
  404e4e:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404e53:	48 8d b4 24 10 16 00 	lea    0x1610(%rsp),%rsi
  404e5a:	00 
  404e5b:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404e62:	00 
  404e63:	e8 b8 e5 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square16);
  404e68:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404e6d:	48 8d b4 24 70 17 00 	lea    0x1770(%rsp),%rsi
  404e74:	00 
  404e75:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404e7c:	00 
  404e7d:	e8 9e e5 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square17);
  404e82:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404e87:	48 8d b4 24 d0 18 00 	lea    0x18d0(%rsp),%rsi
  404e8e:	00 
  404e8f:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404e96:	00 
  404e97:	e8 84 e5 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.draw(square18);
  404e9c:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404ea1:	48 8d b4 24 30 1a 00 	lea    0x1a30(%rsp),%rsi
  404ea8:	00 
  404ea9:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404eb0:	00 
  404eb1:	e8 6a e5 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.display();
  404eb6:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  404ebd:	00 
  404ebe:	e8 3d e4 ff ff       	call   403300 <_ZN2sf6Window7displayEv@plt>
			switches = readSwitch(fd, switches);
  404ec3:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
	ioctl(fd, RD_SWITCHES);
  404ec7:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
  404ecc:	be 61 61 00 00       	mov    $0x6161,%esi
  404ed1:	89 84 24 30 01 00 00 	mov    %eax,0x130(%rsp)
  404ed8:	44 89 f7             	mov    %r14d,%edi
  404edb:	31 c0                	xor    %eax,%eax
  404edd:	e8 4e e4 ff ff       	call   403330 <ioctl@plt>
	read(fd, &data, 3);
  404ee2:	ba 03 00 00 00       	mov    $0x3,%edx
  404ee7:	48 8d b4 24 30 01 00 	lea    0x130(%rsp),%rsi
  404eee:	00 
  404eef:	44 89 f7             	mov    %r14d,%edi
  404ef2:	e8 69 e4 ff ff       	call   403360 <read@plt>
	return data;
  404ef7:	8b 84 24 30 01 00 00 	mov    0x130(%rsp),%eax
  404efe:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
			if(switches == 0x0AA15){
  404f02:	3d 15 aa 00 00       	cmp    $0xaa15,%eax
  404f07:	0f 84 90 12 00 00    	je     40619d <main+0x21dd>
			elapsedtime_text += clock_text.restart();
  404f0d:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  404f12:	e8 e9 e4 ff ff       	call   403400 <_ZN2sf5Clock7restartEv@plt>
  404f17:	48 89 c6             	mov    %rax,%rsi
  404f1a:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  404f1f:	e8 cc e4 ff ff       	call   4033f0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404f24:	f3 0f 10 1d e4 35 00 	movss  0x35e4(%rip),%xmm3        # 408510 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404f2b:	00 
  404f2c:	4c 8d bc 24 40 01 00 	lea    0x140(%rsp),%r15
  404f33:	00 
  404f34:	f3 0f 11 1c 24       	movss  %xmm3,(%rsp)
  404f39:	eb 32                	jmp    404f6d <main+0xfad>
  404f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
				elapsedtime_text -= sf::seconds(.1f);
  404f40:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  404f45:	e8 16 e2 ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  404f4a:	48 89 c6             	mov    %rax,%rsi
  404f4d:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  404f52:	e8 d9 e4 ff ff       	call   403430 <_ZN2sfmIERNS_4TimeES0_@plt>
				if (typedtext.getSize() > 0)
  404f57:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  404f5e:	00 
  404f5f:	e8 3c e4 ff ff       	call   4033a0 <_ZNK2sf6String7getSizeEv@plt>
  404f64:	48 85 c0             	test   %rax,%rax
  404f67:	0f 85 93 07 00 00    	jne    405700 <main+0x1740>
			while (elapsedtime_text >= sf::seconds(.1f))
  404f6d:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  404f72:	e8 e9 e1 ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  404f77:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  404f7c:	48 89 c6             	mov    %rax,%rsi
  404f7f:	e8 3c e3 ff ff       	call   4032c0 <_ZN2sfgeENS_4TimeES0_@plt>
  404f84:	84 c0                	test   %al,%al
  404f86:	75 b8                	jne    404f40 <main+0xf80>
			window.draw(text);
  404f88:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  404f8d:	48 8d b4 24 90 1b 00 	lea    0x1b90(%rsp),%rsi
  404f94:	00 
  404f95:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  404f9c:	00 
  404f9d:	e8 7e e4 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  404fa2:	e9 d9 f9 ff ff       	jmp    404980 <main+0x9c0>
				text.setString("");
  404fa7:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  404fae:	00 
  404faf:	e8 3c e5 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  404fb4:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  404fbb:	00 
  404fbc:	be 99 80 40 00       	mov    $0x408099,%esi
  404fc1:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  404fc8:	00 
  404fc9:	e8 22 e1 ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404fce:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  404fd5:	00 
  404fd6:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  404fdd:	00 
  404fde:	e8 ad e4 ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  404fe3:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  404fea:	00 
	if (!_M_is_local())
  404feb:	4c 39 e7             	cmp    %r12,%rdi
  404fee:	74 15                	je     405005 <main+0x1045>
  404ff0:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  404ff7:	00 
  404ff8:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404fff:	00 
  405000:	e8 2b e2 ff ff       	call   403230 <_ZdlPvm@plt>
  405005:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  40500c:	00 
  40500d:	e8 2e e3 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
				typedtext.insert(0, "BOOM!!!");
  405012:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405019:	00 
  40501a:	e8 d1 e4 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  40501f:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  405026:	00 
  405027:	be db 80 40 00       	mov    $0x4080db,%esi
  40502c:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405033:	00 
  405034:	e8 b7 e0 ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  405039:	48 8d 94 24 50 01 00 	lea    0x150(%rsp),%rdx
  405040:	00 
  405041:	31 f6                	xor    %esi,%esi
  405043:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  40504a:	00 
  40504b:	e8 70 e1 ff ff       	call   4031c0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  405050:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  405057:	00 
	if (!_M_is_local())
  405058:	4c 39 e7             	cmp    %r12,%rdi
  40505b:	74 15                	je     405072 <main+0x10b2>
  40505d:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405064:	00 
  405065:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40506c:	00 
  40506d:	e8 be e1 ff ff       	call   403230 <_ZdlPvm@plt>
  405072:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405079:	00 
  40507a:	e8 c1 e2 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
				clock_text.restart();
  40507f:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  405084:	e8 77 e3 ff ff       	call   403400 <_ZN2sf5Clock7restartEv@plt>
			elapsedtime_text += clock_text.restart();
  405089:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  40508e:	e8 6d e3 ff ff       	call   403400 <_ZN2sf5Clock7restartEv@plt>
  405093:	48 89 c6             	mov    %rax,%rsi
  405096:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  40509b:	e8 50 e3 ff ff       	call   4033f0 <_ZN2sfpLERNS_4TimeES0_@plt>
  4050a0:	f3 0f 10 2d 68 34 00 	movss  0x3468(%rip),%xmm5        # 408510 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4050a7:	00 
  4050a8:	48 8d 9c 24 40 01 00 	lea    0x140(%rsp),%rbx
  4050af:	00 
  4050b0:	f3 0f 11 2c 24       	movss  %xmm5,(%rsp)
  4050b5:	eb 36                	jmp    4050ed <main+0x112d>
  4050b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4050be:	00 00 
				elapsedtime_text -= sf::seconds(.1f);
  4050c0:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  4050c5:	e8 96 e0 ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  4050ca:	48 89 c6             	mov    %rax,%rsi
  4050cd:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  4050d2:	e8 59 e3 ff ff       	call   403430 <_ZN2sfmIERNS_4TimeES0_@plt>
				if (typedtext.getSize() > 0)
  4050d7:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  4050de:	00 
  4050df:	e8 bc e2 ff ff       	call   4033a0 <_ZNK2sf6String7getSizeEv@plt>
  4050e4:	48 85 c0             	test   %rax,%rax
  4050e7:	0f 85 23 08 00 00    	jne    405910 <main+0x1950>
			while (elapsedtime_text >= sf::seconds(.1f))
  4050ed:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  4050f2:	e8 69 e0 ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  4050f7:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4050fc:	48 89 c6             	mov    %rax,%rsi
  4050ff:	e8 bc e1 ff ff       	call   4032c0 <_ZN2sfgeENS_4TimeES0_@plt>
  405104:	84 c0                	test   %al,%al
  405106:	75 b8                	jne    4050c0 <main+0x1100>
			window.draw(text);
  405108:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  40510d:	48 8d b4 24 90 1b 00 	lea    0x1b90(%rsp),%rsi
  405114:	00 
  405115:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  40511c:	00 
  40511d:	e8 fe e2 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.display();
  405122:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  405129:	00 
  40512a:	e8 d1 e1 ff ff       	call   403300 <_ZN2sf6Window7displayEv@plt>
  40512f:	bb 06 00 00 00       	mov    $0x6,%ebx
  405134:	e9 47 f8 ff ff       	jmp    404980 <main+0x9c0>
			elapsedtime_text += clock_text.restart();
  405139:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  40513e:	e8 bd e2 ff ff       	call   403400 <_ZN2sf5Clock7restartEv@plt>
  405143:	48 89 c6             	mov    %rax,%rsi
  405146:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  40514b:	e8 a0 e2 ff ff       	call   4033f0 <_ZN2sfpLERNS_4TimeES0_@plt>
  405150:	f3 0f 10 3d b8 33 00 	movss  0x33b8(%rip),%xmm7        # 408510 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  405157:	00 
  405158:	4c 8d bc 24 40 01 00 	lea    0x140(%rsp),%r15
  40515f:	00 
  405160:	f3 0f 11 3c 24       	movss  %xmm7,(%rsp)
  405165:	eb 36                	jmp    40519d <main+0x11dd>
  405167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40516e:	00 00 
				elapsedtime_text -= sf::seconds(.1f);
  405170:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  405175:	e8 e6 df ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  40517a:	48 89 c6             	mov    %rax,%rsi
  40517d:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  405182:	e8 a9 e2 ff ff       	call   403430 <_ZN2sfmIERNS_4TimeES0_@plt>
				if (typedtext.getSize() > 0)
  405187:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  40518e:	00 
  40518f:	e8 0c e2 ff ff       	call   4033a0 <_ZNK2sf6String7getSizeEv@plt>
  405194:	48 85 c0             	test   %rax,%rax
  405197:	0f 85 c6 0a 00 00    	jne    405c63 <main+0x1ca3>
			while (elapsedtime_text >= sf::seconds(.1f))
  40519d:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  4051a2:	e8 b9 df ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  4051a7:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4051ac:	48 89 c6             	mov    %rax,%rsi
  4051af:	e8 0c e1 ff ff       	call   4032c0 <_ZN2sfgeENS_4TimeES0_@plt>
  4051b4:	84 c0                	test   %al,%al
  4051b6:	75 b8                	jne    405170 <main+0x11b0>
			window.draw(text);
  4051b8:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  4051bd:	48 8d b4 24 90 1b 00 	lea    0x1b90(%rsp),%rsi
  4051c4:	00 
  4051c5:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  4051cc:	00 
  4051cd:	e8 4e e2 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.display();
  4051d2:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  4051d9:	00 
  4051da:	e8 21 e1 ff ff       	call   403300 <_ZN2sf6Window7displayEv@plt>
	ioctl(fd, WR_R_DISPLAY);
  4051df:	44 8b 74 24 18       	mov    0x18(%rsp),%r14d
  4051e4:	be 64 61 00 00       	mov    $0x6164,%esi
  4051e9:	31 c0                	xor    %eax,%eax
  4051eb:	c7 44 24 50 82 b0 c0 	movl   $0xc0c0b082,0x50(%rsp)
  4051f2:	c0 
  4051f3:	44 89 f7             	mov    %r14d,%edi
  4051f6:	e8 35 e1 ff ff       	call   403330 <ioctl@plt>
	write(fd, &data, sizeof(data));
  4051fb:	ba 04 00 00 00       	mov    $0x4,%edx
  405200:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
  405205:	44 89 f7             	mov    %r14d,%edi
  405208:	e8 d3 de ff ff       	call   4030e0 <write@plt>
			switches = readSwitch(fd, switches);
  40520d:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
	ioctl(fd, RD_SWITCHES);
  405211:	be 61 61 00 00       	mov    $0x6161,%esi
  405216:	44 89 f7             	mov    %r14d,%edi
  405219:	89 44 24 58          	mov    %eax,0x58(%rsp)
  40521d:	31 c0                	xor    %eax,%eax
  40521f:	e8 0c e1 ff ff       	call   403330 <ioctl@plt>
	read(fd, &data, 3);
  405224:	ba 03 00 00 00       	mov    $0x3,%edx
  405229:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
  40522e:	44 89 f7             	mov    %r14d,%edi
  405231:	e8 2a e1 ff ff       	call   403360 <read@plt>
	return data;
  405236:	8b 44 24 58          	mov    0x58(%rsp),%eax
  40523a:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
			if (switches == 0x24) // 36 em hexa
  40523e:	83 f8 24             	cmp    $0x24,%eax
  405241:	0f 85 39 f7 ff ff    	jne    404980 <main+0x9c0>
				text.setString("");
  405247:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  40524e:	00 
  40524f:	e8 9c e2 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  405254:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  40525b:	00 
  40525c:	be 99 80 40 00       	mov    $0x408099,%esi
  405261:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405268:	00 
  405269:	e8 82 de ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  40526e:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  405275:	00 
  405276:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  40527d:	00 
  40527e:	e8 0d e2 ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405283:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  40528a:	00 
	if (!_M_is_local())
  40528b:	4c 39 e7             	cmp    %r12,%rdi
  40528e:	74 15                	je     4052a5 <main+0x12e5>
  405290:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405297:	00 
  405298:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40529f:	00 
  4052a0:	e8 8b df ff ff       	call   403230 <_ZdlPvm@plt>
  4052a5:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  4052ac:	00 
  4052ad:	e8 8e e0 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
				typedtext.insert(0, "Isso faz algum sentido?");
  4052b2:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  4052b9:	00 
  4052ba:	e8 31 e2 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  4052bf:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  4052c6:	00 
  4052c7:	be f8 80 40 00       	mov    $0x4080f8,%esi
  4052cc:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  4052d3:	00 
  4052d4:	e8 17 de ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4052d9:	48 8d 94 24 50 01 00 	lea    0x150(%rsp),%rdx
  4052e0:	00 
  4052e1:	31 f6                	xor    %esi,%esi
  4052e3:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  4052ea:	00 
  4052eb:	e8 d0 de ff ff       	call   4031c0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  4052f0:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  4052f7:	00 
	if (!_M_is_local())
  4052f8:	4c 39 e7             	cmp    %r12,%rdi
  4052fb:	74 15                	je     405312 <main+0x1352>
  4052fd:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405304:	00 
  405305:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40530c:	00 
  40530d:	e8 1e df ff ff       	call   403230 <_ZdlPvm@plt>
  405312:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405319:	00 
  40531a:	e8 21 e0 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
	ioctl(fd, WR_RED_LEDS);
  40531f:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
  405323:	be 65 61 00 00       	mov    $0x6165,%esi
  405328:	31 c0                	xor    %eax,%eax
  40532a:	c7 84 24 10 01 00 00 	movl   $0x3,0x110(%rsp)
  405331:	03 00 00 00 
  405335:	89 df                	mov    %ebx,%edi
  405337:	e8 f4 df ff ff       	call   403330 <ioctl@plt>
	write(fd, &data, sizeof(data));
  40533c:	ba 04 00 00 00       	mov    $0x4,%edx
  405341:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
  405348:	00 
  405349:	89 df                	mov    %ebx,%edi
  40534b:	e8 90 dd ff ff       	call   4030e0 <write@plt>
				screen = 3;
  405350:	bb 03 00 00 00       	mov    $0x3,%ebx
  405355:	e9 26 f6 ff ff       	jmp    404980 <main+0x9c0>
  40535a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
			typing.play();
  405360:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
  405367:	00 
  405368:	e8 a3 e0 ff ff       	call   403410 <_ZN2sf11SoundStream4playEv@plt>
			elapsedtime_text += clock_text.restart();
  40536d:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  405372:	e8 89 e0 ff ff       	call   403400 <_ZN2sf5Clock7restartEv@plt>
  405377:	48 89 c6             	mov    %rax,%rsi
  40537a:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  40537f:	e8 6c e0 ff ff       	call   4033f0 <_ZN2sfpLERNS_4TimeES0_@plt>
  405384:	f3 0f 10 35 84 31 00 	movss  0x3184(%rip),%xmm6        # 408510 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  40538b:	00 
  40538c:	bb 01 00 00 00       	mov    $0x1,%ebx
  405391:	f3 0f 11 34 24       	movss  %xmm6,(%rsp)
  405396:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40539d:	00 00 00 
			while (elapsedtime_text >= sf::seconds(.1f))
  4053a0:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  4053a5:	e8 b6 dd ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  4053aa:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4053af:	48 89 c6             	mov    %rax,%rsi
  4053b2:	e8 09 df ff ff       	call   4032c0 <_ZN2sfgeENS_4TimeES0_@plt>
  4053b7:	84 c0                	test   %al,%al
  4053b9:	0f 84 e6 06 00 00    	je     405aa5 <main+0x1ae5>
				elapsedtime_text -= sf::seconds(.1f);
  4053bf:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
  4053c4:	e8 97 dd ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  4053c9:	48 89 c6             	mov    %rax,%rsi
  4053cc:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  4053d1:	e8 5a e0 ff ff       	call   403430 <_ZN2sfmIERNS_4TimeES0_@plt>
				if (typedtext.getSize() > 0)
  4053d6:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  4053dd:	00 
  4053de:	e8 bd df ff ff       	call   4033a0 <_ZNK2sf6String7getSizeEv@plt>
  4053e3:	48 85 c0             	test   %rax,%rax
  4053e6:	0f 84 ec 01 00 00    	je     4055d8 <main+0x1618>
					text.setString(text.getString() + typedtext[0]);
  4053ec:	31 f6                	xor    %esi,%esi
  4053ee:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  4053f5:	00 
  4053f6:	e8 a5 de ff ff       	call   4032a0 <_ZN2sf6StringixEm@plt>
  4053fb:	8b 30                	mov    (%rax),%esi
  4053fd:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405404:	00 
  405405:	e8 b6 dc ff ff       	call   4030c0 <_ZN2sf6StringC1Ej@plt>
  40540a:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405411:	00 
  405412:	e8 c9 df ff ff       	call   4033e0 <_ZNK2sf4Text9getStringEv@plt>
  405417:	48 89 c6             	mov    %rax,%rsi
  40541a:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  405421:	00 
  405422:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405429:	00 
  40542a:	e8 a1 dc ff ff       	call   4030d0 <_ZN2sfplERKNS_6StringES2_@plt>
  40542f:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  405436:	00 
  405437:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  40543e:	00 
  40543f:	e8 4c e0 ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405444:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  40544b:	00 
	if (!_M_is_local())
  40544c:	4c 39 e7             	cmp    %r12,%rdi
  40544f:	74 15                	je     405466 <main+0x14a6>
  405451:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405458:	00 
  405459:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405460:	00 
  405461:	e8 ca dd ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405466:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  40546d:	00 
	if (!_M_is_local())
  40546e:	4c 8d ac 24 40 01 00 	lea    0x140(%rsp),%r13
  405475:	00 
  405476:	4c 39 ef             	cmp    %r13,%rdi
  405479:	74 15                	je     405490 <main+0x14d0>
  40547b:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  405482:	00 
  405483:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40548a:	00 
  40548b:	e8 a0 dd ff ff       	call   403230 <_ZdlPvm@plt>
					typedtext = typedtext.toAnsiString().substr(1);
  405490:	48 8d 6c 24 58       	lea    0x58(%rsp),%rbp
  405495:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
  40549a:	48 89 ef             	mov    %rbp,%rdi
  40549d:	e8 4e e0 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  4054a2:	4c 89 f7             	mov    %r14,%rdi
  4054a5:	e8 46 e0 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  4054aa:	4c 89 f2             	mov    %r14,%rdx
  4054ad:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
  4054b4:	00 
  4054b5:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
  4054bc:	00 
  4054bd:	e8 be df ff ff       	call   403480 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
      { return _M_string_length; }
  4054c2:	4c 8b bc 24 18 01 00 	mov    0x118(%rsp),%r15
  4054c9:	00 
	if (__pos > this->size())
  4054ca:	4d 85 ff             	test   %r15,%r15
  4054cd:	0f 84 37 0e 00 00    	je     40630a <main+0x234a>
      { return _M_dataplus._M_p; }
  4054d3:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
  4054da:	00 
               random_access_iterator_tag)
    {
      // concept requirements
      __glibcxx_function_requires(_RandomAccessIteratorConcept<
				  _RandomAccessIterator>)
      return __last - __first;
  4054db:	49 83 ef 01          	sub    $0x1,%r15
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  4054df:	4c 89 ac 24 30 01 00 	mov    %r13,0x130(%rsp)
  4054e6:	00 
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  4054e7:	4c 89 bc 24 50 01 00 	mov    %r15,0x150(%rsp)
  4054ee:	00 
      { return _M_dataplus._M_p; }
  4054ef:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
	if (__dnew > size_type(_S_local_capacity))
  4054f4:	49 83 ff 0f          	cmp    $0xf,%r15
  4054f8:	0f 87 b2 03 00 00    	ja     4058b0 <main+0x18f0>
	if (__n == 1)
  4054fe:	49 83 ff 01          	cmp    $0x1,%r15
  405502:	0f 85 90 03 00 00    	jne    405898 <main+0x18d8>
  405508:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  40550c:	88 84 24 40 01 00 00 	mov    %al,0x140(%rsp)
  405513:	4c 89 e8             	mov    %r13,%rax
      { _M_string_length = __length; }
  405516:	4c 89 bc 24 38 01 00 	mov    %r15,0x138(%rsp)
  40551d:	00 
  40551e:	48 89 ea             	mov    %rbp,%rdx
  405521:	48 8d b4 24 30 01 00 	lea    0x130(%rsp),%rsi
  405528:	00 
  405529:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405530:	00 
  405531:	42 c6 04 38 00       	movb   $0x0,(%rax,%r15,1)
  405536:	e8 65 db ff ff       	call   4030a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  40553b:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  405542:	00 
  405543:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  40554a:	00 
  40554b:	e8 00 df ff ff       	call   403450 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405550:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  405557:	00 
	if (!_M_is_local())
  405558:	4c 39 e7             	cmp    %r12,%rdi
  40555b:	74 15                	je     405572 <main+0x15b2>
  40555d:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405564:	00 
  405565:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40556c:	00 
  40556d:	e8 be dc ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405572:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  405579:	00 
	if (!_M_is_local())
  40557a:	4c 39 ef             	cmp    %r13,%rdi
  40557d:	74 11                	je     405590 <main+0x15d0>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40557f:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  405586:	00 
  405587:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40558b:	e8 a0 dc ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405590:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  405597:	00 
	if (!_M_is_local())
  405598:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  40559f:	00 
  4055a0:	48 39 c7             	cmp    %rax,%rdi
  4055a3:	74 11                	je     4055b6 <main+0x15f6>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4055a5:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  4055ac:	00 
  4055ad:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4055b1:	e8 7a dc ff ff       	call   403230 <_ZdlPvm@plt>
  4055b6:	4c 89 f7             	mov    %r14,%rdi
  4055b9:	e8 82 dd ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  4055be:	48 89 ef             	mov    %rbp,%rdi
  4055c1:	e8 7a dd ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
					temp_clock.restart();
  4055c6:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
  4055cb:	e8 30 de ff ff       	call   403400 <_ZN2sf5Clock7restartEv@plt>
  4055d0:	e9 cb fd ff ff       	jmp    4053a0 <main+0x13e0>
  4055d5:	0f 1f 00             	nopl   (%rax)
					temp_time = temp_clock.getElapsedTime();
  4055d8:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
  4055dd:	e8 ee dd ff ff       	call   4033d0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>
					if (temp_time >= sf::seconds(5.0f))
  4055e2:	f3 0f 10 05 2a 2f 00 	movss  0x2f2a(%rip),%xmm0        # 408514 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  4055e9:	00 
					temp_time = temp_clock.getElapsedTime();
  4055ea:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
					if (temp_time >= sf::seconds(5.0f))
  4055ef:	e8 6c db ff ff       	call   403160 <_ZN2sf7secondsEf@plt>
  4055f4:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  4055f9:	48 89 c6             	mov    %rax,%rsi
  4055fc:	e8 bf dc ff ff       	call   4032c0 <_ZN2sfgeENS_4TimeES0_@plt>
  405601:	84 c0                	test   %al,%al
  405603:	0f 84 97 fd ff ff    	je     4053a0 <main+0x13e0>
						text.setString("");
  405609:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405610:	00 
  405611:	e8 da de ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  405616:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  40561d:	00 
  40561e:	be 99 80 40 00       	mov    $0x408099,%esi
  405623:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  40562a:	00 
  40562b:	e8 c0 da ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  405630:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  405637:	00 
  405638:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  40563f:	00 
  405640:	e8 4b de ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405645:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  40564c:	00 
	if (!_M_is_local())
  40564d:	4c 39 e7             	cmp    %r12,%rdi
  405650:	74 15                	je     405667 <main+0x16a7>
  405652:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405659:	00 
  40565a:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405661:	00 
  405662:	e8 c9 db ff ff       	call   403230 <_ZdlPvm@plt>
  405667:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  40566e:	00 
  40566f:	e8 cc dc ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
						typedtext.insert(0, "Voce deveria saber matematica");
  405674:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  40567b:	00 
  40567c:	e8 6f de ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  405681:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  405688:	00 
  405689:	be a6 80 40 00       	mov    $0x4080a6,%esi
  40568e:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405695:	00 
  405696:	e8 55 da ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  40569b:	48 8d 94 24 50 01 00 	lea    0x150(%rsp),%rdx
  4056a2:	00 
  4056a3:	31 f6                	xor    %esi,%esi
  4056a5:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  4056ac:	00 
  4056ad:	e8 0e db ff ff       	call   4031c0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  4056b2:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  4056b9:	00 
	if (!_M_is_local())
  4056ba:	4c 39 e7             	cmp    %r12,%rdi
  4056bd:	74 15                	je     4056d4 <main+0x1714>
  4056bf:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  4056c6:	00 
  4056c7:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4056ce:	00 
  4056cf:	e8 5c db ff ff       	call   403230 <_ZdlPvm@plt>
  4056d4:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  4056db:	00 
  4056dc:	e8 5f dc ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
						clock_text.restart();
  4056e1:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  4056e6:	e8 15 dd ff ff       	call   403400 <_ZN2sf5Clock7restartEv@plt>
						clock_bomb.restart();
  4056eb:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  4056f0:	e8 0b dd ff ff       	call   403400 <_ZN2sf5Clock7restartEv@plt>
						screen = 2;
  4056f5:	bb 02 00 00 00       	mov    $0x2,%ebx
  4056fa:	e9 a1 fc ff ff       	jmp    4053a0 <main+0x13e0>
  4056ff:	90                   	nop
					text.setString(text.getString() + typedtext[0]);
  405700:	31 f6                	xor    %esi,%esi
  405702:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  405709:	00 
  40570a:	e8 91 db ff ff       	call   4032a0 <_ZN2sf6StringixEm@plt>
  40570f:	8b 30                	mov    (%rax),%esi
  405711:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405718:	00 
  405719:	e8 a2 d9 ff ff       	call   4030c0 <_ZN2sf6StringC1Ej@plt>
  40571e:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405725:	00 
  405726:	e8 b5 dc ff ff       	call   4033e0 <_ZNK2sf4Text9getStringEv@plt>
  40572b:	48 89 c6             	mov    %rax,%rsi
  40572e:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  405735:	00 
  405736:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  40573d:	00 
  40573e:	e8 8d d9 ff ff       	call   4030d0 <_ZN2sfplERKNS_6StringES2_@plt>
  405743:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  40574a:	00 
  40574b:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405752:	00 
  405753:	e8 38 dd ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405758:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  40575f:	00 
	if (!_M_is_local())
  405760:	4c 39 e7             	cmp    %r12,%rdi
  405763:	74 15                	je     40577a <main+0x17ba>
  405765:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  40576c:	00 
  40576d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405774:	00 
  405775:	e8 b6 da ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40577a:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  405781:	00 
	if (!_M_is_local())
  405782:	4c 39 ff             	cmp    %r15,%rdi
  405785:	74 15                	je     40579c <main+0x17dc>
  405787:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  40578e:	00 
  40578f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405796:	00 
  405797:	e8 94 da ff ff       	call   403230 <_ZdlPvm@plt>
					typedtext = typedtext.toAnsiString().substr(1);
  40579c:	48 8d 6c 24 58       	lea    0x58(%rsp),%rbp
  4057a1:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
  4057a6:	48 89 ef             	mov    %rbp,%rdi
  4057a9:	4c 8d ac 24 10 01 00 	lea    0x110(%rsp),%r13
  4057b0:	00 
  4057b1:	e8 3a dd ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  4057b6:	4c 89 f7             	mov    %r14,%rdi
  4057b9:	e8 32 dd ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  4057be:	4c 89 f2             	mov    %r14,%rdx
  4057c1:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
  4057c8:	00 
  4057c9:	4c 89 ef             	mov    %r13,%rdi
  4057cc:	e8 af dc ff ff       	call   403480 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  4057d1:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4057d8:	ba 01 00 00 00       	mov    $0x1,%edx
  4057dd:	4c 89 ee             	mov    %r13,%rsi
  4057e0:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  4057e7:	00 
  4057e8:	e8 53 da ff ff       	call   403240 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  4057ed:	48 89 ea             	mov    %rbp,%rdx
  4057f0:	48 8d b4 24 30 01 00 	lea    0x130(%rsp),%rsi
  4057f7:	00 
  4057f8:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  4057ff:	00 
  405800:	e8 9b d8 ff ff       	call   4030a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405805:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  40580c:	00 
  40580d:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  405814:	00 
  405815:	e8 36 dc ff ff       	call   403450 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  40581a:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  405821:	00 
	if (!_M_is_local())
  405822:	4c 39 e7             	cmp    %r12,%rdi
  405825:	74 15                	je     40583c <main+0x187c>
  405827:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  40582e:	00 
  40582f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405836:	00 
  405837:	e8 f4 d9 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40583c:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  405843:	00 
	if (!_M_is_local())
  405844:	4c 39 ff             	cmp    %r15,%rdi
  405847:	74 11                	je     40585a <main+0x189a>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405849:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  405850:	00 
  405851:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405855:	e8 d6 d9 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40585a:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  405861:	00 
	if (!_M_is_local())
  405862:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  405869:	00 
  40586a:	48 39 c7             	cmp    %rax,%rdi
  40586d:	74 11                	je     405880 <main+0x18c0>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40586f:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  405876:	00 
  405877:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40587b:	e8 b0 d9 ff ff       	call   403230 <_ZdlPvm@plt>
  405880:	4c 89 f7             	mov    %r14,%rdi
  405883:	e8 b8 da ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  405888:	48 89 ef             	mov    %rbp,%rdi
  40588b:	e8 b0 da ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  405890:	e9 d8 f6 ff ff       	jmp    404f6d <main+0xfad>
  405895:	0f 1f 00             	nopl   (%rax)
      }

      static _GLIBCXX20_CONSTEXPR char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
      {
	if (__n == 0)
  405898:	4d 85 ff             	test   %r15,%r15
  40589b:	0f 85 61 0a 00 00    	jne    406302 <main+0x2342>
  4058a1:	4c 89 e8             	mov    %r13,%rax
  4058a4:	e9 6d fc ff ff       	jmp    405516 <main+0x1556>
  4058a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    _M_data(_M_create(__dnew, size_type(0)));
  4058b0:	31 d2                	xor    %edx,%edx
  4058b2:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  4058b9:	00 
  4058ba:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  4058c1:	00 
  4058c2:	e8 e9 db ff ff       	call   4034b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  4058c7:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4058ce:	00 
  4058cf:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
  4058d2:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
  4058d9:	00 
  4058da:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
  4058e1:	00 
	const _CharT* __start = __str._M_data()
  4058e2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
	  return __s1;
#ifdef __cpp_lib_is_constant_evaluated
	if (std::is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  4058e7:	4c 89 fa             	mov    %r15,%rdx
  4058ea:	48 83 c6 01          	add    $0x1,%rsi
  4058ee:	e8 ed d8 ff ff       	call   4031e0 <memcpy@plt>
	_M_set_length(__dnew);
  4058f3:	4c 8b bc 24 50 01 00 	mov    0x150(%rsp),%r15
  4058fa:	00 
      { return _M_dataplus._M_p; }
  4058fb:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
  405902:	00 
  405903:	e9 0e fc ff ff       	jmp    405516 <main+0x1556>
  405908:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40590f:	00 
					text.setString(text.getString() + typedtext[0]);
  405910:	31 f6                	xor    %esi,%esi
  405912:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  405919:	00 
  40591a:	e8 81 d9 ff ff       	call   4032a0 <_ZN2sf6StringixEm@plt>
  40591f:	8b 30                	mov    (%rax),%esi
  405921:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405928:	00 
  405929:	e8 92 d7 ff ff       	call   4030c0 <_ZN2sf6StringC1Ej@plt>
  40592e:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405935:	00 
  405936:	e8 a5 da ff ff       	call   4033e0 <_ZNK2sf4Text9getStringEv@plt>
  40593b:	48 89 c6             	mov    %rax,%rsi
  40593e:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  405945:	00 
  405946:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  40594d:	00 
  40594e:	e8 7d d7 ff ff       	call   4030d0 <_ZN2sfplERKNS_6StringES2_@plt>
  405953:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  40595a:	00 
  40595b:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405962:	00 
  405963:	e8 28 db ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
  405968:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  40596f:	00 
	if (!_M_is_local())
  405970:	4c 39 e7             	cmp    %r12,%rdi
  405973:	74 15                	je     40598a <main+0x19ca>
  405975:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  40597c:	00 
  40597d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405984:	00 
  405985:	e8 a6 d8 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40598a:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  405991:	00 
	if (!_M_is_local())
  405992:	48 39 df             	cmp    %rbx,%rdi
  405995:	74 15                	je     4059ac <main+0x19ec>
  405997:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  40599e:	00 
  40599f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4059a6:	00 
  4059a7:	e8 84 d8 ff ff       	call   403230 <_ZdlPvm@plt>
					typedtext = typedtext.toAnsiString().substr(1);
  4059ac:	48 8d 6c 24 58       	lea    0x58(%rsp),%rbp
  4059b1:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
  4059b6:	48 89 ef             	mov    %rbp,%rdi
  4059b9:	4c 8d ac 24 10 01 00 	lea    0x110(%rsp),%r13
  4059c0:	00 
  4059c1:	e8 2a db ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  4059c6:	4c 89 f7             	mov    %r14,%rdi
  4059c9:	e8 22 db ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  4059ce:	4c 89 f2             	mov    %r14,%rdx
  4059d1:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
  4059d8:	00 
  4059d9:	4c 89 ef             	mov    %r13,%rdi
  4059dc:	e8 9f da ff ff       	call   403480 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  4059e1:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4059e8:	ba 01 00 00 00       	mov    $0x1,%edx
  4059ed:	4c 89 ee             	mov    %r13,%rsi
  4059f0:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  4059f7:	00 
  4059f8:	e8 43 d8 ff ff       	call   403240 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  4059fd:	48 89 ea             	mov    %rbp,%rdx
  405a00:	48 8d b4 24 30 01 00 	lea    0x130(%rsp),%rsi
  405a07:	00 
  405a08:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405a0f:	00 
  405a10:	e8 8b d6 ff ff       	call   4030a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405a15:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  405a1c:	00 
  405a1d:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  405a24:	00 
  405a25:	e8 26 da ff ff       	call   403450 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405a2a:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  405a31:	00 
	if (!_M_is_local())
  405a32:	4c 39 e7             	cmp    %r12,%rdi
  405a35:	74 15                	je     405a4c <main+0x1a8c>
  405a37:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405a3e:	00 
  405a3f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405a46:	00 
  405a47:	e8 e4 d7 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405a4c:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  405a53:	00 
	if (!_M_is_local())
  405a54:	48 39 df             	cmp    %rbx,%rdi
  405a57:	74 11                	je     405a6a <main+0x1aaa>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405a59:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  405a60:	00 
  405a61:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405a65:	e8 c6 d7 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405a6a:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  405a71:	00 
	if (!_M_is_local())
  405a72:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  405a79:	00 
  405a7a:	48 39 c7             	cmp    %rax,%rdi
  405a7d:	74 11                	je     405a90 <main+0x1ad0>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405a7f:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  405a86:	00 
  405a87:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405a8b:	e8 a0 d7 ff ff       	call   403230 <_ZdlPvm@plt>
  405a90:	4c 89 f7             	mov    %r14,%rdi
  405a93:	e8 a8 d8 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  405a98:	48 89 ef             	mov    %rbp,%rdi
  405a9b:	e8 a0 d8 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  405aa0:	e9 48 f6 ff ff       	jmp    4050ed <main+0x112d>
			window.draw(text);
  405aa5:	ba e0 a2 40 00       	mov    $0x40a2e0,%edx
  405aaa:	48 8d b4 24 90 1b 00 	lea    0x1b90(%rsp),%rsi
  405ab1:	00 
  405ab2:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  405ab9:	00 
  405aba:	e8 61 d9 ff ff       	call   403420 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
			window.display();
  405abf:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  405ac6:	00 
  405ac7:	e8 34 d8 ff ff       	call   403300 <_ZN2sf6Window7displayEv@plt>
  405acc:	e9 af ee ff ff       	jmp    404980 <main+0x9c0>
					text.setString(text.getString() + typedtext[0]);
  405ad1:	31 f6                	xor    %esi,%esi
  405ad3:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  405ada:	00 
  405adb:	e8 c0 d7 ff ff       	call   4032a0 <_ZN2sf6StringixEm@plt>
  405ae0:	8b 30                	mov    (%rax),%esi
  405ae2:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405ae9:	00 
  405aea:	e8 d1 d5 ff ff       	call   4030c0 <_ZN2sf6StringC1Ej@plt>
  405aef:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405af6:	00 
  405af7:	e8 e4 d8 ff ff       	call   4033e0 <_ZNK2sf4Text9getStringEv@plt>
  405afc:	48 89 c6             	mov    %rax,%rsi
  405aff:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  405b06:	00 
  405b07:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405b0e:	00 
  405b0f:	e8 bc d5 ff ff       	call   4030d0 <_ZN2sfplERKNS_6StringES2_@plt>
  405b14:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  405b1b:	00 
  405b1c:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405b23:	00 
  405b24:	e8 67 d9 ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405b29:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  405b30:	00 
	if (!_M_is_local())
  405b31:	4c 39 e7             	cmp    %r12,%rdi
  405b34:	74 15                	je     405b4b <main+0x1b8b>
  405b36:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405b3d:	00 
  405b3e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405b45:	00 
  405b46:	e8 e5 d6 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405b4b:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  405b52:	00 
	if (!_M_is_local())
  405b53:	4c 39 ff             	cmp    %r15,%rdi
  405b56:	74 15                	je     405b6d <main+0x1bad>
  405b58:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  405b5f:	00 
  405b60:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405b67:	00 
  405b68:	e8 c3 d6 ff ff       	call   403230 <_ZdlPvm@plt>
					typedtext = typedtext.toAnsiString().substr(1);
  405b6d:	48 8d 6c 24 58       	lea    0x58(%rsp),%rbp
  405b72:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
  405b77:	48 89 ef             	mov    %rbp,%rdi
  405b7a:	4c 8d ac 24 10 01 00 	lea    0x110(%rsp),%r13
  405b81:	00 
  405b82:	e8 69 d9 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  405b87:	4c 89 f7             	mov    %r14,%rdi
  405b8a:	e8 61 d9 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  405b8f:	4c 89 f2             	mov    %r14,%rdx
  405b92:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
  405b99:	00 
  405b9a:	4c 89 ef             	mov    %r13,%rdi
  405b9d:	e8 de d8 ff ff       	call   403480 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  405ba2:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
  405ba6:	ba 01 00 00 00       	mov    $0x1,%edx
  405bab:	4c 89 ee             	mov    %r13,%rsi
  405bae:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405bb5:	00 
  405bb6:	e8 85 d6 ff ff       	call   403240 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  405bbb:	48 89 ea             	mov    %rbp,%rdx
  405bbe:	48 8d b4 24 30 01 00 	lea    0x130(%rsp),%rsi
  405bc5:	00 
  405bc6:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405bcd:	00 
  405bce:	e8 cd d4 ff ff       	call   4030a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405bd3:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  405bda:	00 
  405bdb:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  405be2:	00 
  405be3:	e8 68 d8 ff ff       	call   403450 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405be8:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  405bef:	00 
	if (!_M_is_local())
  405bf0:	4c 39 e7             	cmp    %r12,%rdi
  405bf3:	74 15                	je     405c0a <main+0x1c4a>
  405bf5:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405bfc:	00 
  405bfd:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405c04:	00 
  405c05:	e8 26 d6 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405c0a:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  405c11:	00 
	if (!_M_is_local())
  405c12:	4c 39 ff             	cmp    %r15,%rdi
  405c15:	74 11                	je     405c28 <main+0x1c68>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405c17:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  405c1e:	00 
  405c1f:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405c23:	e8 08 d6 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405c28:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  405c2f:	00 
	if (!_M_is_local())
  405c30:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  405c37:	00 
  405c38:	48 39 c7             	cmp    %rax,%rdi
  405c3b:	74 11                	je     405c4e <main+0x1c8e>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405c3d:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  405c44:	00 
  405c45:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405c49:	e8 e2 d5 ff ff       	call   403230 <_ZdlPvm@plt>
  405c4e:	4c 89 f7             	mov    %r14,%rdi
  405c51:	e8 ea d6 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  405c56:	48 89 ef             	mov    %rbp,%rdi
  405c59:	e8 e2 d6 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  405c5e:	e9 4a f0 ff ff       	jmp    404cad <main+0xced>
					text.setString(text.getString() + typedtext[0]);
  405c63:	31 f6                	xor    %esi,%esi
  405c65:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  405c6c:	00 
  405c6d:	e8 2e d6 ff ff       	call   4032a0 <_ZN2sf6StringixEm@plt>
  405c72:	8b 30                	mov    (%rax),%esi
  405c74:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405c7b:	00 
  405c7c:	e8 3f d4 ff ff       	call   4030c0 <_ZN2sf6StringC1Ej@plt>
  405c81:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405c88:	00 
  405c89:	e8 52 d7 ff ff       	call   4033e0 <_ZNK2sf4Text9getStringEv@plt>
  405c8e:	48 89 c6             	mov    %rax,%rsi
  405c91:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  405c98:	00 
  405c99:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405ca0:	00 
  405ca1:	e8 2a d4 ff ff       	call   4030d0 <_ZN2sfplERKNS_6StringES2_@plt>
  405ca6:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  405cad:	00 
  405cae:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405cb5:	00 
  405cb6:	e8 d5 d7 ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405cbb:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  405cc2:	00 
	if (!_M_is_local())
  405cc3:	4c 39 e7             	cmp    %r12,%rdi
  405cc6:	74 15                	je     405cdd <main+0x1d1d>
  405cc8:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405ccf:	00 
  405cd0:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405cd7:	00 
  405cd8:	e8 53 d5 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405cdd:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  405ce4:	00 
	if (!_M_is_local())
  405ce5:	4c 39 ff             	cmp    %r15,%rdi
  405ce8:	74 15                	je     405cff <main+0x1d3f>
  405cea:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  405cf1:	00 
  405cf2:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405cf9:	00 
  405cfa:	e8 31 d5 ff ff       	call   403230 <_ZdlPvm@plt>
					typedtext = typedtext.toAnsiString().substr(1);
  405cff:	48 8d 6c 24 58       	lea    0x58(%rsp),%rbp
  405d04:	4c 8d 74 24 50       	lea    0x50(%rsp),%r14
  405d09:	48 89 ef             	mov    %rbp,%rdi
  405d0c:	4c 8d ac 24 10 01 00 	lea    0x110(%rsp),%r13
  405d13:	00 
  405d14:	e8 d7 d7 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  405d19:	4c 89 f7             	mov    %r14,%rdi
  405d1c:	e8 cf d7 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  405d21:	4c 89 f2             	mov    %r14,%rdx
  405d24:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
  405d2b:	00 
  405d2c:	4c 89 ef             	mov    %r13,%rdi
  405d2f:	e8 4c d7 ff ff       	call   403480 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  405d34:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
  405d38:	ba 01 00 00 00       	mov    $0x1,%edx
  405d3d:	4c 89 ee             	mov    %r13,%rsi
  405d40:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  405d47:	00 
  405d48:	e8 f3 d4 ff ff       	call   403240 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  405d4d:	48 89 ea             	mov    %rbp,%rdx
  405d50:	48 8d b4 24 30 01 00 	lea    0x130(%rsp),%rsi
  405d57:	00 
  405d58:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  405d5f:	00 
  405d60:	e8 3b d3 ff ff       	call   4030a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405d65:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  405d6c:	00 
  405d6d:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  405d74:	00 
  405d75:	e8 d6 d6 ff ff       	call   403450 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405d7a:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  405d81:	00 
	if (!_M_is_local())
  405d82:	4c 39 e7             	cmp    %r12,%rdi
  405d85:	74 15                	je     405d9c <main+0x1ddc>
  405d87:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  405d8e:	00 
  405d8f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405d96:	00 
  405d97:	e8 94 d4 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405d9c:	48 8b bc 24 30 01 00 	mov    0x130(%rsp),%rdi
  405da3:	00 
	if (!_M_is_local())
  405da4:	4c 39 ff             	cmp    %r15,%rdi
  405da7:	74 11                	je     405dba <main+0x1dfa>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405da9:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
  405db0:	00 
  405db1:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405db5:	e8 76 d4 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405dba:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
  405dc1:	00 
	if (!_M_is_local())
  405dc2:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
  405dc9:	00 
  405dca:	48 39 c7             	cmp    %rax,%rdi
  405dcd:	74 11                	je     405de0 <main+0x1e20>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405dcf:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
  405dd6:	00 
  405dd7:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405ddb:	e8 50 d4 ff ff       	call   403230 <_ZdlPvm@plt>
  405de0:	4c 89 f7             	mov    %r14,%rdi
  405de3:	e8 58 d5 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  405de8:	48 89 ef             	mov    %rbp,%rdi
  405deb:	e8 50 d5 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
  405df0:	e9 a8 f3 ff ff       	jmp    40519d <main+0x11dd>
  405df5:	b8 f0 9c 40 00       	mov    $0x409cf0,%eax
      { return _M_dataplus._M_p; }
  405dfa:	48 8b bc 24 f0 00 00 	mov    0xf0(%rsp),%rdi
  405e01:	00 
  405e02:	66 48 0f 6e e0       	movq   %rax,%xmm4
	if (!_M_is_local())
  405e07:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
  405e0e:	00 
  405e0f:	0f 16 25 aa 26 00 00 	movhps 0x26aa(%rip),%xmm4        # 4084c0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  405e16:	0f 29 24 24          	movaps %xmm4,(%rsp)
  405e1a:	48 39 c7             	cmp    %rax,%rdi
  405e1d:	74 11                	je     405e30 <main+0x1e70>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405e1f:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
  405e26:	00 
  405e27:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405e2b:	e8 00 d4 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405e30:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
  405e37:	00 
	if (!_M_is_local())
  405e38:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
  405e3f:	00 
  405e40:	48 39 c7             	cmp    %rax,%rdi
  405e43:	74 11                	je     405e56 <main+0x1e96>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405e45:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
  405e4c:	00 
  405e4d:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405e51:	e8 da d3 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405e56:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
  405e5d:	00 
	if (!_M_is_local())
  405e5e:	48 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%rax
  405e65:	00 
  405e66:	48 39 c7             	cmp    %rax,%rdi
  405e69:	74 15                	je     405e80 <main+0x1ec0>
  405e6b:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
  405e72:	00 
  405e73:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405e7a:	00 
  405e7b:	e8 b0 d3 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405e80:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
  405e87:	00 
	if (!_M_is_local())
  405e88:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
  405e8f:	00 
  405e90:	48 39 c7             	cmp    %rax,%rdi
  405e93:	74 15                	je     405eaa <main+0x1eea>
  405e95:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
  405e9c:	00 
  405e9d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405ea4:	00 
  405ea5:	e8 86 d3 ff ff       	call   403230 <_ZdlPvm@plt>
}
  405eaa:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
  405eb1:	00 
  405eb2:	e8 b9 d4 ff ff       	call   403370 <_ZN2sf5MusicD1Ev@plt>
  405eb7:	48 8d bc 24 70 1e 00 	lea    0x1e70(%rsp),%rdi
  405ebe:	00 
  405ebf:	e8 4c 17 00 00       	call   407610 <_ZN2sf4TextD1Ev>
  405ec4:	48 8d bc 24 00 1d 00 	lea    0x1d00(%rsp),%rdi
  405ecb:	00 
  405ecc:	e8 3f 17 00 00       	call   407610 <_ZN2sf4TextD1Ev>
  405ed1:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  405ed8:	00 
  405ed9:	e8 32 17 00 00       	call   407610 <_ZN2sf4TextD1Ev>
  405ede:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
  405ee5:	00 
  405ee6:	e8 85 d3 ff ff       	call   403270 <_ZN2sf4FontD1Ev@plt>
  405eeb:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405ef0:	48 8d bc 24 30 1a 00 	lea    0x1a30(%rsp),%rdi
  405ef7:	00 
  405ef8:	0f 29 94 24 30 1a 00 	movaps %xmm2,0x1a30(%rsp)
  405eff:	00 
  405f00:	e8 5b d1 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405f05:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405f0a:	48 8d bc 24 d0 18 00 	lea    0x18d0(%rsp),%rdi
  405f11:	00 
  405f12:	0f 29 94 24 d0 18 00 	movaps %xmm2,0x18d0(%rsp)
  405f19:	00 
  405f1a:	e8 41 d1 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405f1f:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405f24:	48 8d bc 24 70 17 00 	lea    0x1770(%rsp),%rdi
  405f2b:	00 
  405f2c:	0f 29 94 24 70 17 00 	movaps %xmm2,0x1770(%rsp)
  405f33:	00 
  405f34:	e8 27 d1 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405f39:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405f3e:	48 8d bc 24 10 16 00 	lea    0x1610(%rsp),%rdi
  405f45:	00 
  405f46:	0f 29 94 24 10 16 00 	movaps %xmm2,0x1610(%rsp)
  405f4d:	00 
  405f4e:	e8 0d d1 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405f53:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405f58:	48 8d bc 24 b0 14 00 	lea    0x14b0(%rsp),%rdi
  405f5f:	00 
  405f60:	0f 29 94 24 b0 14 00 	movaps %xmm2,0x14b0(%rsp)
  405f67:	00 
  405f68:	e8 f3 d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405f6d:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405f72:	48 8d bc 24 50 13 00 	lea    0x1350(%rsp),%rdi
  405f79:	00 
  405f7a:	0f 29 94 24 50 13 00 	movaps %xmm2,0x1350(%rsp)
  405f81:	00 
  405f82:	e8 d9 d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405f87:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405f8c:	48 8d bc 24 f0 11 00 	lea    0x11f0(%rsp),%rdi
  405f93:	00 
  405f94:	0f 29 94 24 f0 11 00 	movaps %xmm2,0x11f0(%rsp)
  405f9b:	00 
  405f9c:	e8 bf d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405fa1:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405fa6:	48 8d bc 24 90 10 00 	lea    0x1090(%rsp),%rdi
  405fad:	00 
  405fae:	0f 29 94 24 90 10 00 	movaps %xmm2,0x1090(%rsp)
  405fb5:	00 
  405fb6:	e8 a5 d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405fbb:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405fc0:	48 8d bc 24 30 0f 00 	lea    0xf30(%rsp),%rdi
  405fc7:	00 
  405fc8:	0f 29 94 24 30 0f 00 	movaps %xmm2,0xf30(%rsp)
  405fcf:	00 
  405fd0:	e8 8b d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405fd5:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405fda:	48 8d bc 24 d0 0d 00 	lea    0xdd0(%rsp),%rdi
  405fe1:	00 
  405fe2:	0f 29 94 24 d0 0d 00 	movaps %xmm2,0xdd0(%rsp)
  405fe9:	00 
  405fea:	e8 71 d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  405fef:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  405ff4:	48 8d bc 24 70 0c 00 	lea    0xc70(%rsp),%rdi
  405ffb:	00 
  405ffc:	0f 29 94 24 70 0c 00 	movaps %xmm2,0xc70(%rsp)
  406003:	00 
  406004:	e8 57 d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  406009:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  40600e:	48 8d bc 24 10 0b 00 	lea    0xb10(%rsp),%rdi
  406015:	00 
  406016:	0f 29 94 24 10 0b 00 	movaps %xmm2,0xb10(%rsp)
  40601d:	00 
  40601e:	e8 3d d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  406023:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  406028:	48 8d bc 24 b0 09 00 	lea    0x9b0(%rsp),%rdi
  40602f:	00 
  406030:	0f 29 94 24 b0 09 00 	movaps %xmm2,0x9b0(%rsp)
  406037:	00 
  406038:	e8 23 d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  40603d:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  406042:	48 8d bc 24 50 08 00 	lea    0x850(%rsp),%rdi
  406049:	00 
  40604a:	0f 29 94 24 50 08 00 	movaps %xmm2,0x850(%rsp)
  406051:	00 
  406052:	e8 09 d0 ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  406057:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  40605c:	48 8d bc 24 f0 06 00 	lea    0x6f0(%rsp),%rdi
  406063:	00 
  406064:	0f 29 94 24 f0 06 00 	movaps %xmm2,0x6f0(%rsp)
  40606b:	00 
  40606c:	e8 ef cf ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  406071:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  406076:	48 8d bc 24 90 05 00 	lea    0x590(%rsp),%rdi
  40607d:	00 
  40607e:	0f 29 94 24 90 05 00 	movaps %xmm2,0x590(%rsp)
  406085:	00 
  406086:	e8 d5 cf ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  40608b:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  406090:	48 8d bc 24 30 04 00 	lea    0x430(%rsp),%rdi
  406097:	00 
  406098:	0f 29 94 24 30 04 00 	movaps %xmm2,0x430(%rsp)
  40609f:	00 
  4060a0:	e8 bb cf ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  4060a5:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
  4060aa:	48 8d bc 24 d0 02 00 	lea    0x2d0(%rsp),%rdi
  4060b1:	00 
  4060b2:	0f 29 94 24 d0 02 00 	movaps %xmm2,0x2d0(%rsp)
  4060b9:	00 
  4060ba:	e8 a1 cf ff ff       	call   403060 <_ZN2sf5ShapeD2Ev@plt>
  4060bf:	48 8d bc 24 e0 1f 00 	lea    0x1fe0(%rsp),%rdi
  4060c6:	00 
  4060c7:	e8 a4 d3 ff ff       	call   403470 <_ZN2sf12RenderWindowD1Ev@plt>
  4060cc:	31 c0                	xor    %eax,%eax
  4060ce:	48 81 c4 f8 21 00 00 	add    $0x21f8,%rsp
  4060d5:	5b                   	pop    %rbx
  4060d6:	5d                   	pop    %rbp
  4060d7:	41 5c                	pop    %r12
  4060d9:	41 5d                	pop    %r13
  4060db:	41 5e                	pop    %r14
  4060dd:	41 5f                	pop    %r15
  4060df:	c3                   	ret    
	if (__n == 0)
  4060e0:	4d 85 ed             	test   %r13,%r13
  4060e3:	0f 84 d2 e9 ff ff    	je     404abb <main+0xafb>
      { return _M_dataplus._M_p; }
  4060e9:	4c 89 f7             	mov    %r14,%rdi
  4060ec:	eb 74                	jmp    406162 <main+0x21a2>
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    {
      if (!__s)
	__out.setstate(ios_base::badbit);
      else
	__ostream_insert(__out, __s,
  4060ee:	ba 1e 00 00 00       	mov    $0x1e,%edx
  4060f3:	be b8 82 40 00       	mov    $0x4082b8,%esi
  4060f8:	bf 80 a3 40 00       	mov    $0x40a380,%edi
  4060fd:	e8 7e d1 ff ff       	call   403280 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
   *  for more on this subject.
  */
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    endl(basic_ostream<_CharT, _Traits>& __os)
    { return flush(__os.put(__os.widen('\n'))); }
  406102:	48 8b 05 77 42 00 00 	mov    0x4277(%rip),%rax        # 40a380 <_ZSt4cout@@GLIBCXX_3.4>
  406109:	48 8b 40 e8          	mov    -0x18(%rax),%rax
  40610d:	48 8b a8 70 a4 40 00 	mov    0x40a470(%rax),%rbp

  template<typename _Facet>
    inline const _Facet&
    __check_facet(const _Facet* __f)
    {
      if (!__f)
  406114:	48 85 ed             	test   %rbp,%rbp
  406117:	0f 84 05 02 00 00    	je     406322 <main+0x2362>
       *  @return  The converted character.
      */
      char_type
      widen(char __c) const
      {
	if (_M_widen_ok)
  40611d:	80 7d 38 00          	cmpb   $0x0,0x38(%rbp)
  406121:	0f 84 89 01 00 00    	je     4062b0 <main+0x22f0>
	  return _M_widen[static_cast<unsigned char>(__c)];
  406127:	0f be 75 43          	movsbl 0x43(%rbp),%esi
  40612b:	e9 9a 01 00 00       	jmp    4062ca <main+0x230a>
	    _M_data(_M_create(__dnew, size_type(0)));
  406130:	31 d2                	xor    %edx,%edx
  406132:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  406139:	00 
  40613a:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
  406141:	00 
  406142:	e8 69 d3 ff ff       	call   4034b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  406147:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
  40614e:	00 
  40614f:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
  406152:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
  406159:	00 
  40615a:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
  406161:	00 
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  406162:	4c 89 ea             	mov    %r13,%rdx
  406165:	4c 89 fe             	mov    %r15,%rsi
  406168:	e8 73 d0 ff ff       	call   4031e0 <memcpy@plt>
  40616d:	e9 49 e9 ff ff       	jmp    404abb <main+0xafb>
  406172:	f3 0f 6f 78 10       	movdqu 0x10(%rax),%xmm7
  406177:	0f 29 bc 24 40 01 00 	movaps %xmm7,0x140(%rsp)
  40617e:	00 
  40617f:	e9 d1 e9 ff ff       	jmp    404b55 <main+0xb95>
		printf("Syntax: %s <device file path>\n", argv[0]);
  406184:	48 8b 36             	mov    (%rsi),%rsi
  406187:	bf d8 81 40 00       	mov    $0x4081d8,%edi
  40618c:	31 c0                	xor    %eax,%eax
  40618e:	e8 ad ce ff ff       	call   403040 <printf@plt>
		return -EINVAL;
  406193:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
  406198:	e9 31 ff ff ff       	jmp    4060ce <main+0x210e>
				text.setString("");
  40619d:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  4061a4:	00 
  4061a5:	e8 46 d3 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  4061aa:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  4061b1:	00 
  4061b2:	be 99 80 40 00       	mov    $0x408099,%esi
  4061b7:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  4061be:	00 
  4061bf:	e8 2c cf ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4061c4:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  4061cb:	00 
  4061cc:	48 8d bc 24 90 1b 00 	lea    0x1b90(%rsp),%rdi
  4061d3:	00 
  4061d4:	e8 b7 d2 ff ff       	call   403490 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  4061d9:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  4061e0:	00 
	if (!_M_is_local())
  4061e1:	4c 39 e7             	cmp    %r12,%rdi
  4061e4:	74 15                	je     4061fb <main+0x223b>
  4061e6:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  4061ed:	00 
  4061ee:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4061f5:	00 
  4061f6:	e8 35 d0 ff ff       	call   403230 <_ZdlPvm@plt>
  4061fb:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  406202:	00 
  406203:	e8 38 d1 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
				typedtext.insert(0, "Quarta fase");
  406208:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  40620f:	00 
  406210:	e8 db d2 ff ff       	call   4034f0 <_ZNSt6localeC1Ev@plt>
  406215:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  40621c:	00 
  40621d:	be 10 81 40 00       	mov    $0x408110,%esi
  406222:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
  406229:	00 
  40622a:	e8 c1 ce ff ff       	call   4030f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  40622f:	48 8d 94 24 50 01 00 	lea    0x150(%rsp),%rdx
  406236:	00 
  406237:	31 f6                	xor    %esi,%esi
  406239:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
  406240:	00 
  406241:	e8 7a cf ff ff       	call   4031c0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  406246:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
  40624d:	00 
	if (!_M_is_local())
  40624e:	4c 39 e7             	cmp    %r12,%rdi
  406251:	74 15                	je     406268 <main+0x22a8>
  406253:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
  40625a:	00 
  40625b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406262:	00 
  406263:	e8 c8 cf ff ff       	call   403230 <_ZdlPvm@plt>
  406268:	48 8d bc 24 30 01 00 	lea    0x130(%rsp),%rdi
  40626f:	00 
  406270:	e8 cb d0 ff ff       	call   403340 <_ZNSt6localeD1Ev@plt>
	ioctl(fd, WR_RED_LEDS);
  406275:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
  406279:	be 65 61 00 00       	mov    $0x6165,%esi
  40627e:	31 c0                	xor    %eax,%eax
  406280:	c7 84 24 50 01 00 00 	movl   $0xffff,0x150(%rsp)
  406287:	ff ff 00 00 
  40628b:	89 df                	mov    %ebx,%edi
  40628d:	e8 9e d0 ff ff       	call   403330 <ioctl@plt>
	write(fd, &data, sizeof(data));
  406292:	ba 04 00 00 00       	mov    $0x4,%edx
  406297:	48 8d b4 24 50 01 00 	lea    0x150(%rsp),%rsi
  40629e:	00 
  40629f:	89 df                	mov    %ebx,%edi
  4062a1:	e8 3a ce ff ff       	call   4030e0 <write@plt>
				screen = 4;
  4062a6:	bb 04 00 00 00       	mov    $0x4,%ebx
  4062ab:	e9 5d ec ff ff       	jmp    404f0d <main+0xf4d>
	this->_M_widen_init();
  4062b0:	48 89 ef             	mov    %rbp,%rdi
  4062b3:	e8 d8 cf ff ff       	call   403290 <_ZNKSt5ctypeIcE13_M_widen_initEv@plt>
	return this->do_widen(__c);
  4062b8:	48 8b 45 00          	mov    0x0(%rbp),%rax
  4062bc:	be 0a 00 00 00       	mov    $0xa,%esi
  4062c1:	48 89 ef             	mov    %rbp,%rdi
  4062c4:	ff 50 30             	call   *0x30(%rax)
  4062c7:	0f be f0             	movsbl %al,%esi
  4062ca:	bf 80 a3 40 00       	mov    $0x40a380,%edi
  4062cf:	e8 5c cd ff ff       	call   403030 <_ZNSo3putEc@plt>
  4062d4:	48 89 c7             	mov    %rax,%rdi
   *  This manipulator simply calls the stream's @c flush() member function.
  */
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    flush(basic_ostream<_CharT, _Traits>& __os)
    { return __os.flush(); }
  4062d7:	e8 94 ce ff ff       	call   403170 <_ZNSo5flushEv@plt>
    { return flush(__os.put(__os.widen('\n'))); }
  4062dc:	e9 a0 e5 ff ff       	jmp    404881 <main+0x8c1>
		fprintf(stderr, "Error opening file %s\n", argv[1]);
  4062e1:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  4062e5:	48 8b 3d b4 41 00 00 	mov    0x41b4(%rip),%rdi        # 40a4a0 <stderr@@GLIBC_2.2.5>
  4062ec:	be 83 80 40 00       	mov    $0x408083,%esi
  4062f1:	31 c0                	xor    %eax,%eax
  4062f3:	e8 58 d0 ff ff       	call   403350 <fprintf@plt>
		return -EBUSY;
  4062f8:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
  4062fd:	e9 cc fd ff ff       	jmp    4060ce <main+0x210e>
      { return _M_dataplus._M_p; }
  406302:	4c 89 ef             	mov    %r13,%rdi
  406305:	e9 d8 f5 ff ff       	jmp    4058e2 <main+0x1922>
	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
  40630a:	31 c9                	xor    %ecx,%ecx
  40630c:	ba 01 00 00 00       	mov    $0x1,%edx
  406311:	be e3 80 40 00       	mov    $0x4080e3,%esi
  406316:	31 c0                	xor    %eax,%eax
  406318:	bf 98 83 40 00       	mov    $0x408398,%edi
  40631d:	e8 6e d0 ff ff       	call   403390 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
	__throw_bad_cast();
  406322:	e8 c9 cf ff ff       	call   4032f0 <_ZSt16__throw_bad_castv@plt>
	  __throw_length_error(__N(__s));
  406327:	bf c4 80 40 00       	mov    $0x4080c4,%edi
  40632c:	e8 ef cd ff ff       	call   403120 <_ZSt20__throw_length_errorPKc@plt>
	  std::__throw_logic_error(__N("basic_string::"
  406331:	bf a8 81 40 00       	mov    $0x4081a8,%edi
  406336:	e8 45 ce ff ff       	call   403180 <_ZSt19__throw_logic_errorPKc@plt>
      { return _M_dataplus._M_p; }
  40633b:	48 89 c3             	mov    %rax,%rbx
  40633e:	e9 ce d2 ff ff       	jmp    403611 <main.cold>
  406343:	48 89 c3             	mov    %rax,%rbx
  406346:	e9 e8 d2 ff ff       	jmp    403633 <main.cold+0x22>
  40634b:	48 89 c3             	mov    %rax,%rbx
  40634e:	e9 fe d2 ff ff       	jmp    403651 <main.cold+0x40>
  406353:	48 89 c3             	mov    %rax,%rbx
  406356:	e9 61 d6 ff ff       	jmp    4039bc <main.cold+0x3ab>
				typedtext.insert(0, "Isso faz algum sentido?");
  40635b:	48 89 c3             	mov    %rax,%rbx
  40635e:	e9 7b d6 ff ff       	jmp    4039de <main.cold+0x3cd>
  406363:	48 89 c3             	mov    %rax,%rbx
  406366:	e9 85 d6 ff ff       	jmp    4039f0 <main.cold+0x3df>
				text.setString("");
  40636b:	48 89 c3             	mov    %rax,%rbx
  40636e:	e9 6b d6 ff ff       	jmp    4039de <main.cold+0x3cd>
  406373:	48 89 c3             	mov    %rax,%rbx
  406376:	e9 ed d7 ff ff       	jmp    403b68 <main.cold+0x557>
  40637b:	49 89 c5             	mov    %rax,%r13
  40637e:	e9 19 d8 ff ff       	jmp    403b9c <main.cold+0x58b>
  406383:	48 89 c3             	mov    %rax,%rbx
  406386:	e9 ef d2 ff ff       	jmp    40367a <main.cold+0x69>
  40638b:	48 89 c3             	mov    %rax,%rbx
  40638e:	e9 a3 d6 ff ff       	jmp    403a36 <main.cold+0x425>
  406393:	48 89 c3             	mov    %rax,%rbx
  406396:	e9 ce d6 ff ff       	jmp    403a69 <main.cold+0x458>
  40639b:	48 89 c3             	mov    %rax,%rbx
  40639e:	e9 f5 d6 ff ff       	jmp    403a98 <main.cold+0x487>
  4063a3:	48 89 c5             	mov    %rax,%rbp
  4063a6:	e9 5c d7 ff ff       	jmp    403b07 <main.cold+0x4f6>
					typedtext = typedtext.toAnsiString().substr(1);
  4063ab:	48 89 c3             	mov    %rax,%rbx
  4063ae:	e9 b7 d2 ff ff       	jmp    40366a <main.cold+0x59>
  4063b3:	48 89 c3             	mov    %rax,%rbx
  4063b6:	e9 59 d6 ff ff       	jmp    403a14 <main.cold+0x403>
  4063bb:	48 89 c3             	mov    %rax,%rbx
  4063be:	e9 e9 d7 ff ff       	jmp    403bac <main.cold+0x59b>
}
  4063c3:	48 89 c3             	mov    %rax,%rbx
  4063c6:	e9 4b d3 ff ff       	jmp    403716 <main.cold+0x105>
  4063cb:	48 89 c5             	mov    %rax,%rbp
  4063ce:	e9 5e d7 ff ff       	jmp    403b31 <main.cold+0x520>
  4063d3:	48 89 c3             	mov    %rax,%rbx
  4063d6:	e9 2e d3 ff ff       	jmp    403709 <main.cold+0xf8>
  4063db:	48 89 c3             	mov    %rax,%rbx
  4063de:	e9 f8 d7 ff ff       	jmp    403bdb <main.cold+0x5ca>
  4063e3:	49 89 c5             	mov    %rax,%r13
  4063e6:	e9 8f d7 ff ff       	jmp    403b7a <main.cold+0x569>
  4063eb:	48 89 c3             	mov    %rax,%rbx
  4063ee:	e9 43 d6 ff ff       	jmp    403a36 <main.cold+0x425>
  4063f3:	48 89 c3             	mov    %rax,%rbx
  4063f6:	e9 1e d8 ff ff       	jmp    403c19 <main.cold+0x608>
				typedtext.insert(0, "Quarta fase");
  4063fb:	48 89 c3             	mov    %rax,%rbx
  4063fe:	e9 db d5 ff ff       	jmp    4039de <main.cold+0x3cd>
  406403:	48 89 c3             	mov    %rax,%rbx
  406406:	e9 39 d8 ff ff       	jmp    403c44 <main.cold+0x633>
				text.setString("");
  40640b:	48 89 c3             	mov    %rax,%rbx
  40640e:	e9 cb d5 ff ff       	jmp    4039de <main.cold+0x3cd>
  406413:	48 89 c3             	mov    %rax,%rbx
  406416:	e9 54 d8 ff ff       	jmp    403c6f <main.cold+0x65e>
  40641b:	48 89 c3             	mov    %rax,%rbx
  40641e:	e9 5e d8 ff ff       	jmp    403c81 <main.cold+0x670>
  406423:	48 89 c3             	mov    %rax,%rbx
  406426:	e9 9b d2 ff ff       	jmp    4036c6 <main.cold+0xb5>
  40642b:	48 89 c3             	mov    %rax,%rbx
  40642e:	e9 13 d7 ff ff       	jmp    403b46 <main.cold+0x535>
				text.setString("");
  406433:	48 89 c3             	mov    %rax,%rbx
  406436:	e9 a3 d5 ff ff       	jmp    4039de <main.cold+0x3cd>
  40643b:	48 89 c3             	mov    %rax,%rbx
  40643e:	e9 50 d8 ff ff       	jmp    403c93 <main.cold+0x682>
  406443:	48 89 c3             	mov    %rax,%rbx
  406446:	e9 73 d8 ff ff       	jmp    403cbe <main.cold+0x6ad>
				typedtext.insert(0, "BOOM!!!");
  40644b:	48 89 c3             	mov    %rax,%rbx
  40644e:	e9 8b d5 ff ff       	jmp    4039de <main.cold+0x3cd>
					typedtext = typedtext.toAnsiString().substr(1);
  406453:	48 89 c3             	mov    %rax,%rbx
  406456:	e9 0f d2 ff ff       	jmp    40366a <main.cold+0x59>
  40645b:	48 89 c3             	mov    %rax,%rbx
  40645e:	e9 86 d8 ff ff       	jmp    403ce9 <main.cold+0x6d8>
  406463:	48 89 c3             	mov    %rax,%rbx
  406466:	e9 cb d5 ff ff       	jmp    403a36 <main.cold+0x425>
  40646b:	48 89 c3             	mov    %rax,%rbx
  40646e:	e9 e1 d8 ff ff       	jmp    403d54 <main.cold+0x743>
  406473:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  40647a:	00 
  40647b:	48 89 c5             	mov    %rax,%rbp
  40647e:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  406484:	e9 76 d4 ff ff       	jmp    4038ff <main.cold+0x2ee>
  406489:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  406490:	00 
  406491:	48 89 c5             	mov    %rax,%rbp
  406494:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  40649a:	e9 7e d4 ff ff       	jmp    40391d <main.cold+0x30c>
  40649f:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  4064a6:	00 
  4064a7:	48 89 c5             	mov    %rax,%rbp
  4064aa:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  4064b0:	e9 86 d4 ff ff       	jmp    40393b <main.cold+0x32a>
  4064b5:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  4064bc:	00 
  4064bd:	48 89 c5             	mov    %rax,%rbp
  4064c0:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  4064c6:	e9 26 d3 ff ff       	jmp    4037f1 <main.cold+0x1e0>
  4064cb:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  4064d2:	00 
  4064d3:	48 89 c5             	mov    %rax,%rbp
  4064d6:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  4064dc:	e9 2e d3 ff ff       	jmp    40380f <main.cold+0x1fe>
  4064e1:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  4064e8:	00 
  4064e9:	48 89 c5             	mov    %rax,%rbp
  4064ec:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  4064f2:	e9 36 d3 ff ff       	jmp    40382d <main.cold+0x21c>
  4064f7:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  4064fe:	00 
  4064ff:	48 89 c5             	mov    %rax,%rbp
  406502:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  406508:	e9 3e d3 ff ff       	jmp    40384b <main.cold+0x23a>
  40650d:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  406514:	00 
  406515:	48 89 c5             	mov    %rax,%rbp
  406518:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  40651e:	e9 46 d3 ff ff       	jmp    403869 <main.cold+0x258>
  406523:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  40652a:	00 
  40652b:	48 89 c5             	mov    %rax,%rbp
  40652e:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  406534:	e9 4e d3 ff ff       	jmp    403887 <main.cold+0x276>
  406539:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  406540:	00 
  406541:	48 89 c5             	mov    %rax,%rbp
  406544:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  40654a:	e9 56 d3 ff ff       	jmp    4038a5 <main.cold+0x294>
  40654f:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  406556:	00 
  406557:	48 89 c5             	mov    %rax,%rbp
  40655a:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  406560:	e9 5e d3 ff ff       	jmp    4038c3 <main.cold+0x2b2>
			timer_text.setString(min_string + ":" + sec_string);
  406565:	48 89 c3             	mov    %rax,%rbx
  406568:	e9 05 d1 ff ff       	jmp    403672 <main.cold+0x61>
  40656d:	48 89 c3             	mov    %rax,%rbx
  406570:	e9 0e d8 ff ff       	jmp    403d83 <main.cold+0x772>
  406575:	48 89 c3             	mov    %rax,%rbx
  406578:	e9 6d d8 ff ff       	jmp    403dea <main.cold+0x7d9>
  40657d:	48 89 c3             	mov    %rax,%rbx
  406580:	e9 47 d8 ff ff       	jmp    403dcc <main.cold+0x7bb>
  406585:	48 89 c3             	mov    %rax,%rbx
  406588:	e9 1d d8 ff ff       	jmp    403daa <main.cold+0x799>
  40658d:	48 89 c3             	mov    %rax,%rbx
  406590:	e9 7c d8 ff ff       	jmp    403e11 <main.cold+0x800>
  406595:	48 89 c3             	mov    %rax,%rbx
  406598:	e9 9e d8 ff ff       	jmp    403e3b <main.cold+0x82a>
}
  40659d:	48 89 c3             	mov    %rax,%rbx
  4065a0:	e9 7e d1 ff ff       	jmp    403723 <main.cold+0x112>
					typedtext = typedtext.toAnsiString().substr(1);
  4065a5:	48 89 c3             	mov    %rax,%rbx
  4065a8:	e9 bd d0 ff ff       	jmp    40366a <main.cold+0x59>
  4065ad:	48 89 c3             	mov    %rax,%rbx
  4065b0:	e9 98 d8 ff ff       	jmp    403e4d <main.cold+0x83c>
  4065b5:	48 89 c3             	mov    %rax,%rbx
  4065b8:	e9 bb d8 ff ff       	jmp    403e78 <main.cold+0x867>
  4065bd:	48 89 c3             	mov    %rax,%rbx
  4065c0:	e9 71 d4 ff ff       	jmp    403a36 <main.cold+0x425>
  4065c5:	48 89 c3             	mov    %rax,%rbx
  4065c8:	e9 ed d4 ff ff       	jmp    403aba <main.cold+0x4a9>
  4065cd:	48 89 c3             	mov    %rax,%rbx
  4065d0:	e9 03 d5 ff ff       	jmp    403ad8 <main.cold+0x4c7>
  4065d5:	48 89 c3             	mov    %rax,%rbx
  4065d8:	e9 c6 d8 ff ff       	jmp    403ea3 <main.cold+0x892>
  4065dd:	48 89 c3             	mov    %rax,%rbx
  4065e0:	e9 e0 d8 ff ff       	jmp    403ec5 <main.cold+0x8b4>
  4065e5:	48 89 c3             	mov    %rax,%rbx
  4065e8:	e9 f6 d8 ff ff       	jmp    403ee3 <main.cold+0x8d2>
  4065ed:	48 89 c3             	mov    %rax,%rbx
  4065f0:	e9 41 d7 ff ff       	jmp    403d36 <main.cold+0x725>
					typedtext = typedtext.toAnsiString().substr(1);
  4065f5:	48 89 c3             	mov    %rax,%rbx
  4065f8:	e9 6d d0 ff ff       	jmp    40366a <main.cold+0x59>
  4065fd:	48 89 c3             	mov    %rax,%rbx
  406600:	e9 0d d9 ff ff       	jmp    403f12 <main.cold+0x901>
  406605:	48 89 c3             	mov    %rax,%rbx
  406608:	e9 30 d9 ff ff       	jmp    403f3d <main.cold+0x92c>
						typedtext.insert(0, "Voce deveria saber matematica");
  40660d:	48 89 c3             	mov    %rax,%rbx
  406610:	e9 c9 d3 ff ff       	jmp    4039de <main.cold+0x3cd>
						text.setString("");
  406615:	48 89 c3             	mov    %rax,%rbx
  406618:	e9 c1 d3 ff ff       	jmp    4039de <main.cold+0x3cd>
  40661d:	48 89 c3             	mov    %rax,%rbx
  406620:	e9 ef d6 ff ff       	jmp    403d14 <main.cold+0x703>
}
  406625:	48 89 c3             	mov    %rax,%rbx
  406628:	e9 03 d1 ff ff       	jmp    403730 <main.cold+0x11f>
  40662d:	48 89 c3             	mov    %rax,%rbx
  406630:	e9 33 d9 ff ff       	jmp    403f68 <main.cold+0x957>
  406635:	48 89 c5             	mov    %rax,%rbp
  406638:	e9 10 d1 ff ff       	jmp    40374d <main.cold+0x13c>
  40663d:	48 89 c3             	mov    %rax,%rbx
  406640:	e9 f8 d0 ff ff       	jmp    40373d <main.cold+0x12c>
  406645:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  40664c:	00 
  40664d:	48 89 c5             	mov    %rax,%rbp
  406650:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  406656:	e9 1e d1 ff ff       	jmp    403779 <main.cold+0x168>
  40665b:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  406662:	00 
  406663:	48 89 c5             	mov    %rax,%rbp
  406666:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  40666c:	e9 26 d1 ff ff       	jmp    403797 <main.cold+0x186>
					typedtext = typedtext.toAnsiString().substr(1);
  406671:	48 89 c3             	mov    %rax,%rbx
  406674:	e9 f1 cf ff ff       	jmp    40366a <main.cold+0x59>
  406679:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  406680:	00 
  406681:	48 89 c5             	mov    %rax,%rbp
  406684:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  40668a:	e9 ca d2 ff ff       	jmp    403959 <main.cold+0x348>
}
  40668f:	48 89 c5             	mov    %rax,%rbp
  406692:	e9 e0 d2 ff ff       	jmp    403977 <main.cold+0x366>
  406697:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  40669e:	00 
  40669f:	48 89 c5             	mov    %rax,%rbp
  4066a2:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  4066a8:	e9 34 d2 ff ff       	jmp    4038e1 <main.cold+0x2d0>
  4066ad:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  4066b4:	00 
  4066b5:	48 89 c5             	mov    %rax,%rbp
  4066b8:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  4066be:	e9 10 d1 ff ff       	jmp    4037d3 <main.cold+0x1c2>
  4066c3:	48 89 c3             	mov    %rax,%rbx
  4066c6:	e9 6b d3 ff ff       	jmp    403a36 <main.cold+0x425>
  4066cb:	48 c7 04 24 28 9d 40 	movq   $0x409d28,(%rsp)
  4066d2:	00 
  4066d3:	48 89 c5             	mov    %rax,%rbp
  4066d6:	41 bc f0 9c 40 00    	mov    $0x409cf0,%r12d
  4066dc:	e9 d4 d0 ff ff       	jmp    4037b5 <main.cold+0x1a4>

00000000004066e1 <.annobin_abi_note.c.hot>:
  4066e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4066e8:	00 00 00 
  4066eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004066f0 <_start>:
  4066f0:	f3 0f 1e fa          	endbr64 
  4066f4:	31 ed                	xor    %ebp,%ebp
  4066f6:	49 89 d1             	mov    %rdx,%r9
  4066f9:	5e                   	pop    %rsi
  4066fa:	48 89 e2             	mov    %rsp,%rdx
  4066fd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  406701:	50                   	push   %rax
  406702:	54                   	push   %rsp
  406703:	45 31 c0             	xor    %r8d,%r8d
  406706:	31 c9                	xor    %ecx,%ecx
  406708:	48 c7 c7 c0 3f 40 00 	mov    $0x403fc0,%rdi
  40670f:	ff 15 db 38 00 00    	call   *0x38db(%rip)        # 409ff0 <__libc_start_main@GLIBC_2.34>
  406715:	f4                   	hlt    

0000000000406716 <.annobin_abi_note.c>:
  406716:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40671d:	00 00 00 

0000000000406720 <_dl_relocate_static_pie>:
  406720:	f3 0f 1e fa          	endbr64 
  406724:	c3                   	ret    

0000000000406725 <.annobin__dl_relocate_static_pie.end>:
  406725:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40672c:	00 00 00 
  40672f:	90                   	nop

0000000000406730 <deregister_tm_clones>:
  406730:	b8 90 a2 40 00       	mov    $0x40a290,%eax
  406735:	48 3d 90 a2 40 00    	cmp    $0x40a290,%rax
  40673b:	74 13                	je     406750 <deregister_tm_clones+0x20>
  40673d:	b8 00 00 00 00       	mov    $0x0,%eax
  406742:	48 85 c0             	test   %rax,%rax
  406745:	74 09                	je     406750 <deregister_tm_clones+0x20>
  406747:	bf 90 a2 40 00       	mov    $0x40a290,%edi
  40674c:	ff e0                	jmp    *%rax
  40674e:	66 90                	xchg   %ax,%ax
  406750:	c3                   	ret    
  406751:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  406758:	00 00 00 00 
  40675c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000406760 <register_tm_clones>:
  406760:	be 90 a2 40 00       	mov    $0x40a290,%esi
  406765:	48 81 ee 90 a2 40 00 	sub    $0x40a290,%rsi
  40676c:	48 89 f0             	mov    %rsi,%rax
  40676f:	48 c1 ee 3f          	shr    $0x3f,%rsi
  406773:	48 c1 f8 03          	sar    $0x3,%rax
  406777:	48 01 c6             	add    %rax,%rsi
  40677a:	48 d1 fe             	sar    %rsi
  40677d:	74 11                	je     406790 <register_tm_clones+0x30>
  40677f:	b8 00 00 00 00       	mov    $0x0,%eax
  406784:	48 85 c0             	test   %rax,%rax
  406787:	74 07                	je     406790 <register_tm_clones+0x30>
  406789:	bf 90 a2 40 00       	mov    $0x40a290,%edi
  40678e:	ff e0                	jmp    *%rax
  406790:	c3                   	ret    
  406791:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  406798:	00 00 00 00 
  40679c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004067a0 <__do_global_dtors_aux>:
  4067a0:	f3 0f 1e fa          	endbr64 
  4067a4:	80 3d 01 3d 00 00 00 	cmpb   $0x0,0x3d01(%rip)        # 40a4ac <completed.0>
  4067ab:	75 13                	jne    4067c0 <__do_global_dtors_aux+0x20>
  4067ad:	55                   	push   %rbp
  4067ae:	48 89 e5             	mov    %rsp,%rbp
  4067b1:	e8 7a ff ff ff       	call   406730 <deregister_tm_clones>
  4067b6:	c6 05 ef 3c 00 00 01 	movb   $0x1,0x3cef(%rip)        # 40a4ac <completed.0>
  4067bd:	5d                   	pop    %rbp
  4067be:	c3                   	ret    
  4067bf:	90                   	nop
  4067c0:	c3                   	ret    
  4067c1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4067c8:	00 00 00 00 
  4067cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004067d0 <frame_dummy>:
  4067d0:	f3 0f 1e fa          	endbr64 
  4067d4:	eb 8a                	jmp    406760 <register_tm_clones>
  4067d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4067dd:	00 00 00 

00000000004067e0 <_Z17char_to_stringbitB5cxx11c>:
{
  4067e0:	41 54                	push   %r12
	switch (n)
  4067e2:	83 ee 30             	sub    $0x30,%esi
{
  4067e5:	49 89 fc             	mov    %rdi,%r12
  4067e8:	55                   	push   %rbp
  4067e9:	53                   	push   %rbx
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
  4067ea:	48 8d 5f 10          	lea    0x10(%rdi),%rbx
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  4067ee:	48 89 1f             	mov    %rbx,(%rdi)
      { _M_string_length = __length; }
  4067f1:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  4067f8:	00 
      { __c1 = __c2; }
  4067f9:	c6 47 10 00          	movb   $0x0,0x10(%rdi)
	switch (n)
  4067fd:	40 80 fe 09          	cmp    $0x9,%sil
  406801:	0f 87 dc 00 00 00    	ja     4068e3 <_Z17char_to_stringbitB5cxx11c+0x103>
  406807:	40 0f b6 f6          	movzbl %sil,%esi
       */
      basic_string&
      assign(const _CharT* __s)
      {
	__glibcxx_requires_string(__s);
	return _M_replace(size_type(0), this->size(), __s,
  40680b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  406811:	ff 24 f5 20 81 40 00 	jmp    *0x408120(,%rsi,8)
  406818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40681f:	00 
  406820:	b9 58 80 40 00       	mov    $0x408058,%ecx
  406825:	31 d2                	xor    %edx,%edx
  406827:	31 f6                	xor    %esi,%esi
  406829:	e8 92 cb ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
}
  40682e:	4c 89 e0             	mov    %r12,%rax
  406831:	5b                   	pop    %rbx
  406832:	5d                   	pop    %rbp
  406833:	41 5c                	pop    %r12
  406835:	c3                   	ret    
  406836:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40683d:	00 00 00 
  406840:	b9 61 80 40 00       	mov    $0x408061,%ecx
  406845:	31 d2                	xor    %edx,%edx
  406847:	31 f6                	xor    %esi,%esi
  406849:	e8 72 cb ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40684e:	eb de                	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
  406850:	b9 10 80 40 00       	mov    $0x408010,%ecx
  406855:	31 d2                	xor    %edx,%edx
  406857:	31 f6                	xor    %esi,%esi
  406859:	e8 62 cb ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40685e:	eb ce                	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
  406860:	b9 19 80 40 00       	mov    $0x408019,%ecx
  406865:	31 d2                	xor    %edx,%edx
  406867:	31 f6                	xor    %esi,%esi
  406869:	e8 52 cb ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40686e:	eb be                	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
  406870:	b9 22 80 40 00       	mov    $0x408022,%ecx
  406875:	31 d2                	xor    %edx,%edx
  406877:	31 f6                	xor    %esi,%esi
  406879:	e8 42 cb ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40687e:	eb ae                	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
  406880:	b9 2b 80 40 00       	mov    $0x40802b,%ecx
  406885:	31 d2                	xor    %edx,%edx
  406887:	31 f6                	xor    %esi,%esi
  406889:	e8 32 cb ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40688e:	eb 9e                	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
  406890:	b9 34 80 40 00       	mov    $0x408034,%ecx
  406895:	31 d2                	xor    %edx,%edx
  406897:	31 f6                	xor    %esi,%esi
  406899:	e8 22 cb ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  40689e:	eb 8e                	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
  4068a0:	b9 3d 80 40 00       	mov    $0x40803d,%ecx
  4068a5:	31 d2                	xor    %edx,%edx
  4068a7:	31 f6                	xor    %esi,%esi
  4068a9:	e8 12 cb ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  4068ae:	e9 7b ff ff ff       	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
  4068b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4068b8:	b9 46 80 40 00       	mov    $0x408046,%ecx
  4068bd:	31 d2                	xor    %edx,%edx
  4068bf:	31 f6                	xor    %esi,%esi
  4068c1:	e8 fa ca ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  4068c6:	e9 63 ff ff ff       	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
  4068cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4068d0:	b9 4f 80 40 00       	mov    $0x40804f,%ecx
  4068d5:	31 d2                	xor    %edx,%edx
  4068d7:	31 f6                	xor    %esi,%esi
  4068d9:	e8 e2 ca ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  4068de:	e9 4b ff ff ff       	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
  4068e3:	45 31 c0             	xor    %r8d,%r8d
  4068e6:	b9 99 80 40 00       	mov    $0x408099,%ecx
  4068eb:	31 d2                	xor    %edx,%edx
  4068ed:	31 f6                	xor    %esi,%esi
  4068ef:	e8 cc ca ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  4068f4:	e9 35 ff ff ff       	jmp    40682e <_Z17char_to_stringbitB5cxx11c+0x4e>
      { return _M_dataplus._M_p; }
  4068f9:	48 89 c5             	mov    %rax,%rbp
  4068fc:	e9 0f cc ff ff       	jmp    403510 <_Z17char_to_stringbitB5cxx11c.cold>
  406901:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  406908:	00 00 00 00 
  40690c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000406910 <_Z13writeLDisplayii>:
{
  406910:	55                   	push   %rbp
	ioctl(fd, WR_L_DISPLAY);
  406911:	31 c0                	xor    %eax,%eax
{
  406913:	89 fd                	mov    %edi,%ebp
  406915:	48 83 ec 10          	sub    $0x10,%rsp
  406919:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_L_DISPLAY);
  40691d:	be 63 61 00 00       	mov    $0x6163,%esi
  406922:	e8 09 ca ff ff       	call   403330 <ioctl@plt>
	write(fd, &data, sizeof(data));
  406927:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  40692c:	89 ef                	mov    %ebp,%edi
  40692e:	ba 04 00 00 00       	mov    $0x4,%edx
  406933:	e8 a8 c7 ff ff       	call   4030e0 <write@plt>
}
  406938:	48 83 c4 10          	add    $0x10,%rsp
  40693c:	5d                   	pop    %rbp
  40693d:	c3                   	ret    
  40693e:	66 90                	xchg   %ax,%ax

0000000000406940 <_Z13writeRDisplayii>:
{
  406940:	55                   	push   %rbp
	ioctl(fd, WR_R_DISPLAY);
  406941:	31 c0                	xor    %eax,%eax
{
  406943:	89 fd                	mov    %edi,%ebp
  406945:	48 83 ec 10          	sub    $0x10,%rsp
  406949:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_R_DISPLAY);
  40694d:	be 64 61 00 00       	mov    $0x6164,%esi
  406952:	e8 d9 c9 ff ff       	call   403330 <ioctl@plt>
	write(fd, &data, sizeof(data));
  406957:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  40695c:	89 ef                	mov    %ebp,%edi
  40695e:	ba 04 00 00 00       	mov    $0x4,%edx
  406963:	e8 78 c7 ff ff       	call   4030e0 <write@plt>
}
  406968:	48 83 c4 10          	add    $0x10,%rsp
  40696c:	5d                   	pop    %rbp
  40696d:	c3                   	ret    
  40696e:	66 90                	xchg   %ax,%ax

0000000000406970 <_Z13writeGreenLedii>:
{
  406970:	55                   	push   %rbp
	ioctl(fd, WR_GREEN_LEDS);
  406971:	31 c0                	xor    %eax,%eax
{
  406973:	89 fd                	mov    %edi,%ebp
  406975:	48 83 ec 10          	sub    $0x10,%rsp
  406979:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_GREEN_LEDS);
  40697d:	be 66 61 00 00       	mov    $0x6166,%esi
  406982:	e8 a9 c9 ff ff       	call   403330 <ioctl@plt>
	write(fd, &data, sizeof(data));
  406987:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  40698c:	89 ef                	mov    %ebp,%edi
  40698e:	ba 04 00 00 00       	mov    $0x4,%edx
  406993:	e8 48 c7 ff ff       	call   4030e0 <write@plt>
}
  406998:	48 83 c4 10          	add    $0x10,%rsp
  40699c:	5d                   	pop    %rbp
  40699d:	c3                   	ret    
  40699e:	66 90                	xchg   %ax,%ax

00000000004069a0 <_Z11writeRedLedii>:
{
  4069a0:	55                   	push   %rbp
	ioctl(fd, WR_RED_LEDS);
  4069a1:	31 c0                	xor    %eax,%eax
{
  4069a3:	89 fd                	mov    %edi,%ebp
  4069a5:	48 83 ec 10          	sub    $0x10,%rsp
  4069a9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_RED_LEDS);
  4069ad:	be 65 61 00 00       	mov    $0x6165,%esi
  4069b2:	e8 79 c9 ff ff       	call   403330 <ioctl@plt>
	write(fd, &data, sizeof(data));
  4069b7:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  4069bc:	89 ef                	mov    %ebp,%edi
  4069be:	ba 04 00 00 00       	mov    $0x4,%edx
  4069c3:	e8 18 c7 ff ff       	call   4030e0 <write@plt>
}
  4069c8:	48 83 c4 10          	add    $0x10,%rsp
  4069cc:	5d                   	pop    %rbp
  4069cd:	c3                   	ret    
  4069ce:	66 90                	xchg   %ax,%ax

00000000004069d0 <_Z10readButtonii>:
{
  4069d0:	55                   	push   %rbp
	ioctl(fd, RD_PBUTTONS);
  4069d1:	31 c0                	xor    %eax,%eax
{
  4069d3:	89 fd                	mov    %edi,%ebp
  4069d5:	48 83 ec 10          	sub    $0x10,%rsp
  4069d9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, RD_PBUTTONS);
  4069dd:	be 62 61 00 00       	mov    $0x6162,%esi
  4069e2:	e8 49 c9 ff ff       	call   403330 <ioctl@plt>
	read(fd, &data, 1);
  4069e7:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  4069ec:	89 ef                	mov    %ebp,%edi
  4069ee:	ba 01 00 00 00       	mov    $0x1,%edx
  4069f3:	e8 68 c9 ff ff       	call   403360 <read@plt>
}
  4069f8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  4069fc:	48 83 c4 10          	add    $0x10,%rsp
  406a00:	5d                   	pop    %rbp
  406a01:	c3                   	ret    
  406a02:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  406a09:	00 00 00 00 
  406a0d:	0f 1f 00             	nopl   (%rax)

0000000000406a10 <_Z10readSwitchii>:
{
  406a10:	55                   	push   %rbp
	ioctl(fd, RD_SWITCHES);
  406a11:	31 c0                	xor    %eax,%eax
{
  406a13:	89 fd                	mov    %edi,%ebp
  406a15:	48 83 ec 10          	sub    $0x10,%rsp
  406a19:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, RD_SWITCHES);
  406a1d:	be 61 61 00 00       	mov    $0x6161,%esi
  406a22:	e8 09 c9 ff ff       	call   403330 <ioctl@plt>
	read(fd, &data, 3);
  406a27:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  406a2c:	89 ef                	mov    %ebp,%edi
  406a2e:	ba 03 00 00 00       	mov    $0x3,%edx
  406a33:	e8 28 c9 ff ff       	call   403360 <read@plt>
}
  406a38:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  406a3c:	48 83 c4 10          	add    $0x10,%rsp
  406a40:	5d                   	pop    %rbp
  406a41:	c3                   	ret    
  406a42:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  406a49:	00 00 00 00 
  406a4d:	0f 1f 00             	nopl   (%rax)

0000000000406a50 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_>:
{
  406a50:	41 56                	push   %r14
  406a52:	49 89 d6             	mov    %rdx,%r14
  406a55:	41 55                	push   %r13
  406a57:	49 89 f5             	mov    %rsi,%r13
  406a5a:	41 54                	push   %r12
  406a5c:	55                   	push   %rbp
  406a5d:	89 fd                	mov    %edi,%ebp
  406a5f:	53                   	push   %rbx
  406a60:	48 83 ec 40          	sub    $0x40,%rsp
	bit_string += char_to_stringbit(sec_string[0]);
  406a64:	48 8b 02             	mov    (%rdx),%rax
	: allocator_type(__a), _M_p(__dat) { }
  406a67:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  406a6c:	c6 44 24 10 00       	movb   $0x0,0x10(%rsp)
  406a71:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  406a76:	48 89 1c 24          	mov    %rbx,(%rsp)
      { _M_string_length = __length; }
  406a7a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  406a81:	00 00 
  406a83:	0f be 30             	movsbl (%rax),%esi
  406a86:	e8 55 fd ff ff       	call   4067e0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  406a8b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  406a90:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  406a95:	48 89 e7             	mov    %rsp,%rdi
  406a98:	e8 f3 c5 ff ff       	call   403090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  406a9d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  406aa2:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
  406aa7:	4c 39 e7             	cmp    %r12,%rdi
  406aaa:	74 0e                	je     406aba <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x6a>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406aac:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  406ab1:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406ab5:	e8 76 c7 ff ff       	call   403230 <_ZdlPvm@plt>
	bit_string += char_to_stringbit(sec_string[1]);
  406aba:	49 8b 06             	mov    (%r14),%rax
  406abd:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  406ac2:	0f be 70 01          	movsbl 0x1(%rax),%esi
  406ac6:	e8 15 fd ff ff       	call   4067e0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  406acb:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  406ad0:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  406ad5:	48 89 e7             	mov    %rsp,%rdi
  406ad8:	e8 b3 c5 ff ff       	call   403090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  406add:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  406ae2:	4c 39 e7             	cmp    %r12,%rdi
  406ae5:	74 0e                	je     406af5 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0xa5>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406ae7:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  406aec:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406af0:	e8 3b c7 ff ff       	call   403230 <_ZdlPvm@plt>
	bit_string += char_to_stringbit(min_string[0]);
  406af5:	49 8b 45 00          	mov    0x0(%r13),%rax
  406af9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  406afe:	0f be 30             	movsbl (%rax),%esi
  406b01:	e8 da fc ff ff       	call   4067e0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  406b06:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  406b0b:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  406b10:	48 89 e7             	mov    %rsp,%rdi
  406b13:	e8 78 c5 ff ff       	call   403090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  406b18:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  406b1d:	4c 39 e7             	cmp    %r12,%rdi
  406b20:	74 0e                	je     406b30 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0xe0>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406b22:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  406b27:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406b2b:	e8 00 c7 ff ff       	call   403230 <_ZdlPvm@plt>
	bit_string += char_to_stringbit(min_string[1]);
  406b30:	49 8b 45 00          	mov    0x0(%r13),%rax
  406b34:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  406b39:	0f be 70 01          	movsbl 0x1(%rax),%esi
  406b3d:	e8 9e fc ff ff       	call   4067e0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  406b42:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  406b47:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  406b4c:	48 89 e7             	mov    %rsp,%rdi
  406b4f:	e8 3c c5 ff ff       	call   403090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  406b54:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  406b59:	4c 39 e7             	cmp    %r12,%rdi
  406b5c:	74 0e                	je     406b6c <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x11c>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406b5e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  406b63:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406b67:	e8 c4 c6 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_string_length; }
  406b6c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      { return _M_dataplus._M_p; }
  406b71:	48 8b 04 24          	mov    (%rsp),%rax
    min(const _Tp& __a, const _Tp& __b)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
  406b75:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
  406b79:	0f 85 89 00 00 00    	jne    406c08 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x1b8>
  406b7f:	b9 20 00 00 00       	mov    $0x20,%ecx
  406b84:	48 83 e9 01          	sub    $0x1,%rcx
    {
      typedef unsigned long _WordT;
      _WordT _M_w;

      _GLIBCXX_CONSTEXPR _Base_bitset() _GLIBCXX_NOEXCEPT
      : _M_w(0)
  406b88:	31 f6                	xor    %esi,%esi
      _S_whichbit(size_t __pos) _GLIBCXX_NOEXCEPT
      {  return __pos % _GLIBCXX_BITSET_BITS_PER_WORD; }

      static _GLIBCXX_CONSTEXPR _WordT
      _S_maskbit(size_t __pos) _GLIBCXX_NOEXCEPT
      { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }
  406b8a:	bf 01 00 00 00       	mov    $0x1,%edi
  406b8f:	eb 0a                	jmp    406b9b <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x14b>
  406b91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  406b98:	48 89 d1             	mov    %rdx,%rcx
      {
	reset();
	const size_t __nbits = std::min(_Nb, std::min(__n, size_t(__len - __pos)));
	for (size_t __i = __nbits; __i > 0; --__i)
	  {
	    const _CharT __c = __s[__pos + __nbits - __i];
  406b9b:	0f b6 10             	movzbl (%rax),%edx
	    if (_Traits::eq(__c, __zero))
  406b9e:	80 fa 30             	cmp    $0x30,%dl
  406ba1:	74 0e                	je     406bb1 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x161>
	      ;
	    else if (_Traits::eq(__c, __one))
  406ba3:	80 fa 31             	cmp    $0x31,%dl
  406ba6:	75 77                	jne    406c1f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x1cf>
      { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }
  406ba8:	48 89 fa             	mov    %rdi,%rdx
  406bab:	48 d3 e2             	shl    %cl,%rdx
	this->_M_getword(__pos) |= _Base::_S_maskbit(__pos);
  406bae:	48 09 d6             	or     %rdx,%rsi
	for (size_t __i = __nbits; __i > 0; --__i)
  406bb1:	48 83 c0 01          	add    $0x1,%rax
  406bb5:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
  406bb9:	48 85 c9             	test   %rcx,%rcx
  406bbc:	75 da                	jne    406b98 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x148>
	writeLDisplay(fd, data);
  406bbe:	89 74 24 20          	mov    %esi,0x20(%rsp)
	ioctl(fd, WR_L_DISPLAY);
  406bc2:	89 ef                	mov    %ebp,%edi
  406bc4:	be 63 61 00 00       	mov    $0x6163,%esi
  406bc9:	31 c0                	xor    %eax,%eax
  406bcb:	e8 60 c7 ff ff       	call   403330 <ioctl@plt>
	write(fd, &data, sizeof(data));
  406bd0:	ba 04 00 00 00       	mov    $0x4,%edx
  406bd5:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
  406bda:	89 ef                	mov    %ebp,%edi
  406bdc:	e8 ff c4 ff ff       	call   4030e0 <write@plt>
  406be1:	48 8b 3c 24          	mov    (%rsp),%rdi
	if (!_M_is_local())
  406be5:	48 39 df             	cmp    %rbx,%rdi
  406be8:	74 0e                	je     406bf8 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x1a8>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406bea:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  406bef:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406bf3:	e8 38 c6 ff ff       	call   403230 <_ZdlPvm@plt>
}
  406bf8:	48 83 c4 40          	add    $0x40,%rsp
  406bfc:	5b                   	pop    %rbx
  406bfd:	5d                   	pop    %rbp
  406bfe:	41 5c                	pop    %r12
  406c00:	41 5d                	pop    %r13
  406c02:	41 5e                	pop    %r14
  406c04:	c3                   	ret    
  406c05:	0f 1f 00             	nopl   (%rax)
  406c08:	48 83 f9 1f          	cmp    $0x1f,%rcx
  406c0c:	0f 87 6d ff ff ff    	ja     406b7f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x12f>
  406c12:	48 85 c9             	test   %rcx,%rcx
  406c15:	0f 85 69 ff ff ff    	jne    406b84 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x134>
  406c1b:	31 f6                	xor    %esi,%esi
  406c1d:	eb 9f                	jmp    406bbe <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x16e>
	      _Unchecked_set(__i - 1);
	    else
	      __throw_invalid_argument(__N("bitset::_M_copy_from_ptr"));
  406c1f:	bf 6a 80 40 00       	mov    $0x40806a,%edi
  406c24:	e8 27 c5 ff ff       	call   403150 <_ZSt24__throw_invalid_argumentPKc@plt>
      { return _M_dataplus._M_p; }
  406c29:	48 89 c5             	mov    %rax,%rbp
  406c2c:	e9 fe c8 ff ff       	jmp    40352f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold>
  406c31:	48 89 c5             	mov    %rax,%rbp
  406c34:	e9 2d c9 ff ff       	jmp    403566 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x37>
  406c39:	48 89 c5             	mov    %rax,%rbp
  406c3c:	e9 3f c9 ff ff       	jmp    403580 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x51>
  406c41:	48 89 c5             	mov    %rax,%rbp
  406c44:	e9 56 c9 ff ff       	jmp    40359f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x70>
  406c49:	48 89 c5             	mov    %rax,%rbp
  406c4c:	e9 f6 c8 ff ff       	jmp    403547 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
  406c51:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  406c58:	00 00 00 00 
  406c5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000406c60 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_>:
{
  406c60:	41 57                	push   %r15
  406c62:	41 56                	push   %r14
  406c64:	41 55                	push   %r13
  406c66:	49 89 cd             	mov    %rcx,%r13
  406c69:	41 54                	push   %r12
  406c6b:	49 89 d4             	mov    %rdx,%r12
  406c6e:	55                   	push   %rbp
  406c6f:	53                   	push   %rbx
  406c70:	48 63 de             	movslq %esi,%rbx
  406c73:	49 89 d8             	mov    %rbx,%r8
	unsigned int minutes = number / 60;
  406c76:	48 69 db 89 88 88 88 	imul   $0xffffffff88888889,%rbx,%rbx
  406c7d:	44 89 c0             	mov    %r8d,%eax
  406c80:	c1 f8 1f             	sar    $0x1f,%eax
{
  406c83:	48 83 ec 68          	sub    $0x68,%rsp
	unsigned int minutes = number / 60;
  406c87:	48 c1 eb 20          	shr    $0x20,%rbx
{
  406c8b:	89 7c 24 04          	mov    %edi,0x4(%rsp)
	unsigned int minutes = number / 60;
  406c8f:	44 01 c3             	add    %r8d,%ebx
  406c92:	c1 fb 05             	sar    $0x5,%ebx
  406c95:	29 c3                	sub    %eax,%ebx
	unsigned int seconds = number % 60;
  406c97:	6b c3 3c             	imul   $0x3c,%ebx,%eax
  406c9a:	41 29 c0             	sub    %eax,%r8d
	if (seconds < 10)
  406c9d:	41 83 f8 09          	cmp    $0x9,%r8d
  406ca1:	0f 87 09 02 00 00    	ja     406eb0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x250>
	: allocator_type(__a), _M_p(__dat) { }
  406ca7:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
      { _M_construct(__n, __c); }
  406cac:	31 d2                	xor    %edx,%edx
  406cae:	be 01 00 00 00       	mov    $0x1,%esi
  406cb3:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
  406cb8:	4c 89 ff             	mov    %r15,%rdi
	: allocator_type(__a), _M_p(__dat) { }
  406cbb:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
  406cc0:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  406cc5:	e8 e6 c5 ff ff       	call   4032b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
	  auto const __num = __val * 2;
	  __first[1] = __digits[__num + 1];
	  __first[0] = __digits[__num];
	}
      else
	__first[0] = '0' + __val;
  406cca:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
      basic_string&
      replace(size_type __pos, size_type __n1, const _CharT* __s,
	      size_type __n2)
      {
	__glibcxx_requires_string_len(__s, __n2);
	return _M_replace(_M_check(__pos, "basic_string::replace"),
  406ccf:	31 d2                	xor    %edx,%edx
  406cd1:	31 f6                	xor    %esi,%esi
  406cd3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  406cd8:	b9 5f 80 40 00       	mov    $0x40805f,%ecx
  406cdd:	4c 89 ff             	mov    %r15,%rdi
  406ce0:	41 83 c0 30          	add    $0x30,%r8d
  406ce4:	44 88 00             	mov    %r8b,(%rax)
  406ce7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  406ced:	e8 ce c6 ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  406cf2:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  406cf7:	48 8d 50 10          	lea    0x10(%rax),%rdx
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  406cfb:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      { return _M_dataplus._M_p; }
  406d00:	48 8b 08             	mov    (%rax),%rcx
	if (__str._M_is_local())
  406d03:	48 39 d1             	cmp    %rdx,%rcx
  406d06:	0f 84 d4 06 00 00    	je     4073e0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x780>
      { _M_dataplus._M_p = __p; }
  406d0c:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
	    _M_capacity(__str._M_allocated_capacity);
  406d11:	48 8b 48 10          	mov    0x10(%rax),%rcx
      { _M_allocated_capacity = __capacity; }
  406d15:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
      { return _M_string_length; }
  406d1a:	48 8b 48 08          	mov    0x8(%rax),%rcx
      { _M_string_length = __length; }
  406d1e:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
      { _M_dataplus._M_p = __p; }
  406d23:	48 89 10             	mov    %rdx,(%rax)
  406d26:	c6 40 10 00          	movb   $0x0,0x10(%rax)
      { return _M_dataplus._M_p; }
  406d2a:	49 8b 7d 00          	mov    0x0(%r13),%rdi
      { _M_string_length = __length; }
  406d2e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  406d35:	00 
      { return _M_dataplus._M_p; }
  406d36:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
	if (__str._M_is_local())
  406d3b:	48 39 e8             	cmp    %rbp,%rax
  406d3e:	0f 84 ac 06 00 00    	je     4073f0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x790>
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  406d44:	49 8d 55 10          	lea    0x10(%r13),%rdx
      { return _M_string_length; }
  406d48:	f3 0f 6f 44 24 48    	movdqu 0x48(%rsp),%xmm0
	    if (!_M_is_local())
  406d4e:	48 39 d7             	cmp    %rdx,%rdi
  406d51:	0f 84 09 07 00 00    	je     407460 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x800>
		    __capacity = _M_allocated_capacity;
  406d57:	49 8b 55 10          	mov    0x10(%r13),%rdx
      { _M_dataplus._M_p = __p; }
  406d5b:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  406d5f:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
	    if (__data)
  406d64:	48 85 ff             	test   %rdi,%rdi
  406d67:	0f 84 fc 06 00 00    	je     407469 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x809>
      { _M_dataplus._M_p = __p; }
  406d6d:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
      { _M_allocated_capacity = __capacity; }
  406d72:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
      { _M_string_length = __length; }
  406d77:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  406d7e:	00 00 
  406d80:	c6 07 00             	movb   $0x0,(%rdi)
      { return _M_dataplus._M_p; }
  406d83:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  406d88:	48 39 ef             	cmp    %rbp,%rdi
  406d8b:	74 0e                	je     406d9b <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x13b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406d8d:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  406d92:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406d96:	e8 95 c4 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406d9b:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  406da0:	4c 39 f7             	cmp    %r14,%rdi
  406da3:	74 0e                	je     406db3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x153>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406da5:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  406daa:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406dae:	e8 7d c4 ff ff       	call   403230 <_ZdlPvm@plt>
	  if (__value < (unsigned)__base) return __n;
  406db3:	83 fb 09             	cmp    $0x9,%ebx
  406db6:	0f 86 1e 07 00 00    	jbe    4074da <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x87a>
	  if (__value < __b2) return __n + 1;
  406dbc:	83 fb 63             	cmp    $0x63,%ebx
  406dbf:	0f 86 33 07 00 00    	jbe    4074f8 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x898>
	  if (__value < __b3) return __n + 2;
  406dc5:	81 fb e7 03 00 00    	cmp    $0x3e7,%ebx
  406dcb:	0f 86 3b 07 00 00    	jbe    40750c <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8ac>
	  if (__value < __b4) return __n + 3;
  406dd1:	89 d9                	mov    %ebx,%ecx
  406dd3:	48 89 ca             	mov    %rcx,%rdx
  406dd6:	81 fb 0f 27 00 00    	cmp    $0x270f,%ebx
  406ddc:	0f 86 20 07 00 00    	jbe    407502 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8a2>
	  __value /= __b4;
  406de2:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
  406de9:	c5 6d 34 
      unsigned __n = 1;
  406dec:	be 01 00 00 00       	mov    $0x1,%esi
  406df1:	eb 26                	jmp    406e19 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1b9>
  406df3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	  if (__value < __b2) return __n + 1;
  406df8:	83 fa 63             	cmp    $0x63,%edx
  406dfb:	0f 86 ef 03 00 00    	jbe    4071f0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x590>
	  if (__value < __b3) return __n + 2;
  406e01:	81 fa e7 03 00 00    	cmp    $0x3e7,%edx
  406e07:	0f 86 8b 05 00 00    	jbe    407398 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x738>
	  if (__value < __b4) return __n + 3;
  406e0d:	81 fa 0f 27 00 00    	cmp    $0x270f,%edx
  406e13:	0f 86 87 05 00 00    	jbe    4073a0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x740>
	  __value /= __b4;
  406e19:	48 89 d0             	mov    %rdx,%rax
  406e1c:	48 89 d7             	mov    %rdx,%rdi
  406e1f:	49 f7 e0             	mul    %r8
  406e22:	89 f0                	mov    %esi,%eax
	  __n += 4;
  406e24:	83 c6 04             	add    $0x4,%esi
	  __value /= __b4;
  406e27:	48 c1 ea 0b          	shr    $0xb,%rdx
	  if (__value < (unsigned)__base) return __n;
  406e2b:	48 81 ff 9f 86 01 00 	cmp    $0x1869f,%rdi
  406e32:	77 c4                	ja     406df8 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x198>
      { _M_construct(__n, __c); }
  406e34:	4c 89 ff             	mov    %r15,%rdi
  406e37:	31 d2                	xor    %edx,%edx
  406e39:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
	: allocator_type(__a), _M_p(__dat) { }
  406e3e:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  406e43:	e8 68 c4 ff ff       	call   4032b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      unsigned __pos = __len - 1;
  406e48:	8b 44 24 28          	mov    0x28(%rsp),%eax
      { return _M_dataplus._M_p; }
  406e4c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    __to_chars_10_impl(char* __first, unsigned __len, _Tp __val) noexcept
  406e51:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      unsigned __pos = __len - 1;
  406e56:	8d 70 ff             	lea    -0x1(%rax),%esi
      while (__val >= 100)
  406e59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	  auto const __num = (__val % 100) * 2;
  406e60:	48 69 d1 1f 85 eb 51 	imul   $0x51eb851f,%rcx,%rdx
  406e67:	89 d8                	mov    %ebx,%eax
  406e69:	48 c1 ea 25          	shr    $0x25,%rdx
  406e6d:	6b ca 64             	imul   $0x64,%edx,%ecx
  406e70:	29 c8                	sub    %ecx,%eax
  406e72:	89 d9                	mov    %ebx,%ecx
	  __val /= 100;
  406e74:	89 d3                	mov    %edx,%ebx
	  __first[__pos] = __digits[__num + 1];
  406e76:	89 f2                	mov    %esi,%edx
	  auto const __num = (__val % 100) * 2;
  406e78:	01 c0                	add    %eax,%eax
	  __first[__pos] = __digits[__num + 1];
  406e7a:	44 8d 40 01          	lea    0x1(%rax),%r8d
	  __first[__pos - 1] = __digits[__num];
  406e7e:	0f b6 80 e0 83 40 00 	movzbl 0x4083e0(%rax),%eax
	  __first[__pos] = __digits[__num + 1];
  406e85:	45 0f b6 80 e0 83 40 	movzbl 0x4083e0(%r8),%r8d
  406e8c:	00 
  406e8d:	44 88 04 17          	mov    %r8b,(%rdi,%rdx,1)
	  __first[__pos - 1] = __digits[__num];
  406e91:	8d 56 ff             	lea    -0x1(%rsi),%edx
	  __pos -= 2;
  406e94:	83 ee 02             	sub    $0x2,%esi
	  __first[__pos - 1] = __digits[__num];
  406e97:	88 04 17             	mov    %al,(%rdi,%rdx,1)
      while (__val >= 100)
  406e9a:	81 f9 0f 27 00 00    	cmp    $0x270f,%ecx
  406ea0:	0f 86 72 01 00 00    	jbe    407018 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3b8>
  406ea6:	89 d9                	mov    %ebx,%ecx
  406ea8:	eb b6                	jmp    406e60 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x200>
  406eaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  406eb0:	45 89 c6             	mov    %r8d,%r14d
  406eb3:	44 89 c1             	mov    %r8d,%ecx
      unsigned __n = 1;
  406eb6:	be 01 00 00 00       	mov    $0x1,%esi
	  __value /= __b4;
  406ebb:	48 bf 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%rdi
  406ec2:	c5 6d 34 
  406ec5:	eb 0b                	jmp    406ed2 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x272>
  406ec7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  406ece:	00 00 
  406ed0:	89 d1                	mov    %edx,%ecx
	  if (__value < __b2) return __n + 1;
  406ed2:	83 f9 63             	cmp    $0x63,%ecx
  406ed5:	0f 86 55 05 00 00    	jbe    407430 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7d0>
	  if (__value < __b3) return __n + 2;
  406edb:	81 f9 e7 03 00 00    	cmp    $0x3e7,%ecx
  406ee1:	0f 86 59 05 00 00    	jbe    407440 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7e0>
	  if (__value < __b4) return __n + 3;
  406ee7:	89 ca                	mov    %ecx,%edx
  406ee9:	81 f9 0f 27 00 00    	cmp    $0x270f,%ecx
  406eef:	0f 86 5b 05 00 00    	jbe    407450 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7f0>
	  __value /= __b4;
  406ef5:	48 89 d0             	mov    %rdx,%rax
	  __n += 4;
  406ef8:	83 c6 04             	add    $0x4,%esi
	  __value /= __b4;
  406efb:	48 f7 e7             	mul    %rdi
  406efe:	48 c1 ea 0b          	shr    $0xb,%rdx
	  if (__value < (unsigned)__base) return __n;
  406f02:	81 f9 9f 86 01 00    	cmp    $0x1869f,%ecx
  406f08:	77 c6                	ja     406ed0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x270>
	: allocator_type(__a), _M_p(__dat) { }
  406f0a:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
      { _M_construct(__n, __c); }
  406f0f:	31 d2                	xor    %edx,%edx
  406f11:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  406f16:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
	: allocator_type(__a), _M_p(__dat) { }
  406f1b:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      { _M_construct(__n, __c); }
  406f20:	e8 8b c3 ff ff       	call   4032b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      unsigned __pos = __len - 1;
  406f25:	8b 44 24 48          	mov    0x48(%rsp),%eax
      while (__val >= 100)
  406f29:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
      { return _M_dataplus._M_p; }
  406f2e:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
      unsigned __pos = __len - 1;
  406f33:	8d 70 ff             	lea    -0x1(%rax),%esi
      while (__val >= 100)
  406f36:	41 83 f8 63          	cmp    $0x63,%r8d
  406f3a:	0f 86 f0 03 00 00    	jbe    407330 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6d0>
	  auto const __num = (__val % 100) * 2;
  406f40:	44 89 f2             	mov    %r14d,%edx
  406f43:	44 89 f0             	mov    %r14d,%eax
  406f46:	48 69 d2 1f 85 eb 51 	imul   $0x51eb851f,%rdx,%rdx
  406f4d:	48 c1 ea 25          	shr    $0x25,%rdx
  406f51:	6b fa 64             	imul   $0x64,%edx,%edi
  406f54:	29 f8                	sub    %edi,%eax
  406f56:	44 89 f7             	mov    %r14d,%edi
	  __val /= 100;
  406f59:	41 89 d6             	mov    %edx,%r14d
	  __first[__pos] = __digits[__num + 1];
  406f5c:	89 f2                	mov    %esi,%edx
	  auto const __num = (__val % 100) * 2;
  406f5e:	01 c0                	add    %eax,%eax
	  __first[__pos] = __digits[__num + 1];
  406f60:	44 8d 40 01          	lea    0x1(%rax),%r8d
	  __first[__pos - 1] = __digits[__num];
  406f64:	0f b6 80 e0 83 40 00 	movzbl 0x4083e0(%rax),%eax
	  __first[__pos] = __digits[__num + 1];
  406f6b:	45 0f b6 80 e0 83 40 	movzbl 0x4083e0(%r8),%r8d
  406f72:	00 
  406f73:	44 88 04 11          	mov    %r8b,(%rcx,%rdx,1)
	  __first[__pos - 1] = __digits[__num];
  406f77:	8d 56 ff             	lea    -0x1(%rsi),%edx
	  __pos -= 2;
  406f7a:	83 ee 02             	sub    $0x2,%esi
	  __first[__pos - 1] = __digits[__num];
  406f7d:	88 04 11             	mov    %al,(%rcx,%rdx,1)
      while (__val >= 100)
  406f80:	81 ff 0f 27 00 00    	cmp    $0x270f,%edi
  406f86:	77 b8                	ja     406f40 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2e0>
	__first[0] = '0' + __val;
  406f88:	41 8d 46 30          	lea    0x30(%r14),%eax
      if (__val >= 10)
  406f8c:	81 ff e7 03 00 00    	cmp    $0x3e7,%edi
  406f92:	0f 87 98 03 00 00    	ja     407330 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6d0>
  406f98:	88 01                	mov    %al,(%rcx)
  406f9a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  406f9f:	49 8b 7d 00          	mov    0x0(%r13),%rdi
	if (__str._M_is_local())
  406fa3:	48 39 e8             	cmp    %rbp,%rax
  406fa6:	0f 84 b1 03 00 00    	je     40735d <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6fd>
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  406fac:	49 8d 55 10          	lea    0x10(%r13),%rdx
      { return _M_string_length; }
  406fb0:	f3 0f 6f 44 24 48    	movdqu 0x48(%rsp),%xmm0
	    if (!_M_is_local())
  406fb6:	48 39 d7             	cmp    %rdx,%rdi
  406fb9:	0f 84 c1 04 00 00    	je     407480 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x820>
		    __capacity = _M_allocated_capacity;
  406fbf:	49 8b 55 10          	mov    0x10(%r13),%rdx
      { _M_dataplus._M_p = __p; }
  406fc3:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  406fc7:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
	    if (__data)
  406fcc:	48 85 ff             	test   %rdi,%rdi
  406fcf:	0f 84 b4 04 00 00    	je     407489 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x829>
      { _M_dataplus._M_p = __p; }
  406fd5:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
      { _M_allocated_capacity = __capacity; }
  406fda:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
      { _M_string_length = __length; }
  406fdf:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  406fe6:	00 00 
  406fe8:	c6 07 00             	movb   $0x0,(%rdi)
      { return _M_dataplus._M_p; }
  406feb:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  406ff0:	48 39 ef             	cmp    %rbp,%rdi
  406ff3:	74 0e                	je     407003 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3a3>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406ff5:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  406ffa:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406ffe:	e8 2d c2 ff ff       	call   403230 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  407003:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
  407008:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
  40700d:	e9 a1 fd ff ff       	jmp    406db3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x153>
  407012:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  407018:	81 f9 e7 03 00 00    	cmp    $0x3e7,%ecx
  40701e:	0f 87 ec 01 00 00    	ja     407210 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x5b0>
	__first[0] = '0' + __val;
  407024:	83 c3 30             	add    $0x30,%ebx
  407027:	88 1f                	mov    %bl,(%rdi)
	return _M_replace(_M_check(__pos, "basic_string::replace"),
  407029:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  40702f:	b9 5f 80 40 00       	mov    $0x40805f,%ecx
  407034:	31 d2                	xor    %edx,%edx
  407036:	31 f6                	xor    %esi,%esi
  407038:	4c 89 ff             	mov    %r15,%rdi
  40703b:	e8 80 c3 ff ff       	call   4033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  407040:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      { return _M_dataplus._M_p; }
  407045:	48 8b 08             	mov    (%rax),%rcx
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  407048:	48 8d 50 10          	lea    0x10(%rax),%rdx
	if (__str._M_is_local())
  40704c:	48 39 d1             	cmp    %rdx,%rcx
  40704f:	0f 84 8b 02 00 00    	je     4072e0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x680>
      { _M_dataplus._M_p = __p; }
  407055:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
	    _M_capacity(__str._M_allocated_capacity);
  40705a:	48 8b 48 10          	mov    0x10(%rax),%rcx
      { _M_allocated_capacity = __capacity; }
  40705e:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
      { return _M_string_length; }
  407063:	48 8b 48 08          	mov    0x8(%rax),%rcx
      { _M_string_length = __length; }
  407067:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
      { _M_dataplus._M_p = __p; }
  40706c:	48 89 10             	mov    %rdx,(%rax)
  40706f:	c6 40 10 00          	movb   $0x0,0x10(%rax)
      { return _M_dataplus._M_p; }
  407073:	49 8b 3c 24          	mov    (%r12),%rdi
      { _M_string_length = __length; }
  407077:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  40707e:	00 
      { return _M_dataplus._M_p; }
  40707f:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
	if (__str._M_is_local())
  407084:	48 39 e8             	cmp    %rbp,%rax
  407087:	0f 84 63 02 00 00    	je     4072f0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x690>
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  40708d:	49 8d 54 24 10       	lea    0x10(%r12),%rdx
      { return _M_string_length; }
  407092:	f3 0f 6f 44 24 48    	movdqu 0x48(%rsp),%xmm0
	    if (!_M_is_local())
  407098:	48 39 d7             	cmp    %rdx,%rdi
  40709b:	0f 84 0f 03 00 00    	je     4073b0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x750>
		    __capacity = _M_allocated_capacity;
  4070a1:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
      { _M_dataplus._M_p = __p; }
  4070a6:	49 89 04 24          	mov    %rax,(%r12)
      { _M_string_length = __length; }
  4070aa:	41 0f 11 44 24 08    	movups %xmm0,0x8(%r12)
	    if (__data)
  4070b0:	48 85 ff             	test   %rdi,%rdi
  4070b3:	0f 84 01 03 00 00    	je     4073ba <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x75a>
      { _M_dataplus._M_p = __p; }
  4070b9:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
      { _M_allocated_capacity = __capacity; }
  4070be:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
      { _M_string_length = __length; }
  4070c3:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  4070ca:	00 00 
  4070cc:	c6 07 00             	movb   $0x0,(%rdi)
      { return _M_dataplus._M_p; }
  4070cf:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  4070d4:	48 39 ef             	cmp    %rbp,%rdi
  4070d7:	74 0e                	je     4070e7 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x487>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4070d9:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  4070de:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  4070e2:	e8 49 c1 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4070e7:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4070ec:	4c 39 f7             	cmp    %r14,%rdi
  4070ef:	74 0e                	je     4070ff <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x49f>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4070f1:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4070f6:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4070fa:	e8 31 c1 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4070ff:	49 8b 1c 24          	mov    (%r12),%rbx
      { return _M_string_length; }
  407103:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  407108:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
  40710d:	48 89 d8             	mov    %rbx,%rax
  407110:	4c 01 e0             	add    %r12,%rax
  407113:	74 09                	je     40711e <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x4be>
  407115:	48 85 db             	test   %rbx,%rbx
  407118:	0f 84 fa 03 00 00    	je     407518 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8b8>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  40711e:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
	if (__dnew > size_type(_S_local_capacity))
  407123:	49 83 fc 0f          	cmp    $0xf,%r12
  407127:	0f 87 33 01 00 00    	ja     407260 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x600>
	if (__n == 1)
  40712d:	49 83 fc 01          	cmp    $0x1,%r12
  407131:	0f 85 f9 00 00 00    	jne    407230 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x5d0>
  407137:	0f b6 03             	movzbl (%rbx),%eax
  40713a:	88 44 24 50          	mov    %al,0x50(%rsp)
  40713e:	48 89 e8             	mov    %rbp,%rax
      { _M_string_length = __length; }
  407141:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
  407146:	42 c6 04 20 00       	movb   $0x0,(%rax,%r12,1)
      { return _M_dataplus._M_p; }
  40714b:	4d 8b 65 00          	mov    0x0(%r13),%r12
      { return _M_string_length; }
  40714f:	4d 8b 6d 08          	mov    0x8(%r13),%r13
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  407153:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
  407158:	4c 89 e0             	mov    %r12,%rax
  40715b:	4c 01 e8             	add    %r13,%rax
  40715e:	74 09                	je     407169 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x509>
  407160:	4d 85 e4             	test   %r12,%r12
  407163:	0f 84 b9 03 00 00    	je     407522 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8c2>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  407169:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
	if (__dnew > size_type(_S_local_capacity))
  40716e:	49 83 fd 0f          	cmp    $0xf,%r13
  407172:	0f 87 28 01 00 00    	ja     4072a0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x640>
	if (__n == 1)
  407178:	49 83 fd 01          	cmp    $0x1,%r13
  40717c:	0f 85 c6 00 00 00    	jne    407248 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x5e8>
  407182:	41 0f b6 04 24       	movzbl (%r12),%eax
  407187:	88 44 24 30          	mov    %al,0x30(%rsp)
  40718b:	4c 89 f0             	mov    %r14,%rax
      { _M_string_length = __length; }
  40718e:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
	string_to_display(fd, sec_string, min_string);
  407193:	8b 7c 24 04          	mov    0x4(%rsp),%edi
  407197:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  40719c:	4c 89 fe             	mov    %r15,%rsi
  40719f:	42 c6 04 28 00       	movb   $0x0,(%rax,%r13,1)
  4071a4:	e8 a7 f8 ff ff       	call   406a50 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_>
      { return _M_dataplus._M_p; }
  4071a9:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4071ae:	4c 39 f7             	cmp    %r14,%rdi
  4071b1:	74 0e                	je     4071c1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x561>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4071b3:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4071b8:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4071bc:	e8 6f c0 ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4071c1:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  4071c6:	48 39 ef             	cmp    %rbp,%rdi
  4071c9:	74 0e                	je     4071d9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x579>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4071cb:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  4071d0:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4071d4:	e8 57 c0 ff ff       	call   403230 <_ZdlPvm@plt>
}
  4071d9:	48 83 c4 68          	add    $0x68,%rsp
  4071dd:	5b                   	pop    %rbx
  4071de:	5d                   	pop    %rbp
  4071df:	41 5c                	pop    %r12
  4071e1:	41 5d                	pop    %r13
  4071e3:	41 5e                	pop    %r14
  4071e5:	41 5f                	pop    %r15
  4071e7:	c3                   	ret    
  4071e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4071ef:	00 
  }

  inline string
  to_string(unsigned __val)
  {
    string __str(__detail::__to_chars_len(__val), '\0');
  4071f0:	8d 70 05             	lea    0x5(%rax),%esi
      { _M_construct(__n, __c); }
  4071f3:	4c 89 ff             	mov    %r15,%rdi
  4071f6:	31 d2                	xor    %edx,%edx
	: allocator_type(__a), _M_p(__dat) { }
  4071f8:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  4071fd:	e8 ae c0 ff ff       	call   4032b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      { return _M_dataplus._M_p; }
  407202:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
      while (__val >= 100)
  407207:	83 fb 63             	cmp    $0x63,%ebx
  40720a:	0f 87 c0 01 00 00    	ja     4073d0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x770>
	  auto const __num = __val * 2;
  407210:	01 db                	add    %ebx,%ebx
	  __first[1] = __digits[__num + 1];
  407212:	8d 43 01             	lea    0x1(%rbx),%eax
	  __first[0] = __digits[__num];
  407215:	0f b6 9b e0 83 40 00 	movzbl 0x4083e0(%rbx),%ebx
	  __first[1] = __digits[__num + 1];
  40721c:	0f b6 80 e0 83 40 00 	movzbl 0x4083e0(%rax),%eax
  407223:	88 47 01             	mov    %al,0x1(%rdi)
  407226:	e9 fc fd ff ff       	jmp    407027 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3c7>
  40722b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	if (__n == 0)
  407230:	4d 85 e4             	test   %r12,%r12
  407233:	0f 85 fb 02 00 00    	jne    407534 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8d4>
  407239:	48 89 e8             	mov    %rbp,%rax
  40723c:	e9 00 ff ff ff       	jmp    407141 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x4e1>
  407241:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  407248:	4d 85 ed             	test   %r13,%r13
  40724b:	0f 85 db 02 00 00    	jne    40752c <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8cc>
  407251:	4c 89 f0             	mov    %r14,%rax
  407254:	e9 35 ff ff ff       	jmp    40718e <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x52e>
  407259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    _M_data(_M_create(__dnew, size_type(0)));
  407260:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  407265:	31 d2                	xor    %edx,%edx
  407267:	4c 89 fe             	mov    %r15,%rsi
  40726a:	e8 41 c2 ff ff       	call   4034b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  40726f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  407274:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
  407277:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40727c:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  407281:	4c 89 e2             	mov    %r12,%rdx
  407284:	48 89 de             	mov    %rbx,%rsi
  407287:	e8 54 bf ff ff       	call   4031e0 <memcpy@plt>
	_M_set_length(__dnew);
  40728c:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
      { return _M_dataplus._M_p; }
  407291:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  407296:	e9 a6 fe ff ff       	jmp    407141 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x4e1>
  40729b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    _M_data(_M_create(__dnew, size_type(0)));
  4072a0:	31 d2                	xor    %edx,%edx
  4072a2:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  4072a7:	4c 89 ff             	mov    %r15,%rdi
  4072aa:	e8 01 c2 ff ff       	call   4034b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  4072af:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  4072b4:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
  4072b7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4072bc:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  4072c1:	4c 89 ea             	mov    %r13,%rdx
  4072c4:	4c 89 e6             	mov    %r12,%rsi
  4072c7:	e8 14 bf ff ff       	call   4031e0 <memcpy@plt>
	_M_set_length(__dnew);
  4072cc:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
      { return _M_dataplus._M_p; }
  4072d1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  4072d6:	e9 b3 fe ff ff       	jmp    40718e <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x52e>
  4072db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4072e0:	f3 0f 6f 48 10       	movdqu 0x10(%rax),%xmm1
  4072e5:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
  4072ea:	e9 74 fd ff ff       	jmp    407063 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x403>
  4072ef:	90                   	nop
      { return _M_string_length; }
  4072f0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
		if (__str.size())
  4072f5:	48 85 d2             	test   %rdx,%rdx
  4072f8:	74 1b                	je     407315 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6b5>
	if (__n == 1)
  4072fa:	48 83 fa 01          	cmp    $0x1,%rdx
  4072fe:	0f 84 c1 01 00 00    	je     4074c5 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x865>
  407304:	48 89 ee             	mov    %rbp,%rsi
  407307:	e8 d4 be ff ff       	call   4031e0 <memcpy@plt>
      { return _M_string_length; }
  40730c:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  407311:	49 8b 3c 24          	mov    (%r12),%rdi
      { _M_string_length = __length; }
  407315:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
      { __c1 = __c2; }
  40731a:	c6 04 17 00          	movb   $0x0,(%rdi,%rdx,1)
      { return _M_dataplus._M_p; }
  40731e:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
      }
  407323:	e9 9b fd ff ff       	jmp    4070c3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x463>
  407328:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40732f:	00 
	  auto const __num = __val * 2;
  407330:	45 01 f6             	add    %r14d,%r14d
	  __first[1] = __digits[__num + 1];
  407333:	41 8d 46 01          	lea    0x1(%r14),%eax
  407337:	0f b6 80 e0 83 40 00 	movzbl 0x4083e0(%rax),%eax
  40733e:	88 41 01             	mov    %al,0x1(%rcx)
	  __first[0] = __digits[__num];
  407341:	41 0f b6 86 e0 83 40 	movzbl 0x4083e0(%r14),%eax
  407348:	00 
  407349:	88 01                	mov    %al,(%rcx)
      { return _M_dataplus._M_p; }
  40734b:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  407350:	49 8b 7d 00          	mov    0x0(%r13),%rdi
	if (__str._M_is_local())
  407354:	48 39 e8             	cmp    %rbp,%rax
  407357:	0f 85 4f fc ff ff    	jne    406fac <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x34c>
      { return _M_string_length; }
  40735d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
		if (__str.size())
  407362:	48 85 d2             	test   %rdx,%rdx
  407365:	74 1b                	je     407382 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x722>
	if (__n == 1)
  407367:	48 83 fa 01          	cmp    $0x1,%rdx
  40736b:	0f 84 3f 01 00 00    	je     4074b0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x850>
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  407371:	48 89 ee             	mov    %rbp,%rsi
  407374:	e8 67 be ff ff       	call   4031e0 <memcpy@plt>
      { return _M_string_length; }
  407379:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  40737e:	49 8b 7d 00          	mov    0x0(%r13),%rdi
      { _M_string_length = __length; }
  407382:	49 89 55 08          	mov    %rdx,0x8(%r13)
      { __c1 = __c2; }
  407386:	c6 04 17 00          	movb   $0x0,(%rdi,%rdx,1)
      { return _M_dataplus._M_p; }
  40738a:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
      }
  40738f:	e9 4b fc ff ff       	jmp    406fdf <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x37f>
  407394:	0f 1f 40 00          	nopl   0x0(%rax)
    string __str(__detail::__to_chars_len(__val), '\0');
  407398:	8d 70 06             	lea    0x6(%rax),%esi
  40739b:	e9 94 fa ff ff       	jmp    406e34 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
  4073a0:	8d 70 07             	lea    0x7(%rax),%esi
  4073a3:	e9 8c fa ff ff       	jmp    406e34 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
  4073a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4073af:	00 
      { _M_dataplus._M_p = __p; }
  4073b0:	49 89 04 24          	mov    %rax,(%r12)
      { _M_string_length = __length; }
  4073b4:	41 0f 11 44 24 08    	movups %xmm0,0x8(%r12)
      { _M_dataplus._M_p = __p; }
  4073ba:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
  4073bf:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  4073c4:	48 89 ef             	mov    %rbp,%rdi
  4073c7:	e9 f7 fc ff ff       	jmp    4070c3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x463>
  4073cc:	0f 1f 40 00          	nopl   0x0(%rax)
      unsigned __pos = __len - 1;
  4073d0:	8b 44 24 28          	mov    0x28(%rsp),%eax
  4073d4:	89 d9                	mov    %ebx,%ecx
  4073d6:	8d 70 ff             	lea    -0x1(%rax),%esi
  4073d9:	e9 82 fa ff ff       	jmp    406e60 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x200>
  4073de:	66 90                	xchg   %ax,%ax
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  4073e0:	f3 0f 6f 50 10       	movdqu 0x10(%rax),%xmm2
  4073e5:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
  4073ea:	e9 2b f9 ff ff       	jmp    406d1a <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0xba>
  4073ef:	90                   	nop
      { return _M_string_length; }
  4073f0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
		if (__str.size())
  4073f5:	48 85 d2             	test   %rdx,%rdx
  4073f8:	74 1b                	je     407415 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7b5>
	if (__n == 1)
  4073fa:	48 83 fa 01          	cmp    $0x1,%rdx
  4073fe:	0f 84 97 00 00 00    	je     40749b <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x83b>
  407404:	48 89 ee             	mov    %rbp,%rsi
  407407:	e8 d4 bd ff ff       	call   4031e0 <memcpy@plt>
      { return _M_string_length; }
  40740c:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  407411:	49 8b 7d 00          	mov    0x0(%r13),%rdi
      { _M_string_length = __length; }
  407415:	49 89 55 08          	mov    %rdx,0x8(%r13)
      { __c1 = __c2; }
  407419:	c6 04 17 00          	movb   $0x0,(%rdi,%rdx,1)
      { return _M_dataplus._M_p; }
  40741d:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
      }
  407422:	e9 50 f9 ff ff       	jmp    406d77 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x117>
  407427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40742e:	00 00 
	  if (__value < __b2) return __n + 1;
  407430:	83 c6 01             	add    $0x1,%esi
  407433:	e9 d2 fa ff ff       	jmp    406f0a <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2aa>
  407438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40743f:	00 
	  if (__value < __b3) return __n + 2;
  407440:	83 c6 02             	add    $0x2,%esi
  407443:	e9 c2 fa ff ff       	jmp    406f0a <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2aa>
  407448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40744f:	00 
	  if (__value < __b4) return __n + 3;
  407450:	83 c6 03             	add    $0x3,%esi
  407453:	e9 b2 fa ff ff       	jmp    406f0a <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2aa>
  407458:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40745f:	00 
      { _M_dataplus._M_p = __p; }
  407460:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  407464:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
      { _M_dataplus._M_p = __p; }
  407469:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
  40746e:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  407473:	48 89 ef             	mov    %rbp,%rdi
  407476:	e9 fc f8 ff ff       	jmp    406d77 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x117>
  40747b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407480:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  407484:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
      { _M_dataplus._M_p = __p; }
  407489:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
  40748e:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  407493:	48 89 ef             	mov    %rbp,%rdi
  407496:	e9 44 fb ff ff       	jmp    406fdf <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x37f>
  40749b:	0f b6 44 24 50       	movzbl 0x50(%rsp),%eax
  4074a0:	88 07                	mov    %al,(%rdi)
      { return _M_string_length; }
  4074a2:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  4074a7:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  4074ab:	e9 65 ff ff ff       	jmp    407415 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7b5>
  4074b0:	0f b6 44 24 50       	movzbl 0x50(%rsp),%eax
  4074b5:	88 07                	mov    %al,(%rdi)
      { return _M_string_length; }
  4074b7:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  4074bc:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  4074c0:	e9 bd fe ff ff       	jmp    407382 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x722>
  4074c5:	0f b6 44 24 50       	movzbl 0x50(%rsp),%eax
  4074ca:	88 07                	mov    %al,(%rdi)
      { return _M_string_length; }
  4074cc:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  4074d1:	49 8b 3c 24          	mov    (%r12),%rdi
  4074d5:	e9 3b fe ff ff       	jmp    407315 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6b5>
      { _M_construct(__n, __c); }
  4074da:	4c 89 ff             	mov    %r15,%rdi
  4074dd:	31 d2                	xor    %edx,%edx
  4074df:	be 01 00 00 00       	mov    $0x1,%esi
	: allocator_type(__a), _M_p(__dat) { }
  4074e4:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  4074e9:	e8 c2 bd ff ff       	call   4032b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      { return _M_dataplus._M_p; }
  4074ee:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
      while (__val >= 100)
  4074f3:	e9 2c fb ff ff       	jmp    407024 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3c4>
	  if (__value < __b2) return __n + 1;
  4074f8:	be 02 00 00 00       	mov    $0x2,%esi
  4074fd:	e9 f1 fc ff ff       	jmp    4071f3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x593>
	  if (__value < __b4) return __n + 3;
  407502:	be 04 00 00 00       	mov    $0x4,%esi
  407507:	e9 28 f9 ff ff       	jmp    406e34 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
	  if (__value < __b3) return __n + 2;
  40750c:	be 03 00 00 00       	mov    $0x3,%esi
  407511:	89 d9                	mov    %ebx,%ecx
  407513:	e9 1c f9 ff ff       	jmp    406e34 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
	  std::__throw_logic_error(__N("basic_string::"
  407518:	bf a8 81 40 00       	mov    $0x4081a8,%edi
  40751d:	e8 5e bc ff ff       	call   403180 <_ZSt19__throw_logic_errorPKc@plt>
  407522:	bf a8 81 40 00       	mov    $0x4081a8,%edi
  407527:	e8 54 bc ff ff       	call   403180 <_ZSt19__throw_logic_errorPKc@plt>
  40752c:	4c 89 f7             	mov    %r14,%rdi
  40752f:	e9 8d fd ff ff       	jmp    4072c1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x661>
  407534:	48 89 ef             	mov    %rbp,%rdi
  407537:	e9 45 fd ff ff       	jmp    407281 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x621>
  40753c:	49 89 c4             	mov    %rax,%r12
  40753f:	e9 8d c0 ff ff       	jmp    4035d1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x18>
  407544:	49 89 c4             	mov    %rax,%r12
  407547:	e9 6d c0 ff ff       	jmp    4035b9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold>
  40754c:	48 89 c5             	mov    %rax,%rbp
  40754f:	e9 9d c0 ff ff       	jmp    4035f1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x38>
  407554:	48 89 c5             	mov    %rax,%rbp
  407557:	e9 95 c0 ff ff       	jmp    4035f1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x38>
  40755c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
  407560:	41 55                	push   %r13
  407562:	41 54                	push   %r12
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
  407564:	4c 8d 67 10          	lea    0x10(%rdi),%r12
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
  407568:	55                   	push   %rbp
  407569:	53                   	push   %rbx
  40756a:	48 83 ec 18          	sub    $0x18,%rsp
	: allocator_type(__a), _M_p(__dat) { }
  40756e:	4c 89 27             	mov    %r12,(%rdi)
	const _CharT* __end = __s ? __s + traits_type::length(__s)
  407571:	48 85 f6             	test   %rsi,%rsi
  407574:	0f 84 8c 00 00 00    	je     407606 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0xa6>
  40757a:	48 89 fb             	mov    %rdi,%rbx
	return __builtin_strlen(__s);
  40757d:	48 89 f7             	mov    %rsi,%rdi
  407580:	48 89 f5             	mov    %rsi,%rbp
  407583:	e8 88 bb ff ff       	call   403110 <strlen@plt>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  407588:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40758d:	49 89 c5             	mov    %rax,%r13
	if (__dnew > size_type(_S_local_capacity))
  407590:	48 83 f8 0f          	cmp    $0xf,%rax
  407594:	77 3a                	ja     4075d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x70>
	if (__n == 1)
  407596:	48 83 f8 01          	cmp    $0x1,%rax
  40759a:	75 24                	jne    4075c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x60>
      { __c1 = __c2; }
  40759c:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
  4075a0:	88 53 10             	mov    %dl,0x10(%rbx)
      { _M_string_length = __length; }
  4075a3:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4075a7:	41 c6 04 04 00       	movb   $0x0,(%r12,%rax,1)
      }
  4075ac:	48 83 c4 18          	add    $0x18,%rsp
  4075b0:	5b                   	pop    %rbx
  4075b1:	5d                   	pop    %rbp
  4075b2:	41 5c                	pop    %r12
  4075b4:	41 5d                	pop    %r13
  4075b6:	c3                   	ret    
  4075b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4075be:	00 00 
	if (__n == 0)
  4075c0:	48 85 c0             	test   %rax,%rax
  4075c3:	74 de                	je     4075a3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x43>
  4075c5:	eb 27                	jmp    4075ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x8e>
  4075c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4075ce:	00 00 
	    _M_data(_M_create(__dnew, size_type(0)));
  4075d0:	31 d2                	xor    %edx,%edx
  4075d2:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
  4075d7:	48 89 df             	mov    %rbx,%rdi
  4075da:	e8 d1 be ff ff       	call   4034b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  4075df:	48 89 03             	mov    %rax,(%rbx)
  4075e2:	49 89 c4             	mov    %rax,%r12
      { _M_allocated_capacity = __capacity; }
  4075e5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4075ea:	48 89 43 10          	mov    %rax,0x10(%rbx)
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  4075ee:	4c 89 e7             	mov    %r12,%rdi
  4075f1:	4c 89 ea             	mov    %r13,%rdx
  4075f4:	48 89 ee             	mov    %rbp,%rsi
  4075f7:	e8 e4 bb ff ff       	call   4031e0 <memcpy@plt>
	_M_set_length(__dnew);
  4075fc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
      { return _M_dataplus._M_p; }
  407601:	4c 8b 23             	mov    (%rbx),%r12
  407604:	eb 9d                	jmp    4075a3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x43>
	  std::__throw_logic_error(__N("basic_string::"
  407606:	bf a8 81 40 00       	mov    $0x4081a8,%edi
  40760b:	e8 70 bb ff ff       	call   403180 <_ZSt19__throw_logic_errorPKc@plt>

0000000000407610 <_ZN2sf4TextD1Ev>:
{
////////////////////////////////////////////////////////////
/// \brief Graphical text that can be drawn to a render target
///
////////////////////////////////////////////////////////////
class SFML_GRAPHICS_API Text : public Drawable, public Transformable
  407610:	b8 50 9d 40 00       	mov    $0x409d50,%eax
  407615:	53                   	push   %rbx
  407616:	48 89 fb             	mov    %rdi,%rbx
{
////////////////////////////////////////////////////////////
/// \brief Define a set of one or more 2D primitives
///
////////////////////////////////////////////////////////////
class SFML_GRAPHICS_API VertexArray : public Drawable
  407619:	48 c7 87 28 01 00 00 	movq   $0x409d98,0x128(%rdi)
  407620:	98 9d 40 00 
  407624:	66 48 0f 6e c0       	movq   %rax,%xmm0
  407629:	0f 16 05 80 0e 00 00 	movhps 0xe80(%rip),%xmm0        # 4084b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  407630:	0f 11 07             	movups %xmm0,(%rdi)
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  407633:	48 8b bf 30 01 00 00 	mov    0x130(%rdi),%rdi
	if (__p)
  40763a:	48 85 ff             	test   %rdi,%rdi
  40763d:	74 0f                	je     40764e <_ZN2sf4TextD1Ev+0x3e>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  40763f:	48 8b b3 40 01 00 00 	mov    0x140(%rbx),%rsi
  407646:	48 29 fe             	sub    %rdi,%rsi
  407649:	e8 e2 bb ff ff       	call   403230 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  40764e:	48 8b bb 08 01 00 00 	mov    0x108(%rbx),%rdi
  407655:	48 c7 83 00 01 00 00 	movq   $0x409d98,0x100(%rbx)
  40765c:	98 9d 40 00 
	if (__p)
  407660:	48 85 ff             	test   %rdi,%rdi
  407663:	74 0f                	je     407674 <_ZN2sf4TextD1Ev+0x64>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  407665:	48 8b b3 18 01 00 00 	mov    0x118(%rbx),%rsi
  40766c:	48 29 fe             	sub    %rdi,%rsi
  40766f:	e8 bc bb ff ff       	call   403230 <_ZdlPvm@plt>
  407674:	48 8b bb b8 00 00 00 	mov    0xb8(%rbx),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  40767b:	48 8d 83 c8 00 00 00 	lea    0xc8(%rbx),%rax
	if (!_M_is_local())
  407682:	48 39 c7             	cmp    %rax,%rdi
  407685:	74 14                	je     40769b <_ZN2sf4TextD1Ev+0x8b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  407687:	48 8b 83 c8 00 00 00 	mov    0xc8(%rbx),%rax
  40768e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  407695:	00 
  407696:	e8 95 bb ff ff       	call   403230 <_ZdlPvm@plt>
  40769b:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  40769f:	5b                   	pop    %rbx
  4076a0:	e9 8b ba ff ff       	jmp    403130 <_ZN2sf13TransformableD2Ev@plt>
  4076a5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4076ac:	00 00 00 00 

00000000004076b0 <_ZThn8_N2sf4TextD1Ev>:
  4076b0:	b8 50 9d 40 00       	mov    $0x409d50,%eax
  4076b5:	55                   	push   %rbp
  4076b6:	48 89 fd             	mov    %rdi,%rbp
  4076b9:	48 c7 87 20 01 00 00 	movq   $0x409d98,0x120(%rdi)
  4076c0:	98 9d 40 00 
  4076c4:	66 48 0f 6e c0       	movq   %rax,%xmm0
  4076c9:	0f 16 05 e0 0d 00 00 	movhps 0xde0(%rip),%xmm0        # 4084b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  4076d0:	0f 11 47 f8          	movups %xmm0,-0x8(%rdi)
  4076d4:	48 8b bf 28 01 00 00 	mov    0x128(%rdi),%rdi
  4076db:	48 85 ff             	test   %rdi,%rdi
  4076de:	74 0f                	je     4076ef <_ZThn8_N2sf4TextD1Ev+0x3f>
  4076e0:	48 8b b5 38 01 00 00 	mov    0x138(%rbp),%rsi
  4076e7:	48 29 fe             	sub    %rdi,%rsi
  4076ea:	e8 41 bb ff ff       	call   403230 <_ZdlPvm@plt>
  4076ef:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
  4076f6:	48 c7 85 f8 00 00 00 	movq   $0x409d98,0xf8(%rbp)
  4076fd:	98 9d 40 00 
  407701:	48 85 ff             	test   %rdi,%rdi
  407704:	74 0f                	je     407715 <_ZThn8_N2sf4TextD1Ev+0x65>
  407706:	48 8b b5 10 01 00 00 	mov    0x110(%rbp),%rsi
  40770d:	48 29 fe             	sub    %rdi,%rsi
  407710:	e8 1b bb ff ff       	call   403230 <_ZdlPvm@plt>
  407715:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
  40771c:	48 8d 85 c0 00 00 00 	lea    0xc0(%rbp),%rax
  407723:	48 39 c7             	cmp    %rax,%rdi
  407726:	74 14                	je     40773c <_ZThn8_N2sf4TextD1Ev+0x8c>
  407728:	48 8b 85 c0 00 00 00 	mov    0xc0(%rbp),%rax
  40772f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  407736:	00 
  407737:	e8 f4 ba ff ff       	call   403230 <_ZdlPvm@plt>
  40773c:	48 89 ef             	mov    %rbp,%rdi
  40773f:	5d                   	pop    %rbp
  407740:	e9 eb b9 ff ff       	jmp    403130 <_ZN2sf13TransformableD2Ev@plt>
  407745:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40774c:	00 00 00 
  40774f:	90                   	nop

0000000000407750 <_ZN2sf4TextD0Ev>:
  407750:	b8 50 9d 40 00       	mov    $0x409d50,%eax
  407755:	55                   	push   %rbp
  407756:	48 89 fd             	mov    %rdi,%rbp
  407759:	48 c7 87 28 01 00 00 	movq   $0x409d98,0x128(%rdi)
  407760:	98 9d 40 00 
  407764:	66 48 0f 6e c0       	movq   %rax,%xmm0
  407769:	0f 16 05 40 0d 00 00 	movhps 0xd40(%rip),%xmm0        # 4084b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  407770:	0f 11 07             	movups %xmm0,(%rdi)
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  407773:	48 8b bf 30 01 00 00 	mov    0x130(%rdi),%rdi
	if (__p)
  40777a:	48 85 ff             	test   %rdi,%rdi
  40777d:	74 0f                	je     40778e <_ZN2sf4TextD0Ev+0x3e>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  40777f:	48 8b b5 40 01 00 00 	mov    0x140(%rbp),%rsi
  407786:	48 29 fe             	sub    %rdi,%rsi
  407789:	e8 a2 ba ff ff       	call   403230 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  40778e:	48 8b bd 08 01 00 00 	mov    0x108(%rbp),%rdi
  407795:	48 c7 85 00 01 00 00 	movq   $0x409d98,0x100(%rbp)
  40779c:	98 9d 40 00 
	if (__p)
  4077a0:	48 85 ff             	test   %rdi,%rdi
  4077a3:	74 0f                	je     4077b4 <_ZN2sf4TextD0Ev+0x64>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  4077a5:	48 8b b5 18 01 00 00 	mov    0x118(%rbp),%rsi
  4077ac:	48 29 fe             	sub    %rdi,%rsi
  4077af:	e8 7c ba ff ff       	call   403230 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4077b4:	48 8b bd b8 00 00 00 	mov    0xb8(%rbp),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  4077bb:	48 8d 85 c8 00 00 00 	lea    0xc8(%rbp),%rax
	if (!_M_is_local())
  4077c2:	48 39 c7             	cmp    %rax,%rdi
  4077c5:	74 14                	je     4077db <_ZN2sf4TextD0Ev+0x8b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4077c7:	48 8b 85 c8 00 00 00 	mov    0xc8(%rbp),%rax
  4077ce:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4077d5:	00 
  4077d6:	e8 55 ba ff ff       	call   403230 <_ZdlPvm@plt>
  4077db:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
  4077df:	e8 4c b9 ff ff       	call   403130 <_ZN2sf13TransformableD2Ev@plt>
  4077e4:	48 89 ef             	mov    %rbp,%rdi
  4077e7:	be 70 01 00 00       	mov    $0x170,%esi
  4077ec:	5d                   	pop    %rbp
  4077ed:	e9 3e ba ff ff       	jmp    403230 <_ZdlPvm@plt>
  4077f2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4077f9:	00 00 00 00 
  4077fd:	0f 1f 00             	nopl   (%rax)

0000000000407800 <_ZThn8_N2sf4TextD0Ev>:
  407800:	41 54                	push   %r12
  407802:	b8 50 9d 40 00       	mov    $0x409d50,%eax
  407807:	4c 8d 67 f8          	lea    -0x8(%rdi),%r12
  40780b:	55                   	push   %rbp
  40780c:	66 48 0f 6e c0       	movq   %rax,%xmm0
  407811:	48 89 fd             	mov    %rdi,%rbp
  407814:	48 83 ec 08          	sub    $0x8,%rsp
  407818:	48 c7 87 20 01 00 00 	movq   $0x409d98,0x120(%rdi)
  40781f:	98 9d 40 00 
  407823:	0f 16 05 86 0c 00 00 	movhps 0xc86(%rip),%xmm0        # 4084b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  40782a:	0f 11 47 f8          	movups %xmm0,-0x8(%rdi)
  40782e:	48 8b bf 28 01 00 00 	mov    0x128(%rdi),%rdi
  407835:	48 85 ff             	test   %rdi,%rdi
  407838:	74 0f                	je     407849 <_ZThn8_N2sf4TextD0Ev+0x49>
  40783a:	48 8b b5 38 01 00 00 	mov    0x138(%rbp),%rsi
  407841:	48 29 fe             	sub    %rdi,%rsi
  407844:	e8 e7 b9 ff ff       	call   403230 <_ZdlPvm@plt>
  407849:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
  407850:	48 c7 85 f8 00 00 00 	movq   $0x409d98,0xf8(%rbp)
  407857:	98 9d 40 00 
  40785b:	48 85 ff             	test   %rdi,%rdi
  40785e:	74 0f                	je     40786f <_ZThn8_N2sf4TextD0Ev+0x6f>
  407860:	48 8b b5 10 01 00 00 	mov    0x110(%rbp),%rsi
  407867:	48 29 fe             	sub    %rdi,%rsi
  40786a:	e8 c1 b9 ff ff       	call   403230 <_ZdlPvm@plt>
  40786f:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
  407876:	48 8d 85 c0 00 00 00 	lea    0xc0(%rbp),%rax
  40787d:	48 39 c7             	cmp    %rax,%rdi
  407880:	74 14                	je     407896 <_ZThn8_N2sf4TextD0Ev+0x96>
  407882:	48 8b 85 c0 00 00 00 	mov    0xc0(%rbp),%rax
  407889:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  407890:	00 
  407891:	e8 9a b9 ff ff       	call   403230 <_ZdlPvm@plt>
  407896:	48 89 ef             	mov    %rbp,%rdi
  407899:	e8 92 b8 ff ff       	call   403130 <_ZN2sf13TransformableD2Ev@plt>
  40789e:	48 83 c4 08          	add    $0x8,%rsp
  4078a2:	4c 89 e7             	mov    %r12,%rdi
  4078a5:	be 70 01 00 00       	mov    $0x170,%esi
  4078aa:	5d                   	pop    %rbp
  4078ab:	41 5c                	pop    %r12
  4078ad:	e9 7e b9 ff ff       	jmp    403230 <_ZdlPvm@plt>

Desmontagem da secção .fini:

00000000004078b4 <_fini>:
  4078b4:	f3 0f 1e fa          	endbr64 
  4078b8:	48 83 ec 08          	sub    $0x8,%rsp
  4078bc:	48 83 c4 08          	add    $0x8,%rsp
  4078c0:	c3                   	ret    
