
app/build/release/app:     formato de ficheiro elf64-x86-64

Secções:
Idx Name          Tam.      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400318  0000000000400318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000040  0000000000400338  0000000000400338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400378  0000000000400378  00000378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  000000000040039c  000000000040039c  0000039c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000044  00000000004003c0  00000000004003c0  000003c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       00000810  0000000000400408  0000000000400408  00000408  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       00000a59  0000000000400c18  0000000000400c18  00000c18  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  000000ac  0000000000401672  0000000000401672  00001672  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 000000d0  0000000000401720  0000000000401720  00001720  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     000000c0  00000000004017f0  00000000004017f0  000017f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000738  00000000004018b0  00000000004018b0  000018b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000402000  0000000000402000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          000004e0  0000000000402020  0000000000402020  00002020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00006972  0000000000402500  0000000000402500  00002500  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         0000000d  0000000000408e74  0000000000408e74  00008e74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000007e8  0000000000409000  0000000000409000  00009000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 000000cc  00000000004097e8  00000000004097e8  000097e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000003e0  00000000004098b8  00000000004098b8  000098b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .gcc_except_table 000004c4  0000000000409c98  0000000000409c98  00009c98  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .init_array   00000010  000000000040bcc8  000000000040bcc8  0000acc8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .fini_array   00000008  000000000040bcd8  000000000040bcd8  0000acd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data.rel.ro  000000d0  000000000040bce0  000000000040bce0  0000ace0  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 22 .dynamic      00000240  000000000040bdb0  000000000040bdb0  0000adb0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got          00000010  000000000040bff0  000000000040bff0  0000aff0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .got.plt      00000280  000000000040c000  000000000040c000  0000b000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .data         00000004  000000000040c280  000000000040c280  0000b280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 26 .bss          000001b0  000000000040c2c0  000000000040c2c0  0000b284  2**6
                  ALLOC
 27 .comment      0000002e  0000000000000000  0000000000000000  0000b284  2**0
                  CONTENTS, READONLY
 28 .gnu.build.attributes 00001cd4  000000000040e470  000000000040e470  0000b2b4  2**2
                  CONTENTS, READONLY, OCTETS
 29 .debug_aranges 00000090  0000000000000000  0000000000000000  0000cf88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_info   000402b4  0000000000000000  0000000000000000  0000d018  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 31 .debug_abbrev 00001356  0000000000000000  0000000000000000  0004d2cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_line   00007906  0000000000000000  0000000000000000  0004e622  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 33 .debug_str    00033fb5  0000000000000000  0000000000000000  00055f28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 34 .debug_line_str 000007a8  0000000000000000  0000000000000000  00089edd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 35 .debug_loclists 000121af  0000000000000000  0000000000000000  0008a685  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 36 .debug_rnglists 00003146  0000000000000000  0000000000000000  0009c834  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Desmontagem da secção .init:

0000000000402000 <_init>:
  402000:	f3 0f 1e fa          	endbr64 
  402004:	48 83 ec 08          	sub    $0x8,%rsp
  402008:	48 8b 05 e9 9f 00 00 	mov    0x9fe9(%rip),%rax        # 40bff8 <__gmon_start__@Base>
  40200f:	48 85 c0             	test   %rax,%rax
  402012:	74 02                	je     402016 <_init+0x16>
  402014:	ff d0                	call   *%rax
  402016:	48 83 c4 08          	add    $0x8,%rsp
  40201a:	c3                   	ret    

Desmontagem da secção .plt:

0000000000402020 <_ZNSo3putEc@plt-0x10>:
  402020:	ff 35 e2 9f 00 00    	push   0x9fe2(%rip)        # 40c008 <_GLOBAL_OFFSET_TABLE_+0x8>
  402026:	ff 25 e4 9f 00 00    	jmp    *0x9fe4(%rip)        # 40c010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402030 <_ZNSo3putEc@plt>:
  402030:	ff 25 e2 9f 00 00    	jmp    *0x9fe2(%rip)        # 40c018 <_ZNSo3putEc@GLIBCXX_3.4>
  402036:	68 00 00 00 00       	push   $0x0
  40203b:	e9 e0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402040 <printf@plt>:
  402040:	ff 25 da 9f 00 00    	jmp    *0x9fda(%rip)        # 40c020 <printf@GLIBC_2.2.5>
  402046:	68 01 00 00 00       	push   $0x1
  40204b:	e9 d0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402050 <_ZN2sf4TimeC1Ev@plt>:
  402050:	ff 25 d2 9f 00 00    	jmp    *0x9fd2(%rip)        # 40c028 <_ZN2sf4TimeC1Ev@Base>
  402056:	68 02 00 00 00       	push   $0x2
  40205b:	e9 c0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402060 <_ZN2sf5ShapeD2Ev@plt>:
  402060:	ff 25 ca 9f 00 00    	jmp    *0x9fca(%rip)        # 40c030 <_ZN2sf5ShapeD2Ev@Base>
  402066:	68 03 00 00 00       	push   $0x3
  40206b:	e9 b0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402070 <_ZN2sf5MusicC1Ev@plt>:
  402070:	ff 25 c2 9f 00 00    	jmp    *0x9fc2(%rip)        # 40c038 <_ZN2sf5MusicC1Ev@Base>
  402076:	68 04 00 00 00       	push   $0x4
  40207b:	e9 a0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402080 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
  402080:	ff 25 ba 9f 00 00    	jmp    *0x9fba(%rip)        # 40c040 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@Base>
  402086:	68 05 00 00 00       	push   $0x5
  40208b:	e9 90 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
  402090:	ff 25 b2 9f 00 00    	jmp    *0x9fb2(%rip)        # 40c048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@GLIBCXX_3.4.21>
  402096:	68 06 00 00 00       	push   $0x6
  40209b:	e9 80 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>:
  4020a0:	ff 25 aa 9f 00 00    	jmp    *0x9faa(%rip)        # 40c050 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@Base>
  4020a6:	68 07 00 00 00       	push   $0x7
  4020ab:	e9 70 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020b0 <_ZN2sf4FontC1Ev@plt>:
  4020b0:	ff 25 a2 9f 00 00    	jmp    *0x9fa2(%rip)        # 40c058 <_ZN2sf4FontC1Ev@Base>
  4020b6:	68 08 00 00 00       	push   $0x8
  4020bb:	e9 60 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020c0 <_ZN2sf6StringC1Ej@plt>:
  4020c0:	ff 25 9a 9f 00 00    	jmp    *0x9f9a(%rip)        # 40c060 <_ZN2sf6StringC1Ej@Base>
  4020c6:	68 09 00 00 00       	push   $0x9
  4020cb:	e9 50 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020d0 <_ZN2sfplERKNS_6StringES2_@plt>:
  4020d0:	ff 25 92 9f 00 00    	jmp    *0x9f92(%rip)        # 40c068 <_ZN2sfplERKNS_6StringES2_@Base>
  4020d6:	68 0a 00 00 00       	push   $0xa
  4020db:	e9 40 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020e0 <write@plt>:
  4020e0:	ff 25 8a 9f 00 00    	jmp    *0x9f8a(%rip)        # 40c070 <write@GLIBC_2.2.5>
  4020e6:	68 0b 00 00 00       	push   $0xb
  4020eb:	e9 30 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>:
  4020f0:	ff 25 82 9f 00 00    	jmp    *0x9f82(%rip)        # 40c078 <_ZN2sf6StringC1EPKcRKSt6locale@Base>
  4020f6:	68 0c 00 00 00       	push   $0xc
  4020fb:	e9 20 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402100 <_ZN2sf5ColorC1Ehhhh@plt>:
  402100:	ff 25 7a 9f 00 00    	jmp    *0x9f7a(%rip)        # 40c080 <_ZN2sf5ColorC1Ehhhh@Base>
  402106:	68 0d 00 00 00       	push   $0xd
  40210b:	e9 10 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402110 <strlen@plt>:
  402110:	ff 25 72 9f 00 00    	jmp    *0x9f72(%rip)        # 40c088 <strlen@GLIBC_2.2.5>
  402116:	68 0e 00 00 00       	push   $0xe
  40211b:	e9 00 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402120 <_ZN2sf13TransformableD2Ev@plt>:
  402120:	ff 25 6a 9f 00 00    	jmp    *0x9f6a(%rip)        # 40c090 <_ZN2sf13TransformableD2Ev@Base>
  402126:	68 0f 00 00 00       	push   $0xf
  40212b:	e9 f0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402130 <_ZN2sf13Transformable11setPositionEff@plt>:
  402130:	ff 25 62 9f 00 00    	jmp    *0x9f62(%rip)        # 40c098 <_ZN2sf13Transformable11setPositionEff@Base>
  402136:	68 10 00 00 00       	push   $0x10
  40213b:	e9 e0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402140 <_ZSt24__throw_invalid_argumentPKc@plt>:
  402140:	ff 25 5a 9f 00 00    	jmp    *0x9f5a(%rip)        # 40c0a0 <_ZSt24__throw_invalid_argumentPKc@GLIBCXX_3.4>
  402146:	68 11 00 00 00       	push   $0x11
  40214b:	e9 d0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402150 <_ZN2sf7secondsEf@plt>:
  402150:	ff 25 52 9f 00 00    	jmp    *0x9f52(%rip)        # 40c0a8 <_ZN2sf7secondsEf@Base>
  402156:	68 12 00 00 00       	push   $0x12
  40215b:	e9 c0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402160 <_ZNSo5flushEv@plt>:
  402160:	ff 25 4a 9f 00 00    	jmp    *0x9f4a(%rip)        # 40c0b0 <_ZNSo5flushEv@GLIBCXX_3.4>
  402166:	68 13 00 00 00       	push   $0x13
  40216b:	e9 b0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402170 <_ZSt19__throw_logic_errorPKc@plt>:
  402170:	ff 25 42 9f 00 00    	jmp    *0x9f42(%rip)        # 40c0b8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
  402176:	68 14 00 00 00       	push   $0x14
  40217b:	e9 a0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402180 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@plt>:
  402180:	ff 25 3a 9f 00 00    	jmp    *0x9f3a(%rip)        # 40c0c0 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@Base>
  402186:	68 15 00 00 00       	push   $0x15
  40218b:	e9 90 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402190 <open@plt>:
  402190:	ff 25 32 9f 00 00    	jmp    *0x9f32(%rip)        # 40c0c8 <open@GLIBC_2.2.5>
  402196:	68 16 00 00 00       	push   $0x16
  40219b:	e9 80 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021a0 <_ZN2sf9VideoModeC1Ejjj@plt>:
  4021a0:	ff 25 2a 9f 00 00    	jmp    *0x9f2a(%rip)        # 40c0d0 <_ZN2sf9VideoModeC1Ejjj@Base>
  4021a6:	68 17 00 00 00       	push   $0x17
  4021ab:	e9 70 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021b0 <_ZN2sf6String6insertEmRKS0_@plt>:
  4021b0:	ff 25 22 9f 00 00    	jmp    *0x9f22(%rip)        # 40c0d8 <_ZN2sf6String6insertEmRKS0_@Base>
  4021b6:	68 18 00 00 00       	push   $0x18
  4021bb:	e9 60 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021c0 <_ZN2sf11CircleShapeC1Efm@plt>:
  4021c0:	ff 25 1a 9f 00 00    	jmp    *0x9f1a(%rip)        # 40c0e0 <_ZN2sf11CircleShapeC1Efm@Base>
  4021c6:	68 19 00 00 00       	push   $0x19
  4021cb:	e9 50 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021d0 <memcpy@plt>:
  4021d0:	ff 25 12 9f 00 00    	jmp    *0x9f12(%rip)        # 40c0e8 <memcpy@GLIBC_2.14>
  4021d6:	68 1a 00 00 00       	push   $0x1a
  4021db:	e9 40 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021e0 <_ZN2sf6Window9pollEventERNS_5EventE@plt>:
  4021e0:	ff 25 0a 9f 00 00    	jmp    *0x9f0a(%rip)        # 40c0f0 <_ZN2sf6Window9pollEventERNS_5EventE@Base>
  4021e6:	68 1b 00 00 00       	push   $0x1b
  4021eb:	e9 30 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021f0 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@plt>:
  4021f0:	ff 25 02 9f 00 00    	jmp    *0x9f02(%rip)        # 40c0f8 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@Base>
  4021f6:	68 1c 00 00 00       	push   $0x1c
  4021fb:	e9 20 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402200 <_ZN2sf11SoundStream4stopEv@plt>:
  402200:	ff 25 fa 9e 00 00    	jmp    *0x9efa(%rip)        # 40c100 <_ZN2sf11SoundStream4stopEv@Base>
  402206:	68 1d 00 00 00       	push   $0x1d
  40220b:	e9 10 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402210 <__cxa_atexit@plt>:
  402210:	ff 25 f2 9e 00 00    	jmp    *0x9ef2(%rip)        # 40c108 <__cxa_atexit@GLIBC_2.2.5>
  402216:	68 1e 00 00 00       	push   $0x1e
  40221b:	e9 00 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402220 <_ZN2sf11SoundStream7setLoopEb@plt>:
  402220:	ff 25 ea 9e 00 00    	jmp    *0x9eea(%rip)        # 40c110 <_ZN2sf11SoundStream7setLoopEb@Base>
  402226:	68 1f 00 00 00       	push   $0x1f
  40222b:	e9 f0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402230 <_ZN2sf4Font12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
  402230:	ff 25 e2 9e 00 00    	jmp    *0x9ee2(%rip)        # 40c118 <_ZN2sf4Font12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@Base>
  402236:	68 20 00 00 00       	push   $0x20
  40223b:	e9 e0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402240 <_ZdlPvm@plt>:
  402240:	ff 25 da 9e 00 00    	jmp    *0x9eda(%rip)        # 40c120 <_ZdlPvm@CXXABI_1.3.9>
  402246:	68 21 00 00 00       	push   $0x21
  40224b:	e9 d0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>:
  402250:	ff 25 d2 9e 00 00    	jmp    *0x9ed2(%rip)        # 40c128 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@GLIBCXX_3.4.21>
  402256:	68 22 00 00 00       	push   $0x22
  40225b:	e9 c0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402260 <_ZNK2sf6Window6isOpenEv@plt>:
  402260:	ff 25 ca 9e 00 00    	jmp    *0x9eca(%rip)        # 40c130 <_ZNK2sf6Window6isOpenEv@Base>
  402266:	68 23 00 00 00       	push   $0x23
  40226b:	e9 b0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402270 <_ZN2sf4FontD1Ev@plt>:
  402270:	ff 25 c2 9e 00 00    	jmp    *0x9ec2(%rip)        # 40c138 <_ZN2sf4FontD1Ev@Base>
  402276:	68 24 00 00 00       	push   $0x24
  40227b:	e9 a0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402280 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
  402280:	ff 25 ba 9e 00 00    	jmp    *0x9eba(%rip)        # 40c140 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@GLIBCXX_3.4.9>
  402286:	68 25 00 00 00       	push   $0x25
  40228b:	e9 90 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402290 <_ZNKSt5ctypeIcE13_M_widen_initEv@plt>:
  402290:	ff 25 b2 9e 00 00    	jmp    *0x9eb2(%rip)        # 40c148 <_ZNKSt5ctypeIcE13_M_widen_initEv@GLIBCXX_3.4.11>
  402296:	68 26 00 00 00       	push   $0x26
  40229b:	e9 80 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022a0 <_ZN2sf6StringixEm@plt>:
  4022a0:	ff 25 aa 9e 00 00    	jmp    *0x9eaa(%rip)        # 40c150 <_ZN2sf6StringixEm@Base>
  4022a6:	68 27 00 00 00       	push   $0x27
  4022ab:	e9 70 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>:
  4022b0:	ff 25 a2 9e 00 00    	jmp    *0x9ea2(%rip)        # 40c158 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@GLIBCXX_3.4.21>
  4022b6:	68 28 00 00 00       	push   $0x28
  4022bb:	e9 60 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022c0 <_ZN2sfgeENS_4TimeES0_@plt>:
  4022c0:	ff 25 9a 9e 00 00    	jmp    *0x9e9a(%rip)        # 40c160 <_ZN2sfgeENS_4TimeES0_@Base>
  4022c6:	68 29 00 00 00       	push   $0x29
  4022cb:	e9 50 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022d0 <_ZN2sf6Window17setFramerateLimitEj@plt>:
  4022d0:	ff 25 92 9e 00 00    	jmp    *0x9e92(%rip)        # 40c168 <_ZN2sf6Window17setFramerateLimitEj@Base>
  4022d6:	68 2a 00 00 00       	push   $0x2a
  4022db:	e9 40 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022e0 <_ZSt16__throw_bad_castv@plt>:
  4022e0:	ff 25 8a 9e 00 00    	jmp    *0x9e8a(%rip)        # 40c170 <_ZSt16__throw_bad_castv@GLIBCXX_3.4>
  4022e6:	68 2b 00 00 00       	push   $0x2b
  4022eb:	e9 30 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022f0 <_ZN2sf6Window7displayEv@plt>:
  4022f0:	ff 25 82 9e 00 00    	jmp    *0x9e82(%rip)        # 40c178 <_ZN2sf6Window7displayEv@Base>
  4022f6:	68 2c 00 00 00       	push   $0x2c
  4022fb:	e9 20 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402300 <_ZN2sf5ClockC1Ev@plt>:
  402300:	ff 25 7a 9e 00 00    	jmp    *0x9e7a(%rip)        # 40c180 <_ZN2sf5ClockC1Ev@Base>
  402306:	68 2d 00 00 00       	push   $0x2d
  40230b:	e9 10 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402310 <putchar@plt>:
  402310:	ff 25 72 9e 00 00    	jmp    *0x9e72(%rip)        # 40c188 <putchar@GLIBC_2.2.5>
  402316:	68 2e 00 00 00       	push   $0x2e
  40231b:	e9 00 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402320 <ioctl@plt>:
  402320:	ff 25 6a 9e 00 00    	jmp    *0x9e6a(%rip)        # 40c190 <ioctl@GLIBC_2.2.5>
  402326:	68 2f 00 00 00       	push   $0x2f
  40232b:	e9 f0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402330 <_ZNSt6localeD1Ev@plt>:
  402330:	ff 25 62 9e 00 00    	jmp    *0x9e62(%rip)        # 40c198 <_ZNSt6localeD1Ev@GLIBCXX_3.4>
  402336:	68 30 00 00 00       	push   $0x30
  40233b:	e9 e0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402340 <fprintf@plt>:
  402340:	ff 25 5a 9e 00 00    	jmp    *0x9e5a(%rip)        # 40c1a0 <fprintf@GLIBC_2.2.5>
  402346:	68 31 00 00 00       	push   $0x31
  40234b:	e9 d0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402350 <read@plt>:
  402350:	ff 25 52 9e 00 00    	jmp    *0x9e52(%rip)        # 40c1a8 <read@GLIBC_2.2.5>
  402356:	68 32 00 00 00       	push   $0x32
  40235b:	e9 c0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402360 <_ZN2sf5MusicD1Ev@plt>:
  402360:	ff 25 4a 9e 00 00    	jmp    *0x9e4a(%rip)        # 40c1b0 <_ZN2sf5MusicD1Ev@Base>
  402366:	68 33 00 00 00       	push   $0x33
  40236b:	e9 b0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402370 <_ZN2sf12RenderWindowC1ENS_9VideoModeERKNS_6StringEjRKNS_15ContextSettingsE@plt>:
  402370:	ff 25 42 9e 00 00    	jmp    *0x9e42(%rip)        # 40c1b8 <_ZN2sf12RenderWindowC1ENS_9VideoModeERKNS_6StringEjRKNS_15ContextSettingsE@Base>
  402376:	68 34 00 00 00       	push   $0x34
  40237b:	e9 a0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402380 <_ZNK2sf6String7getSizeEv@plt>:
  402380:	ff 25 3a 9e 00 00    	jmp    *0x9e3a(%rip)        # 40c1c0 <_ZNK2sf6String7getSizeEv@Base>
  402386:	68 35 00 00 00       	push   $0x35
  40238b:	e9 90 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402390 <_ZNSt8ios_base4InitC1Ev@plt>:
  402390:	ff 25 32 9e 00 00    	jmp    *0x9e32(%rip)        # 40c1c8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
  402396:	68 36 00 00 00       	push   $0x36
  40239b:	e9 80 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023a0 <puts@plt>:
  4023a0:	ff 25 2a 9e 00 00    	jmp    *0x9e2a(%rip)        # 40c1d0 <puts@GLIBC_2.2.5>
  4023a6:	68 37 00 00 00       	push   $0x37
  4023ab:	e9 70 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
  4023b0:	ff 25 22 9e 00 00    	jmp    *0x9e22(%rip)        # 40c1d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@GLIBCXX_3.4.21>
  4023b6:	68 38 00 00 00       	push   $0x38
  4023bb:	e9 60 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023c0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>:
  4023c0:	ff 25 1a 9e 00 00    	jmp    *0x9e1a(%rip)        # 40c1e0 <_ZNK2sf5Clock14getElapsedTimeEv@Base>
  4023c6:	68 39 00 00 00       	push   $0x39
  4023cb:	e9 50 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023d0 <_ZNK2sf4Text9getStringEv@plt>:
  4023d0:	ff 25 12 9e 00 00    	jmp    *0x9e12(%rip)        # 40c1e8 <_ZNK2sf4Text9getStringEv@Base>
  4023d6:	68 3a 00 00 00       	push   $0x3a
  4023db:	e9 40 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023e0 <_ZN2sfpLERNS_4TimeES0_@plt>:
  4023e0:	ff 25 0a 9e 00 00    	jmp    *0x9e0a(%rip)        # 40c1f0 <_ZN2sfpLERNS_4TimeES0_@Base>
  4023e6:	68 3b 00 00 00       	push   $0x3b
  4023eb:	e9 30 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023f0 <_ZN2sf5Clock7restartEv@plt>:
  4023f0:	ff 25 02 9e 00 00    	jmp    *0x9e02(%rip)        # 40c1f8 <_ZN2sf5Clock7restartEv@Base>
  4023f6:	68 3c 00 00 00       	push   $0x3c
  4023fb:	e9 20 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402400 <_ZN2sf11SoundStream4playEv@plt>:
  402400:	ff 25 fa 9d 00 00    	jmp    *0x9dfa(%rip)        # 40c200 <_ZN2sf11SoundStream4playEv@Base>
  402406:	68 3d 00 00 00       	push   $0x3d
  40240b:	e9 10 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>:
  402410:	ff 25 f2 9d 00 00    	jmp    *0x9df2(%rip)        # 40c208 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@Base>
  402416:	68 3e 00 00 00       	push   $0x3e
  40241b:	e9 00 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402420 <_ZN2sfmIERNS_4TimeES0_@plt>:
  402420:	ff 25 ea 9d 00 00    	jmp    *0x9dea(%rip)        # 40c210 <_ZN2sfmIERNS_4TimeES0_@Base>
  402426:	68 3f 00 00 00       	push   $0x3f
  40242b:	e9 f0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402430 <__gxx_personality_v0@plt>:
  402430:	ff 25 e2 9d 00 00    	jmp    *0x9de2(%rip)        # 40c218 <__gxx_personality_v0@CXXABI_1.3>
  402436:	68 40 00 00 00       	push   $0x40
  40243b:	e9 e0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402440 <_ZN2sf6StringaSERKS0_@plt>:
  402440:	ff 25 da 9d 00 00    	jmp    *0x9dda(%rip)        # 40c220 <_ZN2sf6StringaSERKS0_@Base>
  402446:	68 41 00 00 00       	push   $0x41
  40244b:	e9 d0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402450 <_ZNK2sf4Time9asSecondsEv@plt>:
  402450:	ff 25 d2 9d 00 00    	jmp    *0x9dd2(%rip)        # 40c228 <_ZNK2sf4Time9asSecondsEv@Base>
  402456:	68 42 00 00 00       	push   $0x42
  40245b:	e9 c0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402460 <_ZN2sf12RenderWindowD1Ev@plt>:
  402460:	ff 25 ca 9d 00 00    	jmp    *0x9dca(%rip)        # 40c230 <_ZN2sf12RenderWindowD1Ev@Base>
  402466:	68 43 00 00 00       	push   $0x43
  40246b:	e9 b0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402470 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>:
  402470:	ff 25 c2 9d 00 00    	jmp    *0x9dc2(%rip)        # 40c238 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@Base>
  402476:	68 44 00 00 00       	push   $0x44
  40247b:	e9 a0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>:
  402480:	ff 25 ba 9d 00 00    	jmp    *0x9dba(%rip)        # 40c240 <_ZN2sf4Text9setStringERKNS_6StringE@Base>
  402486:	68 45 00 00 00       	push   $0x45
  40248b:	e9 90 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402490 <_Unwind_Resume@plt>:
  402490:	ff 25 b2 9d 00 00    	jmp    *0x9db2(%rip)        # 40c248 <_Unwind_Resume@GCC_3.0>
  402496:	68 46 00 00 00       	push   $0x46
  40249b:	e9 80 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
  4024a0:	ff 25 aa 9d 00 00    	jmp    *0x9daa(%rip)        # 40c250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
  4024a6:	68 47 00 00 00       	push   $0x47
  4024ab:	e9 70 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>:
  4024b0:	ff 25 a2 9d 00 00    	jmp    *0x9da2(%rip)        # 40c258 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@Base>
  4024b6:	68 48 00 00 00       	push   $0x48
  4024bb:	e9 60 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024c0 <_ZN2sf4Text12setFillColorERKNS_5ColorE@plt>:
  4024c0:	ff 25 9a 9d 00 00    	jmp    *0x9d9a(%rip)        # 40c260 <_ZN2sf4Text12setFillColorERKNS_5ColorE@Base>
  4024c6:	68 49 00 00 00       	push   $0x49
  4024cb:	e9 50 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024d0 <_ZN2sf6Window5closeEv@plt>:
  4024d0:	ff 25 92 9d 00 00    	jmp    *0x9d92(%rip)        # 40c268 <_ZN2sf6Window5closeEv@Base>
  4024d6:	68 4a 00 00 00       	push   $0x4a
  4024db:	e9 40 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024e0 <_ZNSt6localeC1Ev@plt>:
  4024e0:	ff 25 8a 9d 00 00    	jmp    *0x9d8a(%rip)        # 40c270 <_ZNSt6localeC1Ev@GLIBCXX_3.4>
  4024e6:	68 4b 00 00 00       	push   $0x4b
  4024eb:	e9 30 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024f0 <_ZNSt8ios_base4InitD1Ev@plt>:
  4024f0:	ff 25 82 9d 00 00    	jmp    *0x9d82(%rip)        # 40c278 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
  4024f6:	68 4c 00 00 00       	push   $0x4c
  4024fb:	e9 20 fb ff ff       	jmp    402020 <_init+0x20>

Desmontagem da secção .text:

0000000000402500 <_Z17char_to_stringbitB5cxx11c.cold>:
      _M_length(size_type __length)
      { _M_string_length = __length; }

      pointer
      _M_data() const
      { return _M_dataplus._M_p; }
  402500:	49 8b 3c 24          	mov    (%r12),%rdi
      _M_create(size_type&, size_type);

      void
      _M_dispose()
      {
	if (!_M_is_local())
  402504:	48 39 fb             	cmp    %rdi,%rbx
  402507:	74 0e                	je     402517 <_Z17char_to_stringbitB5cxx11c.cold+0x17>
	  _M_destroy(_M_allocated_capacity);
      }

      void
      _M_destroy(size_type __size) throw()
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402509:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
  40250e:	48 83 c6 01          	add    $0x1,%rsi
# endif
			      std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	::operator delete(__p
  402512:	e8 29 fd ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402517:	48 89 ef             	mov    %rbp,%rdi
  40251a:	e8 71 ff ff ff       	call   402490 <_Unwind_Resume@plt>

000000000040251f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold>:
      { return _M_dataplus._M_p; }
  40251f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  402524:	4c 39 e7             	cmp    %r12,%rdi
  402527:	74 0e                	je     402537 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402529:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  40252e:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402532:	e8 09 fd ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402537:	48 8b 3c 24          	mov    (%rsp),%rdi
	if (!_M_is_local())
  40253b:	48 39 df             	cmp    %rbx,%rdi
  40253e:	74 0e                	je     40254e <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x2f>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402540:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  402545:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402549:	e8 f2 fc ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  40254e:	48 89 ef             	mov    %rbp,%rdi
  402551:	e8 3a ff ff ff       	call   402490 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  402556:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  40255b:	4c 39 e7             	cmp    %r12,%rdi
  40255e:	74 d7                	je     402537 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402560:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  402565:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402569:	e8 d2 fc ff ff       	call   402240 <_ZdlPvm@plt>
  40256e:	eb c7                	jmp    402537 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { return _M_dataplus._M_p; }
  402570:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  402575:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  40257a:	48 39 c7             	cmp    %rax,%rdi
  40257d:	74 b8                	je     402537 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40257f:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  402584:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402588:	e8 b3 fc ff ff       	call   402240 <_ZdlPvm@plt>
  40258d:	eb a8                	jmp    402537 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { return _M_dataplus._M_p; }
  40258f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  402594:	4c 39 e7             	cmp    %r12,%rdi
  402597:	74 9e                	je     402537 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402599:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  40259e:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4025a2:	e8 99 fc ff ff       	call   402240 <_ZdlPvm@plt>
  4025a7:	eb 8e                	jmp    402537 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>

00000000004025a9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold>:
      { return _M_dataplus._M_p; }
  4025a9:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4025ae:	4c 39 f7             	cmp    %r14,%rdi
  4025b1:	74 0e                	je     4025c1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4025b3:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4025b8:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4025bc:	e8 7f fc ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4025c1:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  4025c6:	48 39 ef             	cmp    %rbp,%rdi
  4025c9:	74 0e                	je     4025d9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x30>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4025cb:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  4025d0:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4025d4:	e8 67 fc ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4025d9:	4c 89 e7             	mov    %r12,%rdi
  4025dc:	e8 af fe ff ff       	call   402490 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  4025e1:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4025e6:	4c 39 f7             	cmp    %r14,%rdi
  4025e9:	74 0e                	je     4025f9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x50>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4025eb:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4025f0:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  4025f4:	e8 47 fc ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4025f9:	48 89 ef             	mov    %rbp,%rdi
  4025fc:	e8 8f fe ff ff       	call   402490 <_Unwind_Resume@plt>

0000000000402601 <main.cold>:
      { return _M_dataplus._M_p; }
  402601:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402608:	48 39 df             	cmp    %rbx,%rdi
  40260b:	74 14                	je     402621 <main.cold+0x20>
	::operator delete(__p
  40260d:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402614:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40261b:	00 
  40261c:	e8 1f fc ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402621:	4c 89 e3             	mov    %r12,%rbx
				{
					elapsedtime_text -= sf::seconds(.1f);
					if (typedtext.getSize() > 0)
					{
						text.setString(text.getString() + typedtext[0]);
						typedtext = typedtext.toAnsiString().substr(1);
  402624:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  40262b:	e8 00 fd ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
      { return _M_dataplus._M_p; }
  402630:	48 8b bd 00 c7 ff ff 	mov    -0x3900(%rbp),%rdi
	if (!_M_is_local())
  402637:	48 8d 85 10 c7 ff ff 	lea    -0x38f0(%rbp),%rax
  40263e:	48 39 c7             	cmp    %rax,%rdi
  402641:	74 10                	je     402653 <main.cold+0x52>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402643:	48 8b 85 10 c7 ff ff 	mov    -0x38f0(%rbp),%rax
  40264a:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  40264e:	e8 ed fb ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402653:	48 8b bd e0 c6 ff ff 	mov    -0x3920(%rbp),%rdi
	if (!_M_is_local())
  40265a:	48 8d 85 f0 c6 ff ff 	lea    -0x3910(%rbp),%rax
  402661:	48 39 c7             	cmp    %rax,%rdi
  402664:	74 10                	je     402676 <main.cold+0x75>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402666:	48 8b 85 f0 c6 ff ff 	mov    -0x3910(%rbp),%rax
  40266d:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402671:	e8 ca fb ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402676:	48 8b bd c0 c6 ff ff 	mov    -0x3940(%rbp),%rdi
	if (!_M_is_local())
  40267d:	48 8d 85 d0 c6 ff ff 	lea    -0x3930(%rbp),%rax
  402684:	48 39 c7             	cmp    %rax,%rdi
  402687:	74 14                	je     40269d <main.cold+0x9c>
  402689:	48 8b 85 d0 c6 ff ff 	mov    -0x3930(%rbp),%rax
  402690:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402697:	00 
  402698:	e8 a3 fb ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40269d:	48 8b bd a0 c6 ff ff 	mov    -0x3960(%rbp),%rdi
	if (!_M_is_local())
  4026a4:	48 8d 85 b0 c6 ff ff 	lea    -0x3950(%rbp),%rax
  4026ab:	48 39 c7             	cmp    %rax,%rdi
  4026ae:	0f 85 ed 04 00 00    	jne    402ba1 <main.cold+0x5a0>
	}

	

	//close(fd);
}
  4026b4:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  4026bb:	e8 a0 fc ff ff       	call   402360 <_ZN2sf5MusicD1Ev@plt>
  4026c0:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  4026c7:	e8 94 fc ff ff       	call   402360 <_ZN2sf5MusicD1Ev@plt>
  4026cc:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  4026d3:	e8 88 fc ff ff       	call   402360 <_ZN2sf5MusicD1Ev@plt>
  4026d8:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4026df:	e8 ec 64 00 00       	call   408bd0 <_ZN2sf4TextD1Ev>
  4026e4:	48 8d bd d0 c7 ff ff 	lea    -0x3830(%rbp),%rdi
  4026eb:	e8 80 fb ff ff       	call   402270 <_ZN2sf4FontD1Ev@plt>
{
////////////////////////////////////////////////////////////
/// \brief Specialized shape representing a circle
///
////////////////////////////////////////////////////////////
class SFML_GRAPHICS_API CircleShape : public Shape
  4026f0:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4026f6:	48 8d bd f0 fa ff ff 	lea    -0x510(%rbp),%rdi
  4026fd:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  402704:	28 bd 40 00 
  402708:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40270d:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402714:	0f 29 85 f0 fa ff ff 	movaps %xmm0,-0x510(%rbp)
  40271b:	e8 40 f9 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402720:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402725:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  40272c:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402733:	0f 29 85 90 f9 ff ff 	movaps %xmm0,-0x670(%rbp)
  40273a:	e8 21 f9 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40273f:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402744:	48 8d bd 30 f8 ff ff 	lea    -0x7d0(%rbp),%rdi
  40274b:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402752:	0f 29 85 30 f8 ff ff 	movaps %xmm0,-0x7d0(%rbp)
  402759:	e8 02 f9 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40275e:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402763:	48 8d bd d0 f6 ff ff 	lea    -0x930(%rbp),%rdi
  40276a:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402771:	0f 29 85 d0 f6 ff ff 	movaps %xmm0,-0x930(%rbp)
  402778:	e8 e3 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40277d:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402782:	48 8d bd 70 f5 ff ff 	lea    -0xa90(%rbp),%rdi
  402789:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402790:	0f 29 85 70 f5 ff ff 	movaps %xmm0,-0xa90(%rbp)
  402797:	e8 c4 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40279c:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4027a1:	48 8d bd 10 f4 ff ff 	lea    -0xbf0(%rbp),%rdi
  4027a8:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  4027af:	0f 29 85 10 f4 ff ff 	movaps %xmm0,-0xbf0(%rbp)
  4027b6:	e8 a5 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4027bb:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4027c0:	48 8d bd b0 f2 ff ff 	lea    -0xd50(%rbp),%rdi
  4027c7:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  4027ce:	0f 29 85 b0 f2 ff ff 	movaps %xmm0,-0xd50(%rbp)
  4027d5:	e8 86 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4027da:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4027df:	48 8d bd 50 f1 ff ff 	lea    -0xeb0(%rbp),%rdi
  4027e6:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  4027ed:	0f 29 85 50 f1 ff ff 	movaps %xmm0,-0xeb0(%rbp)
  4027f4:	e8 67 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4027f9:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4027fe:	48 8d bd f0 ef ff ff 	lea    -0x1010(%rbp),%rdi
  402805:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  40280c:	0f 29 85 f0 ef ff ff 	movaps %xmm0,-0x1010(%rbp)
  402813:	e8 48 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402818:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40281d:	48 8d bd 90 ee ff ff 	lea    -0x1170(%rbp),%rdi
  402824:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  40282b:	0f 29 85 90 ee ff ff 	movaps %xmm0,-0x1170(%rbp)
  402832:	e8 29 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402837:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40283c:	48 8d bd 30 ed ff ff 	lea    -0x12d0(%rbp),%rdi
  402843:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  40284a:	0f 29 85 30 ed ff ff 	movaps %xmm0,-0x12d0(%rbp)
  402851:	e8 0a f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402856:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40285b:	48 8d bd d0 eb ff ff 	lea    -0x1430(%rbp),%rdi
  402862:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402869:	0f 29 85 d0 eb ff ff 	movaps %xmm0,-0x1430(%rbp)
  402870:	e8 eb f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402875:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40287a:	48 8d bd 70 ea ff ff 	lea    -0x1590(%rbp),%rdi
  402881:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402888:	0f 29 85 70 ea ff ff 	movaps %xmm0,-0x1590(%rbp)
  40288f:	e8 cc f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402894:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402899:	48 8d bd 10 e9 ff ff 	lea    -0x16f0(%rbp),%rdi
  4028a0:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  4028a7:	0f 29 85 10 e9 ff ff 	movaps %xmm0,-0x16f0(%rbp)
  4028ae:	e8 ad f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4028b3:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4028b8:	48 8d bd b0 e7 ff ff 	lea    -0x1850(%rbp),%rdi
  4028bf:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  4028c6:	0f 29 85 b0 e7 ff ff 	movaps %xmm0,-0x1850(%rbp)
  4028cd:	e8 8e f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4028d2:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4028d7:	48 8d bd 50 e6 ff ff 	lea    -0x19b0(%rbp),%rdi
  4028de:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  4028e5:	0f 29 85 50 e6 ff ff 	movaps %xmm0,-0x19b0(%rbp)
  4028ec:	e8 6f f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4028f1:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4028f6:	48 8d bd f0 e4 ff ff 	lea    -0x1b10(%rbp),%rdi
  4028fd:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402904:	0f 29 85 f0 e4 ff ff 	movaps %xmm0,-0x1b10(%rbp)
  40290b:	e8 50 f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402910:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402915:	48 8d bd 90 e3 ff ff 	lea    -0x1c70(%rbp),%rdi
  40291c:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402923:	0f 29 85 90 e3 ff ff 	movaps %xmm0,-0x1c70(%rbp)
  40292a:	e8 31 f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40292f:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402934:	48 8d bd 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rdi
  40293b:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402942:	0f 29 85 30 e2 ff ff 	movaps %xmm0,-0x1dd0(%rbp)
  402949:	e8 12 f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40294e:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402953:	48 8d bd d0 e0 ff ff 	lea    -0x1f30(%rbp),%rdi
  40295a:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402961:	0f 29 85 d0 e0 ff ff 	movaps %xmm0,-0x1f30(%rbp)
  402968:	e8 f3 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40296d:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402972:	48 8d bd 70 df ff ff 	lea    -0x2090(%rbp),%rdi
  402979:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402980:	0f 29 85 70 df ff ff 	movaps %xmm0,-0x2090(%rbp)
  402987:	e8 d4 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40298c:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402991:	48 8d bd 10 de ff ff 	lea    -0x21f0(%rbp),%rdi
  402998:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  40299f:	0f 29 85 10 de ff ff 	movaps %xmm0,-0x21f0(%rbp)
  4029a6:	e8 b5 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4029ab:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4029b0:	48 8d bd b0 dc ff ff 	lea    -0x2350(%rbp),%rdi
  4029b7:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  4029be:	0f 29 85 b0 dc ff ff 	movaps %xmm0,-0x2350(%rbp)
  4029c5:	e8 96 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4029ca:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4029cf:	48 8d bd 50 db ff ff 	lea    -0x24b0(%rbp),%rdi
  4029d6:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  4029dd:	0f 29 85 50 db ff ff 	movaps %xmm0,-0x24b0(%rbp)
  4029e4:	e8 77 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4029e9:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4029ee:	48 8d bd f0 d9 ff ff 	lea    -0x2610(%rbp),%rdi
  4029f5:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  4029fc:	0f 29 85 f0 d9 ff ff 	movaps %xmm0,-0x2610(%rbp)
  402a03:	e8 58 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a08:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a0d:	48 8d bd 90 d8 ff ff 	lea    -0x2770(%rbp),%rdi
  402a14:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402a1b:	0f 29 85 90 d8 ff ff 	movaps %xmm0,-0x2770(%rbp)
  402a22:	e8 39 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a27:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a2c:	48 8d bd 30 d7 ff ff 	lea    -0x28d0(%rbp),%rdi
  402a33:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402a3a:	0f 29 85 30 d7 ff ff 	movaps %xmm0,-0x28d0(%rbp)
  402a41:	e8 1a f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a46:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a4b:	48 8d bd d0 d5 ff ff 	lea    -0x2a30(%rbp),%rdi
  402a52:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402a59:	0f 29 85 d0 d5 ff ff 	movaps %xmm0,-0x2a30(%rbp)
  402a60:	e8 fb f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a65:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a6a:	48 8d bd 70 d4 ff ff 	lea    -0x2b90(%rbp),%rdi
  402a71:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402a78:	0f 29 85 70 d4 ff ff 	movaps %xmm0,-0x2b90(%rbp)
  402a7f:	e8 dc f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a84:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a89:	48 8d bd 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rdi
  402a90:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402a97:	0f 29 85 10 d3 ff ff 	movaps %xmm0,-0x2cf0(%rbp)
  402a9e:	e8 bd f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402aa3:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402aa8:	48 8d bd b0 d1 ff ff 	lea    -0x2e50(%rbp),%rdi
  402aaf:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402ab6:	0f 29 85 b0 d1 ff ff 	movaps %xmm0,-0x2e50(%rbp)
  402abd:	e8 9e f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402ac2:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402ac7:	48 8d bd 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rdi
  402ace:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402ad5:	0f 29 85 50 d0 ff ff 	movaps %xmm0,-0x2fb0(%rbp)
  402adc:	e8 7f f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402ae1:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402ae6:	48 8d bd f0 ce ff ff 	lea    -0x3110(%rbp),%rdi
  402aed:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402af4:	0f 29 85 f0 ce ff ff 	movaps %xmm0,-0x3110(%rbp)
  402afb:	e8 60 f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402b00:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402b05:	48 8d bd 90 cd ff ff 	lea    -0x3270(%rbp),%rdi
  402b0c:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402b13:	0f 29 85 90 cd ff ff 	movaps %xmm0,-0x3270(%rbp)
  402b1a:	e8 41 f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402b1f:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402b24:	48 8d bd 30 cc ff ff 	lea    -0x33d0(%rbp),%rdi
  402b2b:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402b32:	0f 29 85 30 cc ff ff 	movaps %xmm0,-0x33d0(%rbp)
  402b39:	e8 22 f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402b3e:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402b43:	48 8d bd d0 ca ff ff 	lea    -0x3530(%rbp),%rdi
  402b4a:	0f 16 85 c0 c5 ff ff 	movhps -0x3a40(%rbp),%xmm0
  402b51:	0f 29 85 d0 ca ff ff 	movaps %xmm0,-0x3530(%rbp)
  402b58:	e8 03 f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402b5d:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  402b64:	e8 f7 f8 ff ff       	call   402460 <_ZN2sf12RenderWindowD1Ev@plt>
  402b69:	48 89 df             	mov    %rbx,%rdi
  402b6c:	e8 1f f9 ff ff       	call   402490 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  402b71:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402b78:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  402b7f:	48 39 c7             	cmp    %rax,%rdi
  402b82:	0f 84 9c fa ff ff    	je     402624 <main.cold+0x23>
  402b88:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402b8f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402b96:	00 
  402b97:	e8 a4 f6 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402b9c:	e9 83 fa ff ff       	jmp    402624 <main.cold+0x23>
  402ba1:	48 8b 85 b0 c6 ff ff 	mov    -0x3950(%rbp),%rax
  402ba8:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402baf:	00 
  402bb0:	e8 8b f6 ff ff       	call   402240 <_ZdlPvm@plt>
  402bb5:	e9 fa fa ff ff       	jmp    4026b4 <main.cold+0xb3>
      { return _M_dataplus._M_p; }
  402bba:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402bc1:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  402bc8:	48 39 c7             	cmp    %rax,%rdi
  402bcb:	0f 84 53 fa ff ff    	je     402624 <main.cold+0x23>
  402bd1:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402bd8:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402bdf:	00 
  402be0:	e8 5b f6 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402be5:	e9 3a fa ff ff       	jmp    402624 <main.cold+0x23>
      { return _M_dataplus._M_p; }
  402bea:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402bf1:	48 39 df             	cmp    %rbx,%rdi
  402bf4:	74 14                	je     402c0a <main.cold+0x609>
  402bf6:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402bfd:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402c04:	00 
  402c05:	e8 36 f6 ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402c0a:	4c 89 f3             	mov    %r14,%rbx
					typedtext.insert(0, "[root@bois ~] $ Tem alguma coisa piscando\n\n[root@bois ~] $ voce deveria prestar atencao");
  402c0d:	4c 89 ff             	mov    %r15,%rdi
  402c10:	e8 1b f7 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  402c15:	e9 16 fa ff ff       	jmp    402630 <main.cold+0x2f>
      { return _M_dataplus._M_p; }
  402c1a:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402c21:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  402c28:	48 39 c7             	cmp    %rax,%rdi
  402c2b:	74 14                	je     402c41 <main.cold+0x640>
	::operator delete(__p
  402c2d:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402c34:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402c3b:	00 
  402c3c:	e8 ff f5 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402c41:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  402c48:	48 8d 85 50 c7 ff ff 	lea    -0x38b0(%rbp),%rax
  402c4f:	48 39 c7             	cmp    %rax,%rdi
  402c52:	0f 84 d8 f9 ff ff    	je     402630 <main.cold+0x2f>
  402c58:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  402c5f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402c66:	00 
  402c67:	e8 d4 f5 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402c6c:	e9 bf f9 ff ff       	jmp    402630 <main.cold+0x2f>
      { return _M_dataplus._M_p; }
  402c71:	48 8b bd 00 ca ff ff 	mov    -0x3600(%rbp),%rdi
	if (!_M_is_local())
  402c78:	4c 39 e7             	cmp    %r12,%rdi
  402c7b:	0f 84 4b fa ff ff    	je     4026cc <main.cold+0xcb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402c81:	48 8b 85 10 ca ff ff 	mov    -0x35f0(%rbp),%rax
  402c88:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402c8c:	e8 af f5 ff ff       	call   402240 <_ZdlPvm@plt>
  402c91:	e9 36 fa ff ff       	jmp    4026cc <main.cold+0xcb>
      { return _M_dataplus._M_p; }
  402c96:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402c9d:	48 39 df             	cmp    %rbx,%rdi
  402ca0:	0f 85 83 00 00 00    	jne    402d29 <main.cold+0x728>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402ca6:	4c 89 f3             	mov    %r14,%rbx
      { return _M_dataplus._M_p; }
  402ca9:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  402cb0:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  402cb7:	74 10                	je     402cc9 <main.cold+0x6c8>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402cb9:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  402cc0:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402cc4:	e8 77 f5 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402cc9:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  402cd0:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  402cd7:	48 39 c7             	cmp    %rax,%rdi
  402cda:	74 10                	je     402cec <main.cold+0x6eb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402cdc:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  402ce3:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402ce7:	e8 54 f5 ff ff       	call   402240 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  402cec:	4c 89 e7             	mov    %r12,%rdi
  402cef:	e8 3c f6 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  402cf4:	e9 2b f9 ff ff       	jmp    402624 <main.cold+0x23>
      { return _M_dataplus._M_p; }
  402cf9:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402d00:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  402d07:	48 39 c7             	cmp    %rax,%rdi
  402d0a:	0f 84 fd fe ff ff    	je     402c0d <main.cold+0x60c>
  402d10:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402d17:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402d1e:	00 
  402d1f:	e8 1c f5 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402d24:	e9 e4 fe ff ff       	jmp    402c0d <main.cold+0x60c>
  402d29:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402d30:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402d37:	00 
  402d38:	e8 03 f5 ff ff       	call   402240 <_ZdlPvm@plt>
  402d3d:	e9 64 ff ff ff       	jmp    402ca6 <main.cold+0x6a5>
      { return _M_dataplus._M_p; }
  402d42:	48 8b bd 80 c7 ff ff 	mov    -0x3880(%rbp),%rdi
	if (!_M_is_local())
  402d49:	48 8d 85 90 c7 ff ff 	lea    -0x3870(%rbp),%rax
  402d50:	48 39 c7             	cmp    %rax,%rdi
  402d53:	0f 84 5b f9 ff ff    	je     4026b4 <main.cold+0xb3>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402d59:	48 8b 85 90 c7 ff ff 	mov    -0x3870(%rbp),%rax
  402d60:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402d64:	e8 d7 f4 ff ff       	call   402240 <_ZdlPvm@plt>
  402d69:	e9 46 f9 ff ff       	jmp    4026b4 <main.cold+0xb3>
      { return _M_dataplus._M_p; }
  402d6e:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402d75:	48 39 df             	cmp    %rbx,%rdi
  402d78:	74 14                	je     402d8e <main.cold+0x78d>
  402d7a:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402d81:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402d88:	00 
  402d89:	e8 b2 f4 ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402d8e:	4c 89 f3             	mov    %r14,%rbx
  402d91:	e9 77 fe ff ff       	jmp    402c0d <main.cold+0x60c>
      { return _M_dataplus._M_p; }
  402d96:	48 8b bd 00 ca ff ff 	mov    -0x3600(%rbp),%rdi
	if (!_M_is_local())
  402d9d:	4c 39 e7             	cmp    %r12,%rdi
  402da0:	0f 84 1a f9 ff ff    	je     4026c0 <main.cold+0xbf>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402da6:	48 8b 85 10 ca ff ff 	mov    -0x35f0(%rbp),%rax
  402dad:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402db1:	e8 8a f4 ff ff       	call   402240 <_ZdlPvm@plt>
  402db6:	e9 05 f9 ff ff       	jmp    4026c0 <main.cold+0xbf>
      { return _M_dataplus._M_p; }
  402dbb:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402dc2:	48 39 df             	cmp    %rbx,%rdi
  402dc5:	75 7f                	jne    402e46 <main.cold+0x845>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402dc7:	4c 89 f3             	mov    %r14,%rbx
      { return _M_dataplus._M_p; }
  402dca:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  402dd1:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  402dd8:	74 10                	je     402dea <main.cold+0x7e9>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402dda:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  402de1:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402de5:	e8 56 f4 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402dea:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  402df1:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  402df8:	48 39 c7             	cmp    %rax,%rdi
  402dfb:	0f 84 eb fe ff ff    	je     402cec <main.cold+0x6eb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402e01:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  402e08:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402e0c:	e8 2f f4 ff ff       	call   402240 <_ZdlPvm@plt>
  402e11:	e9 d6 fe ff ff       	jmp    402cec <main.cold+0x6eb>
      { return _M_dataplus._M_p; }
  402e16:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402e1d:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  402e24:	48 39 c7             	cmp    %rax,%rdi
  402e27:	0f 84 14 fe ff ff    	je     402c41 <main.cold+0x640>
  402e2d:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402e34:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402e3b:	00 
  402e3c:	e8 ff f3 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402e41:	e9 fb fd ff ff       	jmp    402c41 <main.cold+0x640>
  402e46:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402e4d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402e54:	00 
  402e55:	e8 e6 f3 ff ff       	call   402240 <_ZdlPvm@plt>
  402e5a:	e9 68 ff ff ff       	jmp    402dc7 <main.cold+0x7c6>
      { return _M_dataplus._M_p; }
  402e5f:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402e66:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  402e6d:	48 39 c7             	cmp    %rax,%rdi
  402e70:	0f 84 cb fd ff ff    	je     402c41 <main.cold+0x640>
  402e76:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402e7d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402e84:	00 
  402e85:	e8 b6 f3 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402e8a:	e9 b2 fd ff ff       	jmp    402c41 <main.cold+0x640>
      { return _M_dataplus._M_p; }
  402e8f:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402e96:	48 39 df             	cmp    %rbx,%rdi
  402e99:	74 14                	je     402eaf <main.cold+0x8ae>
  402e9b:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402ea2:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402ea9:	00 
  402eaa:	e8 91 f3 ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402eaf:	4c 89 f3             	mov    %r14,%rbx
      { return _M_dataplus._M_p; }
  402eb2:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  402eb9:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  402ec0:	74 10                	je     402ed2 <main.cold+0x8d1>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402ec2:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  402ec9:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402ecd:	e8 6e f3 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402ed2:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  402ed9:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  402ee0:	48 39 c7             	cmp    %rax,%rdi
  402ee3:	0f 84 03 fe ff ff    	je     402cec <main.cold+0x6eb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402ee9:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  402ef0:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402ef4:	e8 47 f3 ff ff       	call   402240 <_ZdlPvm@plt>
  402ef9:	e9 ee fd ff ff       	jmp    402cec <main.cold+0x6eb>
      { return _M_dataplus._M_p; }
  402efe:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402f05:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  402f0c:	48 39 c7             	cmp    %rax,%rdi
  402f0f:	0f 84 2c fd ff ff    	je     402c41 <main.cold+0x640>
  402f15:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402f1c:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402f23:	00 
  402f24:	e8 17 f3 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402f29:	e9 13 fd ff ff       	jmp    402c41 <main.cold+0x640>
      { return _M_dataplus._M_p; }
  402f2e:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402f35:	48 39 df             	cmp    %rbx,%rdi
  402f38:	74 14                	je     402f4e <main.cold+0x94d>
  402f3a:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402f41:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402f48:	00 
  402f49:	e8 f2 f2 ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402f4e:	4c 89 f3             	mov    %r14,%rbx
      { return _M_dataplus._M_p; }
  402f51:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  402f58:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  402f5f:	74 10                	je     402f71 <main.cold+0x970>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402f61:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  402f68:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402f6c:	e8 cf f2 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402f71:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  402f78:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  402f7f:	48 39 c7             	cmp    %rax,%rdi
  402f82:	0f 84 64 fd ff ff    	je     402cec <main.cold+0x6eb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402f88:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  402f8f:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402f93:	e8 a8 f2 ff ff       	call   402240 <_ZdlPvm@plt>
  402f98:	e9 4f fd ff ff       	jmp    402cec <main.cold+0x6eb>
      { return _M_dataplus._M_p; }
  402f9d:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402fa4:	48 39 df             	cmp    %rbx,%rdi
  402fa7:	74 14                	je     402fbd <main.cold+0x9bc>
  402fa9:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402fb0:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402fb7:	00 
  402fb8:	e8 83 f2 ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402fbd:	4c 89 e3             	mov    %r12,%rbx
  402fc0:	e9 5f f6 ff ff       	jmp    402624 <main.cold+0x23>
      { return _M_dataplus._M_p; }
  402fc5:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402fcc:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  402fd3:	48 39 c7             	cmp    %rax,%rdi
  402fd6:	0f 84 31 fc ff ff    	je     402c0d <main.cold+0x60c>
	::operator delete(__p
  402fdc:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  402fe3:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402fea:	00 
  402feb:	e8 50 f2 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402ff0:	e9 18 fc ff ff       	jmp    402c0d <main.cold+0x60c>
      { return _M_dataplus._M_p; }
  402ff5:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  402ffc:	48 39 df             	cmp    %rbx,%rdi
  402fff:	74 14                	je     403015 <main.cold+0xa14>
  403001:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  403008:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40300f:	00 
  403010:	e8 2b f2 ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403015:	4c 89 f3             	mov    %r14,%rbx
  403018:	e9 f0 fb ff ff       	jmp    402c0d <main.cold+0x60c>
      { return _M_dataplus._M_p; }
  40301d:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  403024:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  40302b:	48 39 c7             	cmp    %rax,%rdi
  40302e:	0f 84 d9 fb ff ff    	je     402c0d <main.cold+0x60c>
	::operator delete(__p
  403034:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40303b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403042:	00 
  403043:	e8 f8 f1 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403048:	e9 c0 fb ff ff       	jmp    402c0d <main.cold+0x60c>
      { return _M_dataplus._M_p; }
  40304d:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  403054:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  40305b:	48 39 c7             	cmp    %rax,%rdi
  40305e:	0f 84 dd fb ff ff    	je     402c41 <main.cold+0x640>
  403064:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40306b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403072:	00 
  403073:	e8 c8 f1 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403078:	e9 c4 fb ff ff       	jmp    402c41 <main.cold+0x640>
      { return _M_dataplus._M_p; }
  40307d:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  403084:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  40308b:	48 39 c7             	cmp    %rax,%rdi
  40308e:	0f 84 79 fb ff ff    	je     402c0d <main.cold+0x60c>
  403094:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40309b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4030a2:	00 
  4030a3:	e8 98 f1 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4030a8:	e9 60 fb ff ff       	jmp    402c0d <main.cold+0x60c>
      { return _M_dataplus._M_p; }
  4030ad:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4030b4:	48 39 df             	cmp    %rbx,%rdi
  4030b7:	74 14                	je     4030cd <main.cold+0xacc>
  4030b9:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4030c0:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4030c7:	00 
  4030c8:	e8 73 f1 ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4030cd:	4c 89 f3             	mov    %r14,%rbx
  4030d0:	e9 38 fb ff ff       	jmp    402c0d <main.cold+0x60c>
      { return _M_dataplus._M_p; }
  4030d5:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4030dc:	48 39 df             	cmp    %rbx,%rdi
  4030df:	0f 85 38 02 00 00    	jne    40331d <main.cold+0xd1c>
  4030e5:	4c 89 f3             	mov    %r14,%rbx
      { return _M_dataplus._M_p; }
  4030e8:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  4030ef:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  4030f6:	74 10                	je     403108 <main.cold+0xb07>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4030f8:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  4030ff:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  403103:	e8 38 f1 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403108:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  40310f:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  403116:	48 39 c7             	cmp    %rax,%rdi
  403119:	0f 84 cd fb ff ff    	je     402cec <main.cold+0x6eb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40311f:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  403126:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40312a:	e8 11 f1 ff ff       	call   402240 <_ZdlPvm@plt>
  40312f:	e9 b8 fb ff ff       	jmp    402cec <main.cold+0x6eb>
      { return _M_dataplus._M_p; }
  403134:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40313b:	48 39 df             	cmp    %rbx,%rdi
  40313e:	75 77                	jne    4031b7 <main.cold+0xbb6>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403140:	4c 89 f3             	mov    %r14,%rbx
      { return _M_dataplus._M_p; }
  403143:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  40314a:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  403151:	74 10                	je     403163 <main.cold+0xb62>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403153:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  40315a:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  40315e:	e8 dd f0 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403163:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  40316a:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  403171:	48 39 c7             	cmp    %rax,%rdi
  403174:	0f 84 72 fb ff ff    	je     402cec <main.cold+0x6eb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40317a:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  403181:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403185:	e8 b6 f0 ff ff       	call   402240 <_ZdlPvm@plt>
  40318a:	e9 5d fb ff ff       	jmp    402cec <main.cold+0x6eb>
      { return _M_dataplus._M_p; }
  40318f:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  403196:	48 39 df             	cmp    %rbx,%rdi
  403199:	74 14                	je     4031af <main.cold+0xbae>
  40319b:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4031a2:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4031a9:	00 
  4031aa:	e8 91 f0 ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4031af:	4c 89 f3             	mov    %r14,%rbx
  4031b2:	e9 56 fa ff ff       	jmp    402c0d <main.cold+0x60c>
	::operator delete(__p
  4031b7:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4031be:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4031c5:	00 
  4031c6:	e8 75 f0 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4031cb:	e9 70 ff ff ff       	jmp    403140 <main.cold+0xb3f>
      { return _M_dataplus._M_p; }
  4031d0:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4031d7:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  4031de:	48 39 c7             	cmp    %rax,%rdi
  4031e1:	0f 84 26 fa ff ff    	je     402c0d <main.cold+0x60c>
  4031e7:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4031ee:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4031f5:	00 
  4031f6:	e8 45 f0 ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4031fb:	e9 0d fa ff ff       	jmp    402c0d <main.cold+0x60c>
      { return _M_dataplus._M_p; }
  403200:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  403207:	48 39 df             	cmp    %rbx,%rdi
  40320a:	74 14                	je     403220 <main.cold+0xc1f>
  40320c:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  403213:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40321a:	00 
  40321b:	e8 20 f0 ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403220:	4c 89 f3             	mov    %r14,%rbx
      { return _M_dataplus._M_p; }
  403223:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  40322a:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  403231:	74 10                	je     403243 <main.cold+0xc42>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403233:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  40323a:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  40323e:	e8 fd ef ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403243:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  40324a:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  403251:	48 39 c7             	cmp    %rax,%rdi
  403254:	0f 84 92 fa ff ff    	je     402cec <main.cold+0x6eb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40325a:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  403261:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403265:	e8 d6 ef ff ff       	call   402240 <_ZdlPvm@plt>
  40326a:	e9 7d fa ff ff       	jmp    402cec <main.cold+0x6eb>
      { return _M_dataplus._M_p; }
  40326f:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  403276:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  40327d:	48 39 c7             	cmp    %rax,%rdi
  403280:	0f 84 bb f9 ff ff    	je     402c41 <main.cold+0x640>
  403286:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40328d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403294:	00 
  403295:	e8 a6 ef ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40329a:	e9 a2 f9 ff ff       	jmp    402c41 <main.cold+0x640>
      { return _M_dataplus._M_p; }
  40329f:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
	if (!_M_is_local())
  4032a6:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  4032ad:	48 39 c7             	cmp    %rax,%rdi
  4032b0:	0f 84 2e f4 ff ff    	je     4026e4 <main.cold+0xe3>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4032b6:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  4032bd:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4032c1:	e8 7a ef ff ff       	call   402240 <_ZdlPvm@plt>
  4032c6:	e9 19 f4 ff ff       	jmp    4026e4 <main.cold+0xe3>
  4032cb:	48 8d bd 80 c7 ff ff 	lea    -0x3880(%rbp),%rdi
  4032d2:	e8 59 f0 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  4032d7:	e9 c1 f3 ff ff       	jmp    40269d <main.cold+0x9c>
  4032dc:	48 8d bd 80 c7 ff ff 	lea    -0x3880(%rbp),%rdi
  4032e3:	e8 48 f0 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  4032e8:	e9 c7 f3 ff ff       	jmp    4026b4 <main.cold+0xb3>
      { return _M_dataplus._M_p; }
  4032ed:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4032f4:	48 8d 85 70 c7 ff ff 	lea    -0x3890(%rbp),%rax
  4032fb:	48 39 c7             	cmp    %rax,%rdi
  4032fe:	0f 84 3d f9 ff ff    	je     402c41 <main.cold+0x640>
  403304:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40330b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403312:	00 
  403313:	e8 28 ef ff ff       	call   402240 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403318:	e9 24 f9 ff ff       	jmp    402c41 <main.cold+0x640>
  40331d:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  403324:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40332b:	00 
  40332c:	e8 0f ef ff ff       	call   402240 <_ZdlPvm@plt>
  403331:	e9 af fd ff ff       	jmp    4030e5 <main.cold+0xae4>
      { return _M_dataplus._M_p; }
  403336:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
	if (!_M_is_local())
  40333d:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  403344:	48 39 c7             	cmp    %rax,%rdi
  403347:	74 14                	je     40335d <main.cold+0xd5c>
  403349:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  403350:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403357:	00 
  403358:	e8 e3 ee ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  40335d:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  403364:	e8 c7 ef ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  403369:	48 89 df             	mov    %rbx,%rdi
  40336c:	e8 1f f1 ff ff       	call   402490 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  403371:	48 8b bd 00 ca ff ff 	mov    -0x3600(%rbp),%rdi
	if (!_M_is_local())
  403378:	48 8d 85 10 ca ff ff 	lea    -0x35f0(%rbp),%rax
  40337f:	48 39 c7             	cmp    %rax,%rdi
  403382:	74 14                	je     403398 <main.cold+0xd97>
	::operator delete(__p
  403384:	48 8b 85 10 ca ff ff 	mov    -0x35f0(%rbp),%rax
  40338b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403392:	00 
  403393:	e8 a8 ee ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403398:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  40339f:	e8 8c ef ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  4033a4:	e9 3b f3 ff ff       	jmp    4026e4 <main.cold+0xe3>

00000000004033a9 <.annobin_abi_note.c.exit>:
  4033a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004033b0 <_GLOBAL__sub_I__Z17char_to_stringbitB5cxx11c>:
}
  4033b0:	48 83 ec 08          	sub    $0x8,%rsp
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
  4033b4:	bf 69 c4 40 00       	mov    $0x40c469,%edi
  4033b9:	e8 d2 ef ff ff       	call   402390 <_ZNSt8ios_base4InitC1Ev@plt>
  4033be:	ba 08 90 40 00       	mov    $0x409008,%edx
  4033c3:	be 69 c4 40 00       	mov    $0x40c469,%esi
  4033c8:	bf f0 24 40 00       	mov    $0x4024f0,%edi
  4033cd:	48 83 c4 08          	add    $0x8,%rsp
  4033d1:	e9 3a ee ff ff       	jmp    402210 <__cxa_atexit@plt>
  4033d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4033dd:	00 00 00 

00000000004033e0 <main>:
{
  4033e0:	55                   	push   %rbp
  4033e1:	48 89 e5             	mov    %rsp,%rbp
  4033e4:	41 57                	push   %r15
  4033e6:	41 56                	push   %r14
  4033e8:	41 55                	push   %r13
  4033ea:	41 54                	push   %r12
  4033ec:	53                   	push   %rbx
  4033ed:	48 89 f3             	mov    %rsi,%rbx
  4033f0:	48 81 ec 58 3a 00 00 	sub    $0x3a58,%rsp
if(argc < 2){
  4033f7:	83 ff 01             	cmp    $0x1,%edi
  4033fa:	0f 8e 4f 3d 00 00    	jle    40714f <main+0x3d6f>
if((fd = open(argv[1], O_RDWR)) < 0){
  403400:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  403404:	31 c0                	xor    %eax,%eax
  403406:	be 02 00 00 00       	mov    $0x2,%esi
  40340b:	e8 80 ed ff ff       	call   402190 <open@plt>
  403410:	89 85 a8 c5 ff ff    	mov    %eax,-0x3a58(%rbp)
  403416:	85 c0                	test   %eax,%eax
  403418:	0f 88 fa 3d 00 00    	js     407218 <main+0x3e38>
sf::VideoMode videomode(800, 600);
  40341e:	ba 58 02 00 00       	mov    $0x258,%edx
  403423:	be 20 03 00 00       	mov    $0x320,%esi
  403428:	b9 20 00 00 00       	mov    $0x20,%ecx
  40342d:	48 8d bd 54 c6 ff ff 	lea    -0x39ac(%rbp),%rdi
  403434:	e8 67 ed ff ff       	call   4021a0 <_ZN2sf9VideoModeC1Ejjj@plt>
    /// \param attributes   Attribute flags of the context
    /// \param sRgb         sRGB capable framebuffer
    ///
    ////////////////////////////////////////////////////////////
    explicit ContextSettings(unsigned int depth = 0, unsigned int stencil = 0, unsigned int antialiasing = 0, unsigned int major = 1, unsigned int minor = 1, unsigned int attributes = Default, bool sRgb = false) :
    depthBits        (depth),
  403439:	66 0f 6f 05 3f 63 00 	movdqa 0x633f(%rip),%xmm0        # 409780 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  403440:	00 
    stencilBits      (stencil),
    antialiasingLevel(antialiasing),
    majorVersion     (major),
    minorVersion     (minor),
  403441:	48 8b 05 10 63 00 00 	mov    0x6310(%rip),%rax        # 409758 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd8>
sf::RenderWindow window(videomode, "Project IHS", sf::Style::Titlebar | sf::Style::Default); //close button and not resizable
  403448:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
    attributeFlags   (attributes),
    sRgbCapable      (sRgb)
  40344f:	c6 85 08 fb ff ff 00 	movb   $0x0,-0x4f8(%rbp)
    minorVersion     (minor),
  403456:	48 89 85 00 fb ff ff 	mov    %rax,-0x500(%rbp)
    depthBits        (depth),
  40345d:	0f 29 85 f0 fa ff ff 	movaps %xmm0,-0x510(%rbp)
  403464:	e8 77 f0 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  403469:	48 8d 95 90 f9 ff ff 	lea    -0x670(%rbp),%rdx
  403470:	be 9a 90 40 00       	mov    $0x40909a,%esi
  403475:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  40347c:	e8 6f ec ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  403481:	48 8b b5 54 c6 ff ff 	mov    -0x39ac(%rbp),%rsi
  403488:	8b 95 5c c6 ff ff    	mov    -0x39a4(%rbp),%edx
  40348e:	4c 8d 8d f0 fa ff ff 	lea    -0x510(%rbp),%r9
  403495:	41 b8 07 00 00 00    	mov    $0x7,%r8d
  40349b:	48 8d 8d 50 fc ff ff 	lea    -0x3b0(%rbp),%rcx
  4034a2:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  4034a9:	e8 c2 ee ff ff       	call   402370 <_ZN2sf12RenderWindowC1ENS_9VideoModeERKNS_6StringEjRKNS_15ContextSettingsE@plt>
      { return _M_dataplus._M_p; }
  4034ae:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
	if (!_M_is_local())
  4034b5:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  4034bc:	48 39 c7             	cmp    %rax,%rdi
  4034bf:	74 14                	je     4034d5 <main+0xf5>
	::operator delete(__p
  4034c1:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  4034c8:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4034cf:	00 
  4034d0:	e8 6b ed ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4034d5:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  4034dc:	e8 4f ee ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
sf::CircleShape greenSquare1(30, 4);
  4034e1:	f3 0f 10 05 c7 62 00 	movss  0x62c7(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4034e8:	00 
  4034e9:	be 04 00 00 00       	mov    $0x4,%esi
  4034ee:	48 8d bd d0 ca ff ff 	lea    -0x3530(%rbp),%rdi
  4034f5:	e8 c6 ec ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare1.setFillColor(GREEN);
  4034fa:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403500:	b9 99 00 00 00       	mov    $0x99,%ecx
  403505:	ba de 00 00 00       	mov    $0xde,%edx
  40350a:	be 6c 00 00 00       	mov    $0x6c,%esi
  40350f:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403516:	e8 e5 eb ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40351b:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403522:	48 8d bd d0 ca ff ff 	lea    -0x3530(%rbp),%rdi
  403529:	e8 82 ef ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare1.setPosition(20.f, 50.f);
  40352e:	f3 0f 10 0d 7e 62 00 	movss  0x627e(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403535:	00 
  403536:	f3 0f 10 05 7a 62 00 	movss  0x627a(%rip),%xmm0        # 4097b8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  40353d:	00 
  40353e:	48 8d bd d8 ca ff ff 	lea    -0x3528(%rbp),%rdi
  403545:	e8 e6 eb ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare1(30, 4);
  40354a:	f3 0f 10 05 5e 62 00 	movss  0x625e(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403551:	00 
  403552:	be 04 00 00 00       	mov    $0x4,%esi
  403557:	48 8d bd 30 cc ff ff 	lea    -0x33d0(%rbp),%rdi
  40355e:	e8 5d ec ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare1.setFillColor(RED);
  403563:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403569:	31 c9                	xor    %ecx,%ecx
  40356b:	31 d2                	xor    %edx,%edx
  40356d:	be fe 00 00 00       	mov    $0xfe,%esi
  403572:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403579:	e8 82 eb ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40357e:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403585:	48 8d bd 30 cc ff ff 	lea    -0x33d0(%rbp),%rdi
  40358c:	e8 1f ef ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare1.setPosition(20.f, 50.f);
  403591:	f3 0f 10 0d 1b 62 00 	movss  0x621b(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403598:	00 
  403599:	f3 0f 10 05 17 62 00 	movss  0x6217(%rip),%xmm0        # 4097b8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  4035a0:	00 
  4035a1:	48 8d bd 38 cc ff ff 	lea    -0x33c8(%rbp),%rdi
  4035a8:	e8 83 eb ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare2(30, 4);
  4035ad:	f3 0f 10 05 fb 61 00 	movss  0x61fb(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4035b4:	00 
  4035b5:	be 04 00 00 00       	mov    $0x4,%esi
  4035ba:	48 8d bd 90 cd ff ff 	lea    -0x3270(%rbp),%rdi
  4035c1:	e8 fa eb ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare2.setFillColor(GREEN);
  4035c6:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4035cc:	b9 99 00 00 00       	mov    $0x99,%ecx
  4035d1:	ba de 00 00 00       	mov    $0xde,%edx
  4035d6:	be 6c 00 00 00       	mov    $0x6c,%esi
  4035db:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4035e2:	e8 19 eb ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4035e7:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4035ee:	48 8d bd 90 cd ff ff 	lea    -0x3270(%rbp),%rdi
  4035f5:	e8 b6 ee ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare2.setPosition(100.f, 50.f);
  4035fa:	f3 0f 10 0d b2 61 00 	movss  0x61b2(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403601:	00 
  403602:	f3 0f 10 05 b2 61 00 	movss  0x61b2(%rip),%xmm0        # 4097bc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403609:	00 
  40360a:	48 8d bd 98 cd ff ff 	lea    -0x3268(%rbp),%rdi
  403611:	e8 1a eb ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare2(30, 4);
  403616:	f3 0f 10 05 92 61 00 	movss  0x6192(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  40361d:	00 
  40361e:	be 04 00 00 00       	mov    $0x4,%esi
  403623:	48 8d bd f0 ce ff ff 	lea    -0x3110(%rbp),%rdi
  40362a:	e8 91 eb ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare2.setFillColor(RED);
  40362f:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403635:	31 c9                	xor    %ecx,%ecx
  403637:	31 d2                	xor    %edx,%edx
  403639:	be fe 00 00 00       	mov    $0xfe,%esi
  40363e:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403645:	e8 b6 ea ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40364a:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403651:	48 8d bd f0 ce ff ff 	lea    -0x3110(%rbp),%rdi
  403658:	e8 53 ee ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare2.setPosition(100.f, 50.f);
  40365d:	f3 0f 10 0d 4f 61 00 	movss  0x614f(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403664:	00 
  403665:	f3 0f 10 05 4f 61 00 	movss  0x614f(%rip),%xmm0        # 4097bc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  40366c:	00 
  40366d:	48 8d bd f8 ce ff ff 	lea    -0x3108(%rbp),%rdi
  403674:	e8 b7 ea ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare3(30, 4);
  403679:	f3 0f 10 05 2f 61 00 	movss  0x612f(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403680:	00 
  403681:	be 04 00 00 00       	mov    $0x4,%esi
  403686:	48 8d bd 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rdi
  40368d:	e8 2e eb ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare3.setFillColor(GREEN);
  403692:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403698:	b9 99 00 00 00       	mov    $0x99,%ecx
  40369d:	ba de 00 00 00       	mov    $0xde,%edx
  4036a2:	be 6c 00 00 00       	mov    $0x6c,%esi
  4036a7:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4036ae:	e8 4d ea ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4036b3:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4036ba:	48 8d bd 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rdi
  4036c1:	e8 ea ed ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare3.setPosition(180.f, 50.f);
  4036c6:	f3 0f 10 0d e6 60 00 	movss  0x60e6(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  4036cd:	00 
  4036ce:	f3 0f 10 05 ea 60 00 	movss  0x60ea(%rip),%xmm0        # 4097c0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  4036d5:	00 
  4036d6:	48 8d bd 58 d0 ff ff 	lea    -0x2fa8(%rbp),%rdi
  4036dd:	e8 4e ea ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare3(30, 4);
  4036e2:	f3 0f 10 05 c6 60 00 	movss  0x60c6(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4036e9:	00 
  4036ea:	be 04 00 00 00       	mov    $0x4,%esi
  4036ef:	48 8d bd b0 d1 ff ff 	lea    -0x2e50(%rbp),%rdi
  4036f6:	e8 c5 ea ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare3.setFillColor(RED);
  4036fb:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403701:	31 c9                	xor    %ecx,%ecx
  403703:	31 d2                	xor    %edx,%edx
  403705:	be fe 00 00 00       	mov    $0xfe,%esi
  40370a:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403711:	e8 ea e9 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403716:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40371d:	48 8d bd b0 d1 ff ff 	lea    -0x2e50(%rbp),%rdi
  403724:	e8 87 ed ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare3.setPosition(180.f, 50.f);
  403729:	f3 0f 10 0d 83 60 00 	movss  0x6083(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403730:	00 
  403731:	f3 0f 10 05 87 60 00 	movss  0x6087(%rip),%xmm0        # 4097c0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  403738:	00 
  403739:	48 8d bd b8 d1 ff ff 	lea    -0x2e48(%rbp),%rdi
  403740:	e8 eb e9 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare4(30, 4);
  403745:	f3 0f 10 05 63 60 00 	movss  0x6063(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  40374c:	00 
  40374d:	be 04 00 00 00       	mov    $0x4,%esi
  403752:	48 8d bd 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rdi
  403759:	e8 62 ea ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare4.setFillColor(GREEN);
  40375e:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403764:	b9 99 00 00 00       	mov    $0x99,%ecx
  403769:	ba de 00 00 00       	mov    $0xde,%edx
  40376e:	be 6c 00 00 00       	mov    $0x6c,%esi
  403773:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  40377a:	e8 81 e9 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40377f:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403786:	48 8d bd 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rdi
  40378d:	e8 1e ed ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare4.setPosition(260.f, 50.f);
  403792:	f3 0f 10 0d 1a 60 00 	movss  0x601a(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403799:	00 
  40379a:	f3 0f 10 05 22 60 00 	movss  0x6022(%rip),%xmm0        # 4097c4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  4037a1:	00 
  4037a2:	48 8d bd 18 d3 ff ff 	lea    -0x2ce8(%rbp),%rdi
  4037a9:	e8 82 e9 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare4(30, 4);
  4037ae:	f3 0f 10 05 fa 5f 00 	movss  0x5ffa(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4037b5:	00 
  4037b6:	be 04 00 00 00       	mov    $0x4,%esi
  4037bb:	48 8d bd 70 d4 ff ff 	lea    -0x2b90(%rbp),%rdi
  4037c2:	e8 f9 e9 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare4.setFillColor(RED);
  4037c7:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4037cd:	31 c9                	xor    %ecx,%ecx
  4037cf:	31 d2                	xor    %edx,%edx
  4037d1:	be fe 00 00 00       	mov    $0xfe,%esi
  4037d6:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4037dd:	e8 1e e9 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4037e2:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4037e9:	48 8d bd 70 d4 ff ff 	lea    -0x2b90(%rbp),%rdi
  4037f0:	e8 bb ec ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare4.setPosition(260.f, 50.f);
  4037f5:	f3 0f 10 0d b7 5f 00 	movss  0x5fb7(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  4037fc:	00 
  4037fd:	f3 0f 10 05 bf 5f 00 	movss  0x5fbf(%rip),%xmm0        # 4097c4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  403804:	00 
  403805:	48 8d bd 78 d4 ff ff 	lea    -0x2b88(%rbp),%rdi
  40380c:	e8 1f e9 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare5(30, 4);
  403811:	f3 0f 10 05 97 5f 00 	movss  0x5f97(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403818:	00 
  403819:	be 04 00 00 00       	mov    $0x4,%esi
  40381e:	48 8d bd d0 d5 ff ff 	lea    -0x2a30(%rbp),%rdi
  403825:	e8 96 e9 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare5.setFillColor(GREEN);
  40382a:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403830:	b9 99 00 00 00       	mov    $0x99,%ecx
  403835:	ba de 00 00 00       	mov    $0xde,%edx
  40383a:	be 6c 00 00 00       	mov    $0x6c,%esi
  40383f:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403846:	e8 b5 e8 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40384b:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403852:	48 8d bd d0 d5 ff ff 	lea    -0x2a30(%rbp),%rdi
  403859:	e8 52 ec ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare5.setPosition(340.f, 50.f);
  40385e:	f3 0f 10 0d 4e 5f 00 	movss  0x5f4e(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403865:	00 
  403866:	f3 0f 10 05 5a 5f 00 	movss  0x5f5a(%rip),%xmm0        # 4097c8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  40386d:	00 
  40386e:	48 8d bd d8 d5 ff ff 	lea    -0x2a28(%rbp),%rdi
  403875:	e8 b6 e8 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare5(30, 4);
  40387a:	f3 0f 10 05 2e 5f 00 	movss  0x5f2e(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403881:	00 
  403882:	be 04 00 00 00       	mov    $0x4,%esi
  403887:	48 8d bd 30 d7 ff ff 	lea    -0x28d0(%rbp),%rdi
  40388e:	e8 2d e9 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare5.setFillColor(RED);
  403893:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403899:	31 c9                	xor    %ecx,%ecx
  40389b:	31 d2                	xor    %edx,%edx
  40389d:	be fe 00 00 00       	mov    $0xfe,%esi
  4038a2:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4038a9:	e8 52 e8 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4038ae:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4038b5:	48 8d bd 30 d7 ff ff 	lea    -0x28d0(%rbp),%rdi
  4038bc:	e8 ef eb ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare5.setPosition(340.f, 50.f);
  4038c1:	f3 0f 10 0d eb 5e 00 	movss  0x5eeb(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  4038c8:	00 
  4038c9:	f3 0f 10 05 f7 5e 00 	movss  0x5ef7(%rip),%xmm0        # 4097c8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  4038d0:	00 
  4038d1:	48 8d bd 38 d7 ff ff 	lea    -0x28c8(%rbp),%rdi
  4038d8:	e8 53 e8 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare6(30, 4);
  4038dd:	f3 0f 10 05 cb 5e 00 	movss  0x5ecb(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4038e4:	00 
  4038e5:	be 04 00 00 00       	mov    $0x4,%esi
  4038ea:	48 8d bd 90 d8 ff ff 	lea    -0x2770(%rbp),%rdi
  4038f1:	e8 ca e8 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare6.setFillColor(GREEN);
  4038f6:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4038fc:	b9 99 00 00 00       	mov    $0x99,%ecx
  403901:	ba de 00 00 00       	mov    $0xde,%edx
  403906:	be 6c 00 00 00       	mov    $0x6c,%esi
  40390b:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403912:	e8 e9 e7 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403917:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40391e:	48 8d bd 90 d8 ff ff 	lea    -0x2770(%rbp),%rdi
  403925:	e8 86 eb ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare6.setPosition(420.f, 50.f);
  40392a:	f3 0f 10 0d 82 5e 00 	movss  0x5e82(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403931:	00 
  403932:	f3 0f 10 05 92 5e 00 	movss  0x5e92(%rip),%xmm0        # 4097cc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  403939:	00 
  40393a:	48 8d bd 98 d8 ff ff 	lea    -0x2768(%rbp),%rdi
  403941:	e8 ea e7 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare6(30, 4);
  403946:	f3 0f 10 05 62 5e 00 	movss  0x5e62(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  40394d:	00 
  40394e:	be 04 00 00 00       	mov    $0x4,%esi
  403953:	48 8d bd f0 d9 ff ff 	lea    -0x2610(%rbp),%rdi
  40395a:	e8 61 e8 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare6.setFillColor(RED);
  40395f:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403965:	31 c9                	xor    %ecx,%ecx
  403967:	31 d2                	xor    %edx,%edx
  403969:	be fe 00 00 00       	mov    $0xfe,%esi
  40396e:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403975:	e8 86 e7 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40397a:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403981:	48 8d bd f0 d9 ff ff 	lea    -0x2610(%rbp),%rdi
  403988:	e8 23 eb ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare6.setPosition(420.f, 50.f);
  40398d:	f3 0f 10 0d 1f 5e 00 	movss  0x5e1f(%rip),%xmm1        # 4097b4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403994:	00 
  403995:	f3 0f 10 05 2f 5e 00 	movss  0x5e2f(%rip),%xmm0        # 4097cc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  40399c:	00 
  40399d:	48 8d bd f8 d9 ff ff 	lea    -0x2608(%rbp),%rdi
  4039a4:	e8 87 e7 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare7(30, 4);
  4039a9:	f3 0f 10 05 ff 5d 00 	movss  0x5dff(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4039b0:	00 
  4039b1:	be 04 00 00 00       	mov    $0x4,%esi
  4039b6:	48 8d bd 50 db ff ff 	lea    -0x24b0(%rbp),%rdi
  4039bd:	e8 fe e7 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare7.setFillColor(GREEN);
  4039c2:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4039c8:	b9 99 00 00 00       	mov    $0x99,%ecx
  4039cd:	ba de 00 00 00       	mov    $0xde,%edx
  4039d2:	be 6c 00 00 00       	mov    $0x6c,%esi
  4039d7:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4039de:	e8 1d e7 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4039e3:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4039ea:	48 8d bd 50 db ff ff 	lea    -0x24b0(%rbp),%rdi
  4039f1:	e8 ba ea ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare7.setPosition(20.f, 190.f);
  4039f6:	f3 0f 10 0d d2 5d 00 	movss  0x5dd2(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  4039fd:	00 
  4039fe:	f3 0f 10 05 b2 5d 00 	movss  0x5db2(%rip),%xmm0        # 4097b8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  403a05:	00 
  403a06:	48 8d bd 58 db ff ff 	lea    -0x24a8(%rbp),%rdi
  403a0d:	e8 1e e7 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare7(30, 4);
  403a12:	f3 0f 10 05 96 5d 00 	movss  0x5d96(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403a19:	00 
  403a1a:	be 04 00 00 00       	mov    $0x4,%esi
  403a1f:	48 8d bd b0 dc ff ff 	lea    -0x2350(%rbp),%rdi
  403a26:	e8 95 e7 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare7.setFillColor(RED);
  403a2b:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403a31:	31 c9                	xor    %ecx,%ecx
  403a33:	31 d2                	xor    %edx,%edx
  403a35:	be fe 00 00 00       	mov    $0xfe,%esi
  403a3a:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403a41:	e8 ba e6 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403a46:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403a4d:	48 8d bd b0 dc ff ff 	lea    -0x2350(%rbp),%rdi
  403a54:	e8 57 ea ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare7.setPosition(20.f, 190.f);
  403a59:	f3 0f 10 0d 6f 5d 00 	movss  0x5d6f(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403a60:	00 
  403a61:	f3 0f 10 05 4f 5d 00 	movss  0x5d4f(%rip),%xmm0        # 4097b8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  403a68:	00 
  403a69:	48 8d bd b8 dc ff ff 	lea    -0x2348(%rbp),%rdi
  403a70:	e8 bb e6 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare8(30, 4);
  403a75:	f3 0f 10 05 33 5d 00 	movss  0x5d33(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403a7c:	00 
  403a7d:	be 04 00 00 00       	mov    $0x4,%esi
  403a82:	48 8d bd 10 de ff ff 	lea    -0x21f0(%rbp),%rdi
  403a89:	e8 32 e7 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare8.setFillColor(GREEN);
  403a8e:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403a94:	b9 99 00 00 00       	mov    $0x99,%ecx
  403a99:	ba de 00 00 00       	mov    $0xde,%edx
  403a9e:	be 6c 00 00 00       	mov    $0x6c,%esi
  403aa3:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403aaa:	e8 51 e6 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403aaf:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403ab6:	48 8d bd 10 de ff ff 	lea    -0x21f0(%rbp),%rdi
  403abd:	e8 ee e9 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare8.setPosition(100.f, 190.f);
  403ac2:	f3 0f 10 0d 06 5d 00 	movss  0x5d06(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403ac9:	00 
  403aca:	f3 0f 10 05 ea 5c 00 	movss  0x5cea(%rip),%xmm0        # 4097bc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403ad1:	00 
  403ad2:	48 8d bd 18 de ff ff 	lea    -0x21e8(%rbp),%rdi
  403ad9:	e8 52 e6 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape	redSquare8(30, 4);
  403ade:	f3 0f 10 05 ca 5c 00 	movss  0x5cca(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403ae5:	00 
  403ae6:	be 04 00 00 00       	mov    $0x4,%esi
  403aeb:	48 8d bd 70 df ff ff 	lea    -0x2090(%rbp),%rdi
  403af2:	e8 c9 e6 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare8.setFillColor(RED);
  403af7:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403afd:	31 c9                	xor    %ecx,%ecx
  403aff:	31 d2                	xor    %edx,%edx
  403b01:	be fe 00 00 00       	mov    $0xfe,%esi
  403b06:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403b0d:	e8 ee e5 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403b12:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403b19:	48 8d bd 70 df ff ff 	lea    -0x2090(%rbp),%rdi
  403b20:	e8 8b e9 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare8.setPosition(100.f, 190.f);
  403b25:	f3 0f 10 0d a3 5c 00 	movss  0x5ca3(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403b2c:	00 
  403b2d:	f3 0f 10 05 87 5c 00 	movss  0x5c87(%rip),%xmm0        # 4097bc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403b34:	00 
  403b35:	48 8d bd 78 df ff ff 	lea    -0x2088(%rbp),%rdi
  403b3c:	e8 ef e5 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare9(30, 4);
  403b41:	f3 0f 10 05 67 5c 00 	movss  0x5c67(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403b48:	00 
  403b49:	be 04 00 00 00       	mov    $0x4,%esi
  403b4e:	48 8d bd d0 e0 ff ff 	lea    -0x1f30(%rbp),%rdi
  403b55:	e8 66 e6 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare9.setFillColor(GREEN);
  403b5a:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403b60:	b9 99 00 00 00       	mov    $0x99,%ecx
  403b65:	ba de 00 00 00       	mov    $0xde,%edx
  403b6a:	be 6c 00 00 00       	mov    $0x6c,%esi
  403b6f:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403b76:	e8 85 e5 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403b7b:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403b82:	48 8d bd d0 e0 ff ff 	lea    -0x1f30(%rbp),%rdi
  403b89:	e8 22 e9 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare9.setPosition(180.f, 190.f);
  403b8e:	f3 0f 10 0d 3a 5c 00 	movss  0x5c3a(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403b95:	00 
  403b96:	f3 0f 10 05 22 5c 00 	movss  0x5c22(%rip),%xmm0        # 4097c0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  403b9d:	00 
  403b9e:	48 8d bd d8 e0 ff ff 	lea    -0x1f28(%rbp),%rdi
  403ba5:	e8 86 e5 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare9(30, 4);
  403baa:	f3 0f 10 05 fe 5b 00 	movss  0x5bfe(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403bb1:	00 
  403bb2:	be 04 00 00 00       	mov    $0x4,%esi
  403bb7:	48 8d bd 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rdi
  403bbe:	e8 fd e5 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare9.setFillColor(RED);
  403bc3:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403bc9:	31 c9                	xor    %ecx,%ecx
  403bcb:	31 d2                	xor    %edx,%edx
  403bcd:	be fe 00 00 00       	mov    $0xfe,%esi
  403bd2:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403bd9:	e8 22 e5 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403bde:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403be5:	48 8d bd 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rdi
  403bec:	e8 bf e8 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare9.setPosition(180.f, 190.f);
  403bf1:	f3 0f 10 0d d7 5b 00 	movss  0x5bd7(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403bf8:	00 
  403bf9:	f3 0f 10 05 bf 5b 00 	movss  0x5bbf(%rip),%xmm0        # 4097c0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  403c00:	00 
  403c01:	48 8d bd 38 e2 ff ff 	lea    -0x1dc8(%rbp),%rdi
  403c08:	e8 23 e5 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare10(30, 4);
  403c0d:	f3 0f 10 05 9b 5b 00 	movss  0x5b9b(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403c14:	00 
  403c15:	be 04 00 00 00       	mov    $0x4,%esi
  403c1a:	48 8d bd 90 e3 ff ff 	lea    -0x1c70(%rbp),%rdi
  403c21:	e8 9a e5 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare10.setFillColor(GREEN);
  403c26:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403c2c:	b9 99 00 00 00       	mov    $0x99,%ecx
  403c31:	ba de 00 00 00       	mov    $0xde,%edx
  403c36:	be 6c 00 00 00       	mov    $0x6c,%esi
  403c3b:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403c42:	e8 b9 e4 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403c47:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403c4e:	48 8d bd 90 e3 ff ff 	lea    -0x1c70(%rbp),%rdi
  403c55:	e8 56 e8 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare10.setPosition(260.f, 190.f);
  403c5a:	f3 0f 10 0d 6e 5b 00 	movss  0x5b6e(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403c61:	00 
  403c62:	f3 0f 10 05 5a 5b 00 	movss  0x5b5a(%rip),%xmm0        # 4097c4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  403c69:	00 
  403c6a:	48 8d bd 98 e3 ff ff 	lea    -0x1c68(%rbp),%rdi
  403c71:	e8 ba e4 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare10(30, 4);
  403c76:	f3 0f 10 05 32 5b 00 	movss  0x5b32(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403c7d:	00 
  403c7e:	be 04 00 00 00       	mov    $0x4,%esi
  403c83:	48 8d bd f0 e4 ff ff 	lea    -0x1b10(%rbp),%rdi
  403c8a:	e8 31 e5 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare10.setFillColor(RED);
  403c8f:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403c95:	31 c9                	xor    %ecx,%ecx
  403c97:	31 d2                	xor    %edx,%edx
  403c99:	be fe 00 00 00       	mov    $0xfe,%esi
  403c9e:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403ca5:	e8 56 e4 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403caa:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403cb1:	48 8d bd f0 e4 ff ff 	lea    -0x1b10(%rbp),%rdi
  403cb8:	e8 f3 e7 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare10.setPosition(260.f, 190.f);
  403cbd:	f3 0f 10 0d 0b 5b 00 	movss  0x5b0b(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403cc4:	00 
  403cc5:	f3 0f 10 05 f7 5a 00 	movss  0x5af7(%rip),%xmm0        # 4097c4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  403ccc:	00 
  403ccd:	48 8d bd f8 e4 ff ff 	lea    -0x1b08(%rbp),%rdi
  403cd4:	e8 57 e4 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare11(30, 4);
  403cd9:	f3 0f 10 05 cf 5a 00 	movss  0x5acf(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403ce0:	00 
  403ce1:	be 04 00 00 00       	mov    $0x4,%esi
  403ce6:	48 8d bd 50 e6 ff ff 	lea    -0x19b0(%rbp),%rdi
  403ced:	e8 ce e4 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare11.setFillColor(GREEN);
  403cf2:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403cf8:	b9 99 00 00 00       	mov    $0x99,%ecx
  403cfd:	ba de 00 00 00       	mov    $0xde,%edx
  403d02:	be 6c 00 00 00       	mov    $0x6c,%esi
  403d07:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403d0e:	e8 ed e3 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403d13:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403d1a:	48 8d bd 50 e6 ff ff 	lea    -0x19b0(%rbp),%rdi
  403d21:	e8 8a e7 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare11.setPosition(340.f, 190.f);
  403d26:	f3 0f 10 0d a2 5a 00 	movss  0x5aa2(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403d2d:	00 
  403d2e:	f3 0f 10 05 92 5a 00 	movss  0x5a92(%rip),%xmm0        # 4097c8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  403d35:	00 
  403d36:	48 8d bd 58 e6 ff ff 	lea    -0x19a8(%rbp),%rdi
  403d3d:	e8 ee e3 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare11(30, 4);
  403d42:	f3 0f 10 05 66 5a 00 	movss  0x5a66(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403d49:	00 
  403d4a:	be 04 00 00 00       	mov    $0x4,%esi
  403d4f:	48 8d bd b0 e7 ff ff 	lea    -0x1850(%rbp),%rdi
  403d56:	e8 65 e4 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare11.setFillColor(RED);
  403d5b:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403d61:	31 c9                	xor    %ecx,%ecx
  403d63:	31 d2                	xor    %edx,%edx
  403d65:	be fe 00 00 00       	mov    $0xfe,%esi
  403d6a:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403d71:	e8 8a e3 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403d76:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403d7d:	48 8d bd b0 e7 ff ff 	lea    -0x1850(%rbp),%rdi
  403d84:	e8 27 e7 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare11.setPosition(340.f, 190.f);
  403d89:	f3 0f 10 0d 3f 5a 00 	movss  0x5a3f(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403d90:	00 
  403d91:	f3 0f 10 05 2f 5a 00 	movss  0x5a2f(%rip),%xmm0        # 4097c8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  403d98:	00 
  403d99:	48 8d bd b8 e7 ff ff 	lea    -0x1848(%rbp),%rdi
  403da0:	e8 8b e3 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare12(30, 4);
  403da5:	f3 0f 10 05 03 5a 00 	movss  0x5a03(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403dac:	00 
  403dad:	be 04 00 00 00       	mov    $0x4,%esi
  403db2:	48 8d bd 10 e9 ff ff 	lea    -0x16f0(%rbp),%rdi
  403db9:	e8 02 e4 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare12.setFillColor(GREEN);
  403dbe:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403dc4:	b9 99 00 00 00       	mov    $0x99,%ecx
  403dc9:	ba de 00 00 00       	mov    $0xde,%edx
  403dce:	be 6c 00 00 00       	mov    $0x6c,%esi
  403dd3:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403dda:	e8 21 e3 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403ddf:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403de6:	48 8d bd 10 e9 ff ff 	lea    -0x16f0(%rbp),%rdi
  403ded:	e8 be e6 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare12.setPosition(420.f, 190.f);
  403df2:	f3 0f 10 0d d6 59 00 	movss  0x59d6(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403df9:	00 
  403dfa:	f3 0f 10 05 ca 59 00 	movss  0x59ca(%rip),%xmm0        # 4097cc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  403e01:	00 
  403e02:	48 8d bd 18 e9 ff ff 	lea    -0x16e8(%rbp),%rdi
  403e09:	e8 22 e3 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare12(30, 4);
  403e0e:	f3 0f 10 05 9a 59 00 	movss  0x599a(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403e15:	00 
  403e16:	be 04 00 00 00       	mov    $0x4,%esi
  403e1b:	48 8d bd 70 ea ff ff 	lea    -0x1590(%rbp),%rdi
  403e22:	e8 99 e3 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare12.setFillColor(RED);
  403e27:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403e2d:	31 c9                	xor    %ecx,%ecx
  403e2f:	31 d2                	xor    %edx,%edx
  403e31:	be fe 00 00 00       	mov    $0xfe,%esi
  403e36:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403e3d:	e8 be e2 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403e42:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403e49:	48 8d bd 70 ea ff ff 	lea    -0x1590(%rbp),%rdi
  403e50:	e8 5b e6 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare12.setPosition(420.f, 190.f);
  403e55:	f3 0f 10 0d 73 59 00 	movss  0x5973(%rip),%xmm1        # 4097d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403e5c:	00 
  403e5d:	f3 0f 10 05 67 59 00 	movss  0x5967(%rip),%xmm0        # 4097cc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  403e64:	00 
  403e65:	48 8d bd 78 ea ff ff 	lea    -0x1588(%rbp),%rdi
  403e6c:	e8 bf e2 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare13(30, 4);
  403e71:	f3 0f 10 05 37 59 00 	movss  0x5937(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403e78:	00 
  403e79:	be 04 00 00 00       	mov    $0x4,%esi
  403e7e:	48 8d bd d0 eb ff ff 	lea    -0x1430(%rbp),%rdi
  403e85:	e8 36 e3 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare13.setFillColor(GREEN);
  403e8a:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403e90:	b9 99 00 00 00       	mov    $0x99,%ecx
  403e95:	ba de 00 00 00       	mov    $0xde,%edx
  403e9a:	be 6c 00 00 00       	mov    $0x6c,%esi
  403e9f:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403ea6:	e8 55 e2 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403eab:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403eb2:	48 8d bd d0 eb ff ff 	lea    -0x1430(%rbp),%rdi
  403eb9:	e8 f2 e5 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare13.setPosition(20.f, 330.f);
  403ebe:	f3 0f 10 0d 0e 59 00 	movss  0x590e(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  403ec5:	00 
  403ec6:	f3 0f 10 05 ea 58 00 	movss  0x58ea(%rip),%xmm0        # 4097b8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  403ecd:	00 
  403ece:	48 8d bd d8 eb ff ff 	lea    -0x1428(%rbp),%rdi
  403ed5:	e8 56 e2 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare13(30, 4);
  403eda:	f3 0f 10 05 ce 58 00 	movss  0x58ce(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403ee1:	00 
  403ee2:	be 04 00 00 00       	mov    $0x4,%esi
  403ee7:	48 8d bd 30 ed ff ff 	lea    -0x12d0(%rbp),%rdi
  403eee:	e8 cd e2 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare13.setFillColor(RED);
  403ef3:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403ef9:	31 c9                	xor    %ecx,%ecx
  403efb:	31 d2                	xor    %edx,%edx
  403efd:	be fe 00 00 00       	mov    $0xfe,%esi
  403f02:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403f09:	e8 f2 e1 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403f0e:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403f15:	48 8d bd 30 ed ff ff 	lea    -0x12d0(%rbp),%rdi
  403f1c:	e8 8f e5 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare13.setPosition(20.f, 330.f);
  403f21:	f3 0f 10 0d ab 58 00 	movss  0x58ab(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  403f28:	00 
  403f29:	f3 0f 10 05 87 58 00 	movss  0x5887(%rip),%xmm0        # 4097b8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  403f30:	00 
  403f31:	48 8d bd 38 ed ff ff 	lea    -0x12c8(%rbp),%rdi
  403f38:	e8 f3 e1 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare14(30, 4);
  403f3d:	f3 0f 10 05 6b 58 00 	movss  0x586b(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403f44:	00 
  403f45:	be 04 00 00 00       	mov    $0x4,%esi
  403f4a:	48 8d bd 90 ee ff ff 	lea    -0x1170(%rbp),%rdi
  403f51:	e8 6a e2 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare14.setFillColor(GREEN);
  403f56:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403f5c:	b9 99 00 00 00       	mov    $0x99,%ecx
  403f61:	ba de 00 00 00       	mov    $0xde,%edx
  403f66:	be 6c 00 00 00       	mov    $0x6c,%esi
  403f6b:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403f72:	e8 89 e1 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403f77:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403f7e:	48 8d bd 90 ee ff ff 	lea    -0x1170(%rbp),%rdi
  403f85:	e8 26 e5 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare14.setPosition(100.f, 330.f);
  403f8a:	f3 0f 10 0d 42 58 00 	movss  0x5842(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  403f91:	00 
  403f92:	f3 0f 10 05 22 58 00 	movss  0x5822(%rip),%xmm0        # 4097bc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403f99:	00 
  403f9a:	48 8d bd 98 ee ff ff 	lea    -0x1168(%rbp),%rdi
  403fa1:	e8 8a e1 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare14(30, 4);
  403fa6:	f3 0f 10 05 02 58 00 	movss  0x5802(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403fad:	00 
  403fae:	be 04 00 00 00       	mov    $0x4,%esi
  403fb3:	48 8d bd f0 ef ff ff 	lea    -0x1010(%rbp),%rdi
  403fba:	e8 01 e2 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare14.setFillColor(RED);
  403fbf:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403fc5:	31 c9                	xor    %ecx,%ecx
  403fc7:	31 d2                	xor    %edx,%edx
  403fc9:	be fe 00 00 00       	mov    $0xfe,%esi
  403fce:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  403fd5:	e8 26 e1 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403fda:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  403fe1:	48 8d bd f0 ef ff ff 	lea    -0x1010(%rbp),%rdi
  403fe8:	e8 c3 e4 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare14.setPosition(100.f, 330.f);
  403fed:	f3 0f 10 0d df 57 00 	movss  0x57df(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  403ff4:	00 
  403ff5:	f3 0f 10 05 bf 57 00 	movss  0x57bf(%rip),%xmm0        # 4097bc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403ffc:	00 
  403ffd:	48 8d bd f8 ef ff ff 	lea    -0x1008(%rbp),%rdi
  404004:	e8 27 e1 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare15(30, 4);
  404009:	f3 0f 10 05 9f 57 00 	movss  0x579f(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404010:	00 
  404011:	be 04 00 00 00       	mov    $0x4,%esi
  404016:	48 8d bd 50 f1 ff ff 	lea    -0xeb0(%rbp),%rdi
  40401d:	e8 9e e1 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare15.setFillColor(GREEN);
  404022:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  404028:	b9 99 00 00 00       	mov    $0x99,%ecx
  40402d:	ba de 00 00 00       	mov    $0xde,%edx
  404032:	be 6c 00 00 00       	mov    $0x6c,%esi
  404037:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  40403e:	e8 bd e0 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  404043:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40404a:	48 8d bd 50 f1 ff ff 	lea    -0xeb0(%rbp),%rdi
  404051:	e8 5a e4 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare15.setPosition(180.f, 330.f);
  404056:	f3 0f 10 0d 76 57 00 	movss  0x5776(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  40405d:	00 
  40405e:	f3 0f 10 05 5a 57 00 	movss  0x575a(%rip),%xmm0        # 4097c0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  404065:	00 
  404066:	48 8d bd 58 f1 ff ff 	lea    -0xea8(%rbp),%rdi
  40406d:	e8 be e0 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare15(30, 4);
  404072:	f3 0f 10 05 36 57 00 	movss  0x5736(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404079:	00 
  40407a:	be 04 00 00 00       	mov    $0x4,%esi
  40407f:	48 8d bd b0 f2 ff ff 	lea    -0xd50(%rbp),%rdi
  404086:	e8 35 e1 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare15.setFillColor(RED);
  40408b:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  404091:	31 c9                	xor    %ecx,%ecx
  404093:	31 d2                	xor    %edx,%edx
  404095:	be fe 00 00 00       	mov    $0xfe,%esi
  40409a:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4040a1:	e8 5a e0 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4040a6:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4040ad:	48 8d bd b0 f2 ff ff 	lea    -0xd50(%rbp),%rdi
  4040b4:	e8 f7 e3 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare15.setPosition(180.f, 330.f);
  4040b9:	f3 0f 10 0d 13 57 00 	movss  0x5713(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  4040c0:	00 
  4040c1:	f3 0f 10 05 f7 56 00 	movss  0x56f7(%rip),%xmm0        # 4097c0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  4040c8:	00 
  4040c9:	48 8d bd b8 f2 ff ff 	lea    -0xd48(%rbp),%rdi
  4040d0:	e8 5b e0 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare16(30, 4);
  4040d5:	f3 0f 10 05 d3 56 00 	movss  0x56d3(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4040dc:	00 
  4040dd:	be 04 00 00 00       	mov    $0x4,%esi
  4040e2:	48 8d bd 10 f4 ff ff 	lea    -0xbf0(%rbp),%rdi
  4040e9:	e8 d2 e0 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare16.setFillColor(GREEN);
  4040ee:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4040f4:	b9 99 00 00 00       	mov    $0x99,%ecx
  4040f9:	ba de 00 00 00       	mov    $0xde,%edx
  4040fe:	be 6c 00 00 00       	mov    $0x6c,%esi
  404103:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  40410a:	e8 f1 df ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40410f:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  404116:	48 8d bd 10 f4 ff ff 	lea    -0xbf0(%rbp),%rdi
  40411d:	e8 8e e3 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare16.setPosition(260.f, 330.f);
  404122:	f3 0f 10 0d aa 56 00 	movss  0x56aa(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  404129:	00 
  40412a:	f3 0f 10 05 92 56 00 	movss  0x5692(%rip),%xmm0        # 4097c4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  404131:	00 
  404132:	48 8d bd 18 f4 ff ff 	lea    -0xbe8(%rbp),%rdi
  404139:	e8 f2 df ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare16(30, 4);
  40413e:	f3 0f 10 05 6a 56 00 	movss  0x566a(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404145:	00 
  404146:	be 04 00 00 00       	mov    $0x4,%esi
  40414b:	48 8d bd 70 f5 ff ff 	lea    -0xa90(%rbp),%rdi
  404152:	e8 69 e0 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare16.setFillColor(RED);
  404157:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  40415d:	31 c9                	xor    %ecx,%ecx
  40415f:	31 d2                	xor    %edx,%edx
  404161:	be fe 00 00 00       	mov    $0xfe,%esi
  404166:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  40416d:	e8 8e df ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  404172:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  404179:	48 8d bd 70 f5 ff ff 	lea    -0xa90(%rbp),%rdi
  404180:	e8 2b e3 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare16.setPosition(260.f, 330.f);
  404185:	f3 0f 10 0d 47 56 00 	movss  0x5647(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  40418c:	00 
  40418d:	f3 0f 10 05 2f 56 00 	movss  0x562f(%rip),%xmm0        # 4097c4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  404194:	00 
  404195:	48 8d bd 78 f5 ff ff 	lea    -0xa88(%rbp),%rdi
  40419c:	e8 8f df ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare17(30, 4);
  4041a1:	f3 0f 10 05 07 56 00 	movss  0x5607(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4041a8:	00 
  4041a9:	be 04 00 00 00       	mov    $0x4,%esi
  4041ae:	48 8d bd d0 f6 ff ff 	lea    -0x930(%rbp),%rdi
  4041b5:	e8 06 e0 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare17.setFillColor(GREEN);
  4041ba:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4041c0:	b9 99 00 00 00       	mov    $0x99,%ecx
  4041c5:	ba de 00 00 00       	mov    $0xde,%edx
  4041ca:	be 6c 00 00 00       	mov    $0x6c,%esi
  4041cf:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4041d6:	e8 25 df ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4041db:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4041e2:	48 8d bd d0 f6 ff ff 	lea    -0x930(%rbp),%rdi
  4041e9:	e8 c2 e2 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare17.setPosition(340.f, 330.f);
  4041ee:	f3 0f 10 0d de 55 00 	movss  0x55de(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  4041f5:	00 
  4041f6:	f3 0f 10 05 ca 55 00 	movss  0x55ca(%rip),%xmm0        # 4097c8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  4041fd:	00 
  4041fe:	48 8d bd d8 f6 ff ff 	lea    -0x928(%rbp),%rdi
  404205:	e8 26 df ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare17(30, 4);
  40420a:	f3 0f 10 05 9e 55 00 	movss  0x559e(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404211:	00 
  404212:	be 04 00 00 00       	mov    $0x4,%esi
  404217:	48 8d bd 30 f8 ff ff 	lea    -0x7d0(%rbp),%rdi
  40421e:	e8 9d df ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare17.setFillColor(RED);
  404223:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  404229:	31 c9                	xor    %ecx,%ecx
  40422b:	31 d2                	xor    %edx,%edx
  40422d:	be fe 00 00 00       	mov    $0xfe,%esi
  404232:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  404239:	e8 c2 de ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40423e:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  404245:	48 8d bd 30 f8 ff ff 	lea    -0x7d0(%rbp),%rdi
  40424c:	e8 5f e2 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare17.setPosition(340.f, 330.f);
  404251:	f3 0f 10 0d 7b 55 00 	movss  0x557b(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  404258:	00 
  404259:	f3 0f 10 05 67 55 00 	movss  0x5567(%rip),%xmm0        # 4097c8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  404260:	00 
  404261:	48 8d bd 38 f8 ff ff 	lea    -0x7c8(%rbp),%rdi
  404268:	e8 c3 de ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare18(30, 4);
  40426d:	f3 0f 10 05 3b 55 00 	movss  0x553b(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404274:	00 
  404275:	be 04 00 00 00       	mov    $0x4,%esi
  40427a:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  404281:	e8 3a df ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare18.setFillColor(GREEN);
  404286:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  40428c:	b9 99 00 00 00       	mov    $0x99,%ecx
  404291:	ba de 00 00 00       	mov    $0xde,%edx
  404296:	be 6c 00 00 00       	mov    $0x6c,%esi
  40429b:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4042a2:	e8 59 de ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4042a7:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4042ae:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  4042b5:	e8 f6 e1 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare18.setPosition(420.f, 330.f);
  4042ba:	f3 0f 10 0d 12 55 00 	movss  0x5512(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  4042c1:	00 
  4042c2:	f3 0f 10 05 02 55 00 	movss  0x5502(%rip),%xmm0        # 4097cc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  4042c9:	00 
  4042ca:	48 8d bd 98 f9 ff ff 	lea    -0x668(%rbp),%rdi
  4042d1:	e8 5a de ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare18(30, 4);
  4042d6:	f3 0f 10 05 d2 54 00 	movss  0x54d2(%rip),%xmm0        # 4097b0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4042dd:	00 
  4042de:	be 04 00 00 00       	mov    $0x4,%esi
  4042e3:	48 8d bd f0 fa ff ff 	lea    -0x510(%rbp),%rdi
  4042ea:	e8 d1 de ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare18.setFillColor(RED);
  4042ef:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4042f5:	31 c9                	xor    %ecx,%ecx
  4042f7:	31 d2                	xor    %edx,%edx
  4042f9:	be fe 00 00 00       	mov    $0xfe,%esi
  4042fe:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  404305:	e8 f6 dd ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40430a:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  404311:	48 8d bd f0 fa ff ff 	lea    -0x510(%rbp),%rdi
  404318:	e8 93 e1 ff ff       	call   4024b0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare18.setPosition(420.f, 330.f);
  40431d:	f3 0f 10 0d af 54 00 	movss  0x54af(%rip),%xmm1        # 4097d4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  404324:	00 
  404325:	f3 0f 10 05 9f 54 00 	movss  0x549f(%rip),%xmm0        # 4097cc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  40432c:	00 
  40432d:	48 8d bd f8 fa ff ff 	lea    -0x508(%rbp),%rdi
  404334:	e8 f7 dd ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
	window.setFramerateLimit(12);
  404339:	be 0c 00 00 00       	mov    $0xc,%esi
  40433e:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  404345:	e8 86 df ff ff       	call   4022d0 <_ZN2sf6Window17setFramerateLimitEj@plt>
	sf::Font font;
  40434a:	48 8d bd d0 c7 ff ff 	lea    -0x3830(%rbp),%rdi
  404351:	e8 5a dd ff ff       	call   4020b0 <_ZN2sf4FontC1Ev@plt>
	font.loadFromFile("/home/de2i-150/Desktop/Projeto-IHS/IHS-Project/ihs-project-layout/app/fonts/cour.ttf");
  404356:	48 8d 95 00 ca ff ff 	lea    -0x3600(%rbp),%rdx
  40435d:	be b8 91 40 00       	mov    $0x4091b8,%esi
  404362:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  404369:	e8 b2 47 00 00       	call   408b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
  40436e:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  404375:	48 8d bd d0 c7 ff ff 	lea    -0x3830(%rbp),%rdi
  40437c:	e8 af de ff ff       	call   402230 <_ZN2sf4Font12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
      { return _M_dataplus._M_p; }
  404381:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
	if (!_M_is_local())
  404388:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  40438f:	48 39 c7             	cmp    %rax,%rdi
  404392:	74 10                	je     4043a4 <main+0xfc4>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404394:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  40439b:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  40439f:	e8 9c de ff ff       	call   402240 <_ZdlPvm@plt>
	sf::Text text("", font, 20);
  4043a4:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  4043ab:	e8 30 e1 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4043b0:	48 8d 95 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdx
  4043b7:	be c4 90 40 00       	mov    $0x4090c4,%esi
  4043bc:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  4043c3:	e8 28 dd ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4043c8:	b9 14 00 00 00       	mov    $0x14,%ecx
  4043cd:	48 8d 95 d0 c7 ff ff 	lea    -0x3830(%rbp),%rdx
  4043d4:	48 8d b5 00 ca ff ff 	lea    -0x3600(%rbp),%rsi
  4043db:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4043e2:	e8 09 de ff ff       	call   4021f0 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@plt>
      { return _M_dataplus._M_p; }
  4043e7:	48 8b bd 00 ca ff ff 	mov    -0x3600(%rbp),%rdi
	if (!_M_is_local())
  4043ee:	4c 8d a5 10 ca ff ff 	lea    -0x35f0(%rbp),%r12
  4043f5:	4c 39 e7             	cmp    %r12,%rdi
  4043f8:	74 14                	je     40440e <main+0x102e>
  4043fa:	48 8b 85 10 ca ff ff 	mov    -0x35f0(%rbp),%rax
  404401:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404408:	00 
  404409:	e8 32 de ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  40440e:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  404415:	e8 16 df ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
	text.setFillColor(sf::Color(39, 225, 122));
  40441a:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  404420:	b9 7a 00 00 00       	mov    $0x7a,%ecx
  404425:	ba e1 00 00 00       	mov    $0xe1,%edx
  40442a:	be 27 00 00 00       	mov    $0x27,%esi
  40442f:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  404436:	e8 c5 dc ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40443b:	48 8d b5 00 ca ff ff 	lea    -0x3600(%rbp),%rsi
  404442:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  404449:	e8 72 e0 ff ff       	call   4024c0 <_ZN2sf4Text12setFillColorERKNS_5ColorE@plt>
	sf::Music typing;
  40444e:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  404455:	e8 16 dc ff ff       	call   402070 <_ZN2sf5MusicC1Ev@plt>
	if (!typing.openFromFile("/home/de2i-150/Desktop/Projeto-IHS/IHS-Project/ihs-project-layout/app/assets/sounds/typing.wav"))
  40445a:	48 8d 95 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdx
  404461:	be 10 92 40 00       	mov    $0x409210,%esi
  404466:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  40446d:	e8 ae 46 00 00       	call   408b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
  404472:	48 8d b5 00 ca ff ff 	lea    -0x3600(%rbp),%rsi
  404479:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  404480:	e8 fb db ff ff       	call   402080 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
      { return _M_dataplus._M_p; }
  404485:	48 8b bd 00 ca ff ff 	mov    -0x3600(%rbp),%rdi
  40448c:	89 c3                	mov    %eax,%ebx
	if (!_M_is_local())
  40448e:	4c 39 e7             	cmp    %r12,%rdi
  404491:	74 10                	je     4044a3 <main+0x10c3>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404493:	48 8b 85 10 ca ff ff 	mov    -0x35f0(%rbp),%rax
  40449a:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  40449e:	e8 9d dd ff ff       	call   402240 <_ZdlPvm@plt>
  4044a3:	84 db                	test   %bl,%bl
  4044a5:	0f 84 00 28 00 00    	je     406cab <main+0x38cb>
	sf::Music clock_time;
  4044ab:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  4044b2:	e8 b9 db ff ff       	call   402070 <_ZN2sf5MusicC1Ev@plt>
	if (!clock_time.openFromFile("/home/de2i-150/Desktop/Projeto-IHS/IHS-Project/ihs-project-layout/app/assets/sounds/clock.ogg"))
  4044b7:	48 8d 95 80 c7 ff ff 	lea    -0x3880(%rbp),%rdx
  4044be:	be 90 92 40 00       	mov    $0x409290,%esi
  4044c3:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  4044ca:	e8 51 46 00 00       	call   408b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
  4044cf:	48 8d b5 00 ca ff ff 	lea    -0x3600(%rbp),%rsi
  4044d6:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  4044dd:	e8 9e db ff ff       	call   402080 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
      { return _M_dataplus._M_p; }
  4044e2:	48 8b bd 00 ca ff ff 	mov    -0x3600(%rbp),%rdi
  4044e9:	89 c3                	mov    %eax,%ebx
	if (!_M_is_local())
  4044eb:	4c 39 e7             	cmp    %r12,%rdi
  4044ee:	74 10                	je     404500 <main+0x1120>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4044f0:	48 8b 85 10 ca ff ff 	mov    -0x35f0(%rbp),%rax
  4044f7:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4044fb:	e8 40 dd ff ff       	call   402240 <_ZdlPvm@plt>
  404500:	84 db                	test   %bl,%bl
  404502:	0f 84 80 27 00 00    	je     406c88 <main+0x38a8>
	sf::Music boom;
  404508:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  40450f:	e8 5c db ff ff       	call   402070 <_ZN2sf5MusicC1Ev@plt>
	if (!boom.openFromFile("/home/de2i-150/Desktop/Projeto-IHS/IHS-Project/ihs-project-layout/app/assets/sounds/boom.wav"))
  404514:	48 8d 95 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdx
  40451b:	be f0 92 40 00       	mov    $0x4092f0,%esi
  404520:	48 8d bd 80 c7 ff ff 	lea    -0x3880(%rbp),%rdi
  404527:	e8 f4 45 00 00       	call   408b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
  40452c:	48 8d b5 80 c7 ff ff 	lea    -0x3880(%rbp),%rsi
  404533:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  40453a:	e8 41 db ff ff       	call   402080 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
      { return _M_dataplus._M_p; }
  40453f:	48 8b bd 80 c7 ff ff 	mov    -0x3880(%rbp),%rdi
  404546:	89 c3                	mov    %eax,%ebx
	if (!_M_is_local())
  404548:	48 8d 85 90 c7 ff ff 	lea    -0x3870(%rbp),%rax
  40454f:	48 39 c7             	cmp    %rax,%rdi
  404552:	74 10                	je     404564 <main+0x1184>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404554:	48 8b 85 90 c7 ff ff 	mov    -0x3870(%rbp),%rax
  40455b:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40455f:	e8 dc dc ff ff       	call   402240 <_ZdlPvm@plt>
  404564:	84 db                	test   %bl,%bl
  404566:	0f 84 93 26 00 00    	je     406bff <main+0x381f>
	sf::String typedtext = "[root@bois ~] $ Ola, vejo que voce encontrou minha caixa...\n\n[root@bois ~] $ Espero (ou nao) que voce consiga completar\nos desafios que preparei para hoje.\n\n[root@bois ~] $ Mas cuidado com o tempo e tente nao perder\na cabeca!!\n\n[root@bois ~] $ ASS ?";
  40456c:	48 8d bd 80 c7 ff ff 	lea    -0x3880(%rbp),%rdi
  404573:	e8 68 df ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  404578:	48 8d 95 80 c7 ff ff 	lea    -0x3880(%rbp),%rdx
  40457f:	be 50 93 40 00       	mov    $0x409350,%esi
  404584:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  40458b:	e8 60 db ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404590:	48 8d bd 80 c7 ff ff 	lea    -0x3880(%rbp),%rdi
  404597:	e8 94 dd ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
	sf::String challenge1_string = "[root@bois ~] $ Voce deveria saber matematica";
  40459c:	48 8d bd 80 c7 ff ff 	lea    -0x3880(%rbp),%rdi
  4045a3:	e8 38 df ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4045a8:	48 8d 95 80 c7 ff ff 	lea    -0x3880(%rbp),%rdx
  4045af:	be 50 94 40 00       	mov    $0x409450,%esi
  4045b4:	48 8d bd c0 c6 ff ff 	lea    -0x3940(%rbp),%rdi
  4045bb:	e8 30 db ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4045c0:	48 8d bd 80 c7 ff ff 	lea    -0x3880(%rbp),%rdi
  4045c7:	e8 64 dd ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
	sf::Clock clock_text;
  4045cc:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  4045d3:	e8 28 dd ff ff       	call   402300 <_ZN2sf5ClockC1Ev@plt>
	sf::Time elapsedtime_text;
  4045d8:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  4045df:	e8 6c da ff ff       	call   402050 <_ZN2sf4TimeC1Ev@plt>
	sf::Clock temp_clock;
  4045e4:	48 8d bd 20 c6 ff ff 	lea    -0x39e0(%rbp),%rdi
  4045eb:	e8 10 dd ff ff       	call   402300 <_ZN2sf5ClockC1Ev@plt>
	sf::Time temp_time;
  4045f0:	48 8d bd 28 c6 ff ff 	lea    -0x39d8(%rbp),%rdi
  4045f7:	e8 54 da ff ff       	call   402050 <_ZN2sf4TimeC1Ev@plt>
	sf::Clock clock_bomb;
  4045fc:	48 8d bd 30 c6 ff ff 	lea    -0x39d0(%rbp),%rdi
  404603:	e8 f8 dc ff ff       	call   402300 <_ZN2sf5ClockC1Ev@plt>
	sf::Time time_bomb;
  404608:	48 8d bd 38 c6 ff ff 	lea    -0x39c8(%rbp),%rdi
  40460f:	e8 3c da ff ff       	call   402050 <_ZN2sf4TimeC1Ev@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  404614:	48 8d 85 f0 c6 ff ff 	lea    -0x3910(%rbp),%rax
	int currMatrix[18] = {0};
  40461b:	b9 12 00 00 00       	mov    $0x12,%ecx
  404620:	48 8d bd 80 c7 ff ff 	lea    -0x3880(%rbp),%rdi
      { _M_string_length = __length; }
  404627:	48 c7 85 e8 c6 ff ff 	movq   $0x0,-0x3918(%rbp)
  40462e:	00 00 00 00 
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  404632:	48 89 85 e0 c6 ff ff 	mov    %rax,-0x3920(%rbp)
  404639:	48 8d 85 10 c7 ff ff 	lea    -0x38f0(%rbp),%rax
	bool flag_clock = false;
  404640:	45 31 ed             	xor    %r13d,%r13d
  404643:	48 89 85 00 c7 ff ff 	mov    %rax,-0x3900(%rbp)
	int currMatrix[18] = {0};
  40464a:	31 c0                	xor    %eax,%eax
  40464c:	f3 ab                	rep stos %eax,%es:(%rdi)
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { __c1 = __c2; }
  40464e:	c6 85 f0 c6 ff ff 00 	movb   $0x0,-0x3910(%rbp)
      { _M_string_length = __length; }
  404655:	48 c7 85 08 c7 ff ff 	movq   $0x0,-0x38f8(%rbp)
  40465c:	00 00 00 00 
  404660:	c6 85 10 c7 ff ff 00 	movb   $0x0,-0x38f0(%rbp)
	int flag_correct = 1;
  404667:	c7 85 88 c5 ff ff 01 	movl   $0x1,-0x3a78(%rbp)
  40466e:	00 00 00 
	int flag = 1;
  404671:	c7 85 9c c5 ff ff 01 	movl   $0x1,-0x3a64(%rbp)
  404678:	00 00 00 
	int old_button = 0xF;
  40467b:	c7 85 98 c5 ff ff 0f 	movl   $0xf,-0x3a68(%rbp)
  404682:	00 00 00 
	unsigned int redLeds = 0x00000;
  404685:	c7 85 a0 c5 ff ff 00 	movl   $0x0,-0x3a60(%rbp)
  40468c:	00 00 00 
	unsigned int switches = 0x00000;
  40468f:	c7 85 a4 c5 ff ff 00 	movl   $0x0,-0x3a5c(%rbp)
  404696:	00 00 00 
	int screen = 0;
  404699:	c7 85 ac c5 ff ff 00 	movl   $0x0,-0x3a54(%rbp)
  4046a0:	00 00 00 
  4046a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	while (window.isOpen())
  4046a8:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  4046af:	e8 ac db ff ff       	call   402260 <_ZNK2sf6Window6isOpenEv@plt>
  4046b4:	84 c0                	test   %al,%al
  4046b6:	75 16                	jne    4046ce <main+0x12ee>
  4046b8:	e9 71 20 00 00       	jmp    40672e <main+0x334e>
  4046bd:	0f 1f 00             	nopl   (%rax)
			if (event.type == sf::Event::Closed)
  4046c0:	8b bd 60 c6 ff ff    	mov    -0x39a0(%rbp),%edi
  4046c6:	85 ff                	test   %edi,%edi
  4046c8:	0f 84 62 07 00 00    	je     404e30 <main+0x1a50>
		while (window.pollEvent(event))
  4046ce:	48 8d b5 60 c6 ff ff 	lea    -0x39a0(%rbp),%rsi
  4046d5:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  4046dc:	e8 ff da ff ff       	call   4021e0 <_ZN2sf6Window9pollEventERNS_5EventE@plt>
  4046e1:	84 c0                	test   %al,%al
  4046e3:	75 db                	jne    4046c0 <main+0x12e0>
		window.clear(sf::Color(48, 49, 52));
  4046e5:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4046eb:	b9 34 00 00 00       	mov    $0x34,%ecx
  4046f0:	ba 31 00 00 00       	mov    $0x31,%edx
  4046f5:	be 30 00 00 00       	mov    $0x30,%esi
  4046fa:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  404701:	e8 fa d9 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  404706:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40470d:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404714:	e8 67 da ff ff       	call   402180 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@plt>
		if(screen == 0){
  404719:	8b b5 ac c5 ff ff    	mov    -0x3a54(%rbp),%esi
  40471f:	85 f6                	test   %esi,%esi
  404721:	0f 84 f9 04 00 00    	je     404c20 <main+0x1840>
		if (screen != 1 && screen != 6)
  404727:	8b 85 ac c5 ff ff    	mov    -0x3a54(%rbp),%eax
  40472d:	83 f8 01             	cmp    $0x1,%eax
  404730:	74 64                	je     404796 <main+0x13b6>
  404732:	83 f8 06             	cmp    $0x6,%eax
  404735:	74 5f                	je     404796 <main+0x13b6>
			time_bomb = clock_bomb.getElapsedTime();
  404737:	48 8d bd 30 c6 ff ff 	lea    -0x39d0(%rbp),%rdi
  40473e:	e8 7d dc ff ff       	call   4023c0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>
			seconds = 300 - time_bomb.asSeconds();
  404743:	48 8d bd 38 c6 ff ff 	lea    -0x39c8(%rbp),%rdi
			time_bomb = clock_bomb.getElapsedTime();
  40474a:	48 89 85 38 c6 ff ff 	mov    %rax,-0x39c8(%rbp)
			seconds = 300 - time_bomb.asSeconds();
  404751:	e8 fa dc ff ff       	call   402450 <_ZNK2sf4Time9asSecondsEv@plt>
  404756:	0f 28 c8             	movaps %xmm0,%xmm1
  404759:	f3 0f 10 05 77 50 00 	movss  0x5077(%rip),%xmm0        # 4097d8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x158>
  404760:	00 
			int_to_string(fd, seconds, min_string, sec_string);		
  404761:	8b bd a8 c5 ff ff    	mov    -0x3a58(%rbp),%edi
  404767:	48 8d 8d e0 c6 ff ff 	lea    -0x3920(%rbp),%rcx
  40476e:	48 8d 95 00 c7 ff ff 	lea    -0x3900(%rbp),%rdx
			seconds = 300 - time_bomb.asSeconds();
  404775:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  404779:	f3 48 0f 2c d8       	cvttss2si %xmm0,%rbx
  40477e:	89 de                	mov    %ebx,%esi
			int_to_string(fd, seconds, min_string, sec_string);		
  404780:	e8 9b 3a 00 00       	call   408220 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_>
			if (seconds <= 0)
  404785:	85 db                	test   %ebx,%ebx
  404787:	0f 84 b3 00 00 00    	je     404840 <main+0x1460>
			if (seconds > 0 && seconds == 8)
  40478d:	83 fb 08             	cmp    $0x8,%ebx
  404790:	0f 84 65 2a 00 00    	je     4071fb <main+0x3e1b>
		switch (screen) {
  404796:	8b 85 ac c5 ff ff    	mov    -0x3a54(%rbp),%eax
  40479c:	ff 24 c5 28 91 40 00 	jmp    *0x409128(,%rax,8)
				elapsedtime_text += clock_text.restart();
  4047a3:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  4047aa:	e8 41 dc ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  4047af:	48 89 c6             	mov    %rax,%rsi
  4047b2:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  4047b9:	e8 22 dc ff ff       	call   4023e0 <_ZN2sfpLERNS_4TimeES0_@plt>
  4047be:	f3 0f 10 25 16 50 00 	movss  0x5016(%rip),%xmm4        # 4097dc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x15c>
  4047c5:	00 
  4047c6:	f3 0f 11 a5 c0 c5 ff 	movss  %xmm4,-0x3a40(%rbp)
  4047cd:	ff 
				while (elapsedtime_text >= sf::seconds(.1f))
  4047ce:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  4047d5:	ff 
  4047d6:	e8 75 d9 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  4047db:	48 8b bd 18 c6 ff ff 	mov    -0x39e8(%rbp),%rdi
  4047e2:	48 89 c6             	mov    %rax,%rsi
  4047e5:	e8 d6 da ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  4047ea:	89 c3                	mov    %eax,%ebx
  4047ec:	84 c0                	test   %al,%al
  4047ee:	0f 84 0c 06 00 00    	je     404e00 <main+0x1a20>
					elapsedtime_text -= sf::seconds(.1f);
  4047f4:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  4047fb:	ff 
  4047fc:	e8 4f d9 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404801:	48 89 c6             	mov    %rax,%rsi
  404804:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  40480b:	e8 10 dc ff ff       	call   402420 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404810:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  404817:	e8 64 db ff ff       	call   402380 <_ZNK2sf6String7getSizeEv@plt>
  40481c:	48 85 c0             	test   %rax,%rax
  40481f:	0f 85 cb 07 00 00    	jne    404ff0 <main+0x1c10>
						if (!flag_clock) { 
  404825:	45 84 ed             	test   %r13b,%r13b
  404828:	0f 84 ba 11 00 00    	je     4059e8 <main+0x2608>
				while (elapsedtime_text >= sf::seconds(.1f))
  40482e:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404835:	ff 
							screen = 6;
  404836:	41 89 dd             	mov    %ebx,%r13d
				while (elapsedtime_text >= sf::seconds(.1f))
  404839:	e8 12 d9 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  40483e:	eb 9b                	jmp    4047db <main+0x13fb>
				text.setString("");
  404840:	4c 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%r15
  404847:	4c 89 ff             	mov    %r15,%rdi
  40484a:	e8 91 dc ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  40484f:	4c 89 fa             	mov    %r15,%rdx
  404852:	be c4 90 40 00       	mov    $0x4090c4,%esi
  404857:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  40485e:	e8 8d d8 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404863:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40486a:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  404871:	e8 0a dc ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  404876:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40487d:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  404884:	48 39 df             	cmp    %rbx,%rdi
  404887:	74 14                	je     40489d <main+0x14bd>
  404889:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  404890:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404897:	00 
  404898:	e8 a3 d9 ff ff       	call   402240 <_ZdlPvm@plt>
  40489d:	4c 89 ff             	mov    %r15,%rdi
  4048a0:	e8 8b da ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
				typedtext.insert(0, "BOOM!!!");
  4048a5:	4c 89 ff             	mov    %r15,%rdi
  4048a8:	e8 33 dc ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4048ad:	4c 89 fa             	mov    %r15,%rdx
  4048b0:	be a6 90 40 00       	mov    $0x4090a6,%esi
  4048b5:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4048bc:	e8 2f d8 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4048c1:	48 8d 95 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdx
  4048c8:	31 f6                	xor    %esi,%esi
  4048ca:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  4048d1:	e8 da d8 ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  4048d6:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4048dd:	48 39 df             	cmp    %rbx,%rdi
  4048e0:	74 14                	je     4048f6 <main+0x1516>
  4048e2:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4048e9:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4048f0:	00 
  4048f1:	e8 4a d9 ff ff       	call   402240 <_ZdlPvm@plt>
  4048f6:	4c 89 ff             	mov    %r15,%rdi
  4048f9:	e8 32 da ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
				clock_text.restart();
  4048fe:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  404905:	e8 e6 da ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
				elapsedtime_text += clock_text.restart();
  40490a:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  404911:	e8 da da ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  404916:	48 89 c6             	mov    %rax,%rsi
  404919:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404920:	e8 bb da ff ff       	call   4023e0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404925:	f3 0f 10 3d af 4e 00 	movss  0x4eaf(%rip),%xmm7        # 4097dc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x15c>
  40492c:	00 
  40492d:	f3 0f 11 bd c0 c5 ff 	movss  %xmm7,-0x3a40(%rbp)
  404934:	ff 
				while (elapsedtime_text >= sf::seconds(.1f))
  404935:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  40493c:	ff 
  40493d:	e8 0e d8 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404942:	48 8b bd 18 c6 ff ff 	mov    -0x39e8(%rbp),%rdi
  404949:	48 89 c6             	mov    %rax,%rsi
  40494c:	e8 6f d9 ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  404951:	89 c3                	mov    %eax,%ebx
  404953:	84 c0                	test   %al,%al
  404955:	0f 84 81 14 00 00    	je     405ddc <main+0x29fc>
					elapsedtime_text -= sf::seconds(.1f);
  40495b:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404962:	ff 
  404963:	e8 e8 d7 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404968:	48 89 c6             	mov    %rax,%rsi
  40496b:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404972:	e8 a9 da ff ff       	call   402420 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404977:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  40497e:	e8 fd d9 ff ff       	call   402380 <_ZNK2sf6String7getSizeEv@plt>
  404983:	48 85 c0             	test   %rax,%rax
  404986:	0f 85 0c 0d 00 00    	jne    405698 <main+0x22b8>
						if (!flag_clock) { 
  40498c:	45 84 ed             	test   %r13b,%r13b
  40498f:	0f 84 8b 10 00 00    	je     405a20 <main+0x2640>
				while (elapsedtime_text >= sf::seconds(.1f))
  404995:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  40499c:	ff 
							screen = 6;
  40499d:	41 89 dd             	mov    %ebx,%r13d
				while (elapsedtime_text >= sf::seconds(.1f))
  4049a0:	e8 ab d7 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  4049a5:	eb 9b                	jmp    404942 <main+0x1562>
				elapsedtime_text += clock_text.restart();
  4049a7:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  4049ae:	e8 3d da ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  4049b3:	48 89 c6             	mov    %rax,%rsi
  4049b6:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  4049bd:	e8 1e da ff ff       	call   4023e0 <_ZN2sfpLERNS_4TimeES0_@plt>
  4049c2:	f3 0f 10 25 12 4e 00 	movss  0x4e12(%rip),%xmm4        # 4097dc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x15c>
  4049c9:	00 
  4049ca:	f3 0f 11 a5 c0 c5 ff 	movss  %xmm4,-0x3a40(%rbp)
  4049d1:	ff 
				while (elapsedtime_text >= sf::seconds(.1f))
  4049d2:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  4049d9:	ff 
  4049da:	e8 71 d7 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  4049df:	48 8b bd 18 c6 ff ff 	mov    -0x39e8(%rbp),%rdi
  4049e6:	48 89 c6             	mov    %rax,%rsi
  4049e9:	e8 d2 d8 ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  4049ee:	89 c3                	mov    %eax,%ebx
  4049f0:	84 c0                	test   %al,%al
  4049f2:	0f 84 c0 1a 00 00    	je     4064b8 <main+0x30d8>
					elapsedtime_text -= sf::seconds(.1f);
  4049f8:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  4049ff:	ff 
  404a00:	e8 4b d7 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404a05:	48 89 c6             	mov    %rax,%rsi
  404a08:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404a0f:	e8 0c da ff ff       	call   402420 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404a14:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  404a1b:	e8 60 d9 ff ff       	call   402380 <_ZNK2sf6String7getSizeEv@plt>
  404a20:	48 85 c0             	test   %rax,%rax
  404a23:	0f 85 6f 07 00 00    	jne    405198 <main+0x1db8>
						if (!flag_clock) { 
  404a29:	45 84 ed             	test   %r13b,%r13b
  404a2c:	0f 84 7e 10 00 00    	je     405ab0 <main+0x26d0>
				while (elapsedtime_text >= sf::seconds(.1f))
  404a32:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404a39:	ff 
					screen = 5;
  404a3a:	41 89 dd             	mov    %ebx,%r13d
				while (elapsedtime_text >= sf::seconds(.1f))
  404a3d:	e8 0e d7 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404a42:	eb 9b                	jmp    4049df <main+0x15ff>
				elapsedtime_text += clock_text.restart();
  404a44:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  404a4b:	e8 a0 d9 ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  404a50:	48 89 c6             	mov    %rax,%rsi
  404a53:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404a5a:	e8 81 d9 ff ff       	call   4023e0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404a5f:	f3 0f 10 3d 75 4d 00 	movss  0x4d75(%rip),%xmm7        # 4097dc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x15c>
  404a66:	00 
  404a67:	f3 0f 11 bd c0 c5 ff 	movss  %xmm7,-0x3a40(%rbp)
  404a6e:	ff 
				while (elapsedtime_text >= sf::seconds(.1f)){
  404a6f:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404a76:	ff 
  404a77:	e8 d4 d6 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404a7c:	48 8b bd 18 c6 ff ff 	mov    -0x39e8(%rbp),%rdi
  404a83:	48 89 c6             	mov    %rax,%rsi
  404a86:	e8 35 d8 ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  404a8b:	89 c3                	mov    %eax,%ebx
  404a8d:	84 c0                	test   %al,%al
  404a8f:	0f 84 6e 13 00 00    	je     405e03 <main+0x2a23>
					elapsedtime_text -= sf::seconds(.1f);
  404a95:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404a9c:	ff 
  404a9d:	e8 ae d6 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404aa2:	48 89 c6             	mov    %rax,%rsi
  404aa5:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404aac:	e8 6f d9 ff ff       	call   402420 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0){
  404ab1:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  404ab8:	e8 c3 d8 ff ff       	call   402380 <_ZNK2sf6String7getSizeEv@plt>
  404abd:	48 85 c0             	test   %rax,%rax
  404ac0:	0f 85 82 03 00 00    	jne    404e48 <main+0x1a68>
						if (!flag_clock) { 
  404ac6:	45 84 ed             	test   %r13b,%r13b
  404ac9:	0f 84 81 0f 00 00    	je     405a50 <main+0x2670>
				while (elapsedtime_text >= sf::seconds(.1f)){
  404acf:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404ad6:	ff 
				elapsedtime_text += clock_text.restart();
  404ad7:	41 89 dd             	mov    %ebx,%r13d
				while (elapsedtime_text >= sf::seconds(.1f)){
  404ada:	e8 71 d6 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404adf:	eb 9b                	jmp    404a7c <main+0x169c>
				elapsedtime_text += clock_text.restart();
  404ae1:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  404ae8:	e8 03 d9 ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  404aed:	48 89 c6             	mov    %rax,%rsi
  404af0:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404af7:	e8 e4 d8 ff ff       	call   4023e0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404afc:	f3 0f 10 2d d8 4c 00 	movss  0x4cd8(%rip),%xmm5        # 4097dc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x15c>
  404b03:	00 
  404b04:	f3 0f 11 ad c0 c5 ff 	movss  %xmm5,-0x3a40(%rbp)
  404b0b:	ff 
				while (elapsedtime_text >= sf::seconds(.1f))
  404b0c:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404b13:	ff 
  404b14:	e8 37 d6 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404b19:	48 8b bd 18 c6 ff ff 	mov    -0x39e8(%rbp),%rdi
  404b20:	48 89 c6             	mov    %rax,%rsi
  404b23:	e8 98 d7 ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  404b28:	89 c3                	mov    %eax,%ebx
  404b2a:	84 c0                	test   %al,%al
  404b2c:	0f 84 f4 10 00 00    	je     405c26 <main+0x2846>
					elapsedtime_text -= sf::seconds(.1f);
  404b32:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404b39:	ff 
  404b3a:	e8 11 d6 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404b3f:	48 89 c6             	mov    %rax,%rsi
  404b42:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404b49:	e8 d2 d8 ff ff       	call   402420 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404b4e:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  404b55:	e8 26 d8 ff ff       	call   402380 <_ZNK2sf6String7getSizeEv@plt>
  404b5a:	48 85 c0             	test   %rax,%rax
  404b5d:	0f 85 8d 09 00 00    	jne    4054f0 <main+0x2110>
						if (!flag_clock) { 
  404b63:	45 84 ed             	test   %r13b,%r13b
  404b66:	0f 84 74 0f 00 00    	je     405ae0 <main+0x2700>
				while (elapsedtime_text >= sf::seconds(.1f))
  404b6c:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404b73:	ff 
				elapsedtime_text += clock_text.restart();
  404b74:	41 89 dd             	mov    %ebx,%r13d
				while (elapsedtime_text >= sf::seconds(.1f))
  404b77:	e8 d4 d5 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404b7c:	eb 9b                	jmp    404b19 <main+0x1739>
				elapsedtime_text += clock_text.restart();
  404b7e:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  404b85:	e8 66 d8 ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  404b8a:	48 89 c6             	mov    %rax,%rsi
  404b8d:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404b94:	e8 47 d8 ff ff       	call   4023e0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404b99:	f3 0f 10 35 3b 4c 00 	movss  0x4c3b(%rip),%xmm6        # 4097dc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x15c>
  404ba0:	00 
  404ba1:	f3 0f 11 b5 c0 c5 ff 	movss  %xmm6,-0x3a40(%rbp)
  404ba8:	ff 
				while (elapsedtime_text >= sf::seconds(.1f))
  404ba9:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404bb0:	ff 
  404bb1:	e8 9a d5 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404bb6:	48 8b bd 18 c6 ff ff 	mov    -0x39e8(%rbp),%rdi
  404bbd:	48 89 c6             	mov    %rax,%rsi
  404bc0:	e8 fb d6 ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  404bc5:	89 c3                	mov    %eax,%ebx
  404bc7:	84 c0                	test   %al,%al
  404bc9:	0f 84 a1 15 00 00    	je     406170 <main+0x2d90>
					elapsedtime_text -= sf::seconds(.1f);
  404bcf:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404bd6:	ff 
  404bd7:	e8 74 d5 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404bdc:	48 89 c6             	mov    %rax,%rsi
  404bdf:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404be6:	e8 35 d8 ff ff       	call   402420 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404beb:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  404bf2:	e8 89 d7 ff ff       	call   402380 <_ZNK2sf6String7getSizeEv@plt>
  404bf7:	48 85 c0             	test   %rax,%rax
  404bfa:	0f 85 40 0c 00 00    	jne    405840 <main+0x2460>
						if (!flag_clock) { 
  404c00:	45 84 ed             	test   %r13b,%r13b
  404c03:	0f 84 77 0e 00 00    	je     405a80 <main+0x26a0>
				while (elapsedtime_text >= sf::seconds(.1f))
  404c09:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404c10:	ff 
				elapsedtime_text += clock_text.restart();
  404c11:	41 89 dd             	mov    %ebx,%r13d
				while (elapsedtime_text >= sf::seconds(.1f))
  404c14:	e8 37 d5 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404c19:	eb 9b                	jmp    404bb6 <main+0x17d6>
  404c1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
			if (!flag_typing) { typing.play(); }
  404c20:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  404c27:	e8 d4 d7 ff ff       	call   402400 <_ZN2sf11SoundStream4playEv@plt>
			typing.setLoop(true);
  404c2c:	be 01 00 00 00       	mov    $0x1,%esi
  404c31:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  404c38:	e8 e3 d5 ff ff       	call   402220 <_ZN2sf11SoundStream7setLoopEb@plt>
	ioctl(fd, WR_L_DISPLAY);
  404c3d:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  404c43:	be 63 61 00 00       	mov    $0x6163,%esi
  404c48:	31 c0                	xor    %eax,%eax
  404c4a:	c7 85 dc c5 ff ff 00 	movl   $0x0,-0x3a24(%rbp)
  404c51:	00 00 00 
  404c54:	89 df                	mov    %ebx,%edi
  404c56:	e8 c5 d6 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  404c5b:	ba 04 00 00 00       	mov    $0x4,%edx
  404c60:	48 8d b5 dc c5 ff ff 	lea    -0x3a24(%rbp),%rsi
  404c67:	89 df                	mov    %ebx,%edi
  404c69:	e8 72 d4 ff ff       	call   4020e0 <write@plt>
	ioctl(fd, WR_R_DISPLAY);
  404c6e:	be 64 61 00 00       	mov    $0x6164,%esi
  404c73:	89 df                	mov    %ebx,%edi
  404c75:	31 c0                	xor    %eax,%eax
  404c77:	c7 85 e0 c5 ff ff 00 	movl   $0x0,-0x3a20(%rbp)
  404c7e:	00 00 00 
  404c81:	e8 9a d6 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  404c86:	ba 04 00 00 00       	mov    $0x4,%edx
  404c8b:	48 8d b5 e0 c5 ff ff 	lea    -0x3a20(%rbp),%rsi
  404c92:	89 df                	mov    %ebx,%edi
  404c94:	e8 47 d4 ff ff       	call   4020e0 <write@plt>
	ioctl(fd, WR_GREEN_LEDS);
  404c99:	be 66 61 00 00       	mov    $0x6166,%esi
  404c9e:	89 df                	mov    %ebx,%edi
  404ca0:	31 c0                	xor    %eax,%eax
  404ca2:	c7 85 e4 c5 ff ff 00 	movl   $0x0,-0x3a1c(%rbp)
  404ca9:	00 00 00 
  404cac:	e8 6f d6 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  404cb1:	ba 04 00 00 00       	mov    $0x4,%edx
  404cb6:	48 8d b5 e4 c5 ff ff 	lea    -0x3a1c(%rbp),%rsi
  404cbd:	89 df                	mov    %ebx,%edi
  404cbf:	e8 1c d4 ff ff       	call   4020e0 <write@plt>
	ioctl(fd, WR_RED_LEDS);
  404cc4:	be 65 61 00 00       	mov    $0x6165,%esi
  404cc9:	89 df                	mov    %ebx,%edi
  404ccb:	31 c0                	xor    %eax,%eax
  404ccd:	c7 85 e8 c5 ff ff 00 	movl   $0x0,-0x3a18(%rbp)
  404cd4:	00 00 00 
  404cd7:	e8 44 d6 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  404cdc:	ba 04 00 00 00       	mov    $0x4,%edx
  404ce1:	48 8d b5 e8 c5 ff ff 	lea    -0x3a18(%rbp),%rsi
  404ce8:	89 df                	mov    %ebx,%edi
  404cea:	e8 f1 d3 ff ff       	call   4020e0 <write@plt>
				elapsedtime_text += clock_text.restart();
  404cef:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  404cf6:	e8 f5 d6 ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  404cfb:	48 89 c6             	mov    %rax,%rsi
  404cfe:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404d05:	e8 d6 d6 ff ff       	call   4023e0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404d0a:	f3 0f 10 25 ca 4a 00 	movss  0x4aca(%rip),%xmm4        # 4097dc <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x15c>
  404d11:	00 
  404d12:	c7 85 ac c5 ff ff 01 	movl   $0x1,-0x3a54(%rbp)
  404d19:	00 00 00 
  404d1c:	f3 0f 11 a5 c0 c5 ff 	movss  %xmm4,-0x3a40(%rbp)
  404d23:	ff 
  404d24:	0f 1f 40 00          	nopl   0x0(%rax)
				while (elapsedtime_text >= sf::seconds(.1f))
  404d28:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404d2f:	ff 
  404d30:	e8 1b d4 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404d35:	48 8b bd 18 c6 ff ff 	mov    -0x39e8(%rbp),%rdi
  404d3c:	48 89 c6             	mov    %rax,%rsi
  404d3f:	e8 7c d5 ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  404d44:	89 c3                	mov    %eax,%ebx
  404d46:	84 c0                	test   %al,%al
  404d48:	0f 84 b2 00 00 00    	je     404e00 <main+0x1a20>
					elapsedtime_text -= sf::seconds(.1f);
  404d4e:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404d55:	ff 
  404d56:	e8 f5 d3 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404d5b:	48 89 c6             	mov    %rax,%rsi
  404d5e:	48 8d bd 18 c6 ff ff 	lea    -0x39e8(%rbp),%rdi
  404d65:	e8 b6 d6 ff ff       	call   402420 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404d6a:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  404d71:	e8 0a d6 ff ff       	call   402380 <_ZNK2sf6String7getSizeEv@plt>
  404d76:	48 85 c0             	test   %rax,%rax
  404d79:	0f 85 c1 05 00 00    	jne    405340 <main+0x1f60>
						if (!flag_clock) { 
  404d7f:	45 84 ed             	test   %r13b,%r13b
  404d82:	75 29                	jne    404dad <main+0x19cd>
							typing.stop();
  404d84:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  404d8b:	e8 70 d4 ff ff       	call   402200 <_ZN2sf11SoundStream4stopEv@plt>
							clock_time.play(); 
  404d90:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  404d97:	e8 64 d6 ff ff       	call   402400 <_ZN2sf11SoundStream4playEv@plt>
							clock_time.setLoop(true);
  404d9c:	be 01 00 00 00       	mov    $0x1,%esi
  404da1:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  404da8:	e8 73 d4 ff ff       	call   402220 <_ZN2sf11SoundStream7setLoopEb@plt>
						temp_time = temp_clock.getElapsedTime();
  404dad:	48 8d bd 20 c6 ff ff 	lea    -0x39e0(%rbp),%rdi
  404db4:	e8 07 d6 ff ff       	call   4023c0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>
						if (temp_time >= sf::seconds(5.0f))
  404db9:	f3 0f 10 05 1f 4a 00 	movss  0x4a1f(%rip),%xmm0        # 4097e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x160>
  404dc0:	00 
						temp_time = temp_clock.getElapsedTime();
  404dc1:	48 89 85 28 c6 ff ff 	mov    %rax,-0x39d8(%rbp)
						if (temp_time >= sf::seconds(5.0f))
  404dc8:	e8 83 d3 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404dcd:	48 8b bd 28 c6 ff ff 	mov    -0x39d8(%rbp),%rdi
  404dd4:	48 89 c6             	mov    %rax,%rsi
  404dd7:	e8 e4 d4 ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  404ddc:	41 89 c5             	mov    %eax,%r13d
  404ddf:	84 c0                	test   %al,%al
  404de1:	0f 85 29 0d 00 00    	jne    405b10 <main+0x2730>
				while (elapsedtime_text >= sf::seconds(.1f))
  404de7:	f3 0f 10 85 c0 c5 ff 	movss  -0x3a40(%rbp),%xmm0
  404dee:	ff 
  404def:	41 89 dd             	mov    %ebx,%r13d
  404df2:	e8 59 d3 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404df7:	e9 39 ff ff ff       	jmp    404d35 <main+0x1955>
  404dfc:	0f 1f 40 00          	nopl   0x0(%rax)
				window.draw(text);
  404e00:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  404e05:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  404e0c:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404e13:	e8 f8 d5 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
		window.display();
  404e18:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  404e1f:	e8 cc d4 ff ff       	call   4022f0 <_ZN2sf6Window7displayEv@plt>
  404e24:	e9 7f f8 ff ff       	jmp    4046a8 <main+0x12c8>
  404e29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
				window.close();
  404e30:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  404e37:	e8 94 d6 ff ff       	call   4024d0 <_ZN2sf6Window5closeEv@plt>
  404e3c:	e9 8d f8 ff ff       	jmp    4046ce <main+0x12ee>
  404e41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
						text.setString(text.getString() + typedtext[0]);
  404e48:	31 f6                	xor    %esi,%esi
  404e4a:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  404e51:	e8 4a d4 ff ff       	call   4022a0 <_ZN2sf6StringixEm@plt>
  404e56:	8b 30                	mov    (%rax),%esi
  404e58:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  404e5f:	e8 5c d2 ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  404e64:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  404e6b:	e8 60 d5 ff ff       	call   4023d0 <_ZNK2sf4Text9getStringEv@plt>
  404e70:	48 89 c6             	mov    %rax,%rsi
  404e73:	48 8d 95 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdx
  404e7a:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  404e81:	e8 4a d2 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  404e86:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  404e8d:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  404e94:	e8 e7 d5 ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  404e99:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  404ea0:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  404ea7:	48 39 df             	cmp    %rbx,%rdi
  404eaa:	74 14                	je     404ec0 <main+0x1ae0>
  404eac:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  404eb3:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404eba:	00 
  404ebb:	e8 80 d3 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  404ec0:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  404ec7:	48 8d 85 50 c7 ff ff 	lea    -0x38b0(%rbp),%rax
  404ece:	48 89 85 b0 c5 ff ff 	mov    %rax,-0x3a50(%rbp)
  404ed5:	48 39 c7             	cmp    %rax,%rdi
  404ed8:	74 14                	je     404eee <main+0x1b0e>
  404eda:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  404ee1:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404ee8:	00 
  404ee9:	e8 52 d3 ff ff       	call   402240 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  404eee:	4c 8d bd 48 c6 ff ff 	lea    -0x39b8(%rbp),%r15
  404ef5:	4c 8d a5 40 c6 ff ff 	lea    -0x39c0(%rbp),%r12
  404efc:	4c 89 ff             	mov    %r15,%rdi
  404eff:	4c 89 bd b8 c5 ff ff 	mov    %r15,-0x3a48(%rbp)
  404f06:	4c 8d b5 20 c7 ff ff 	lea    -0x38e0(%rbp),%r14
  404f0d:	e8 ce d5 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  404f12:	4c 89 e7             	mov    %r12,%rdi
  404f15:	e8 c6 d5 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  404f1a:	4c 89 e2             	mov    %r12,%rdx
  404f1d:	48 8d b5 a0 c6 ff ff 	lea    -0x3960(%rbp),%rsi
  404f24:	4c 89 f7             	mov    %r14,%rdi
  404f27:	e8 44 d5 ff ff       	call   402470 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  404f2c:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  404f33:	ba 01 00 00 00       	mov    $0x1,%edx
  404f38:	4c 89 f6             	mov    %r14,%rsi
  404f3b:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  404f42:	e8 09 d3 ff ff       	call   402250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  404f47:	4c 89 fa             	mov    %r15,%rdx
  404f4a:	48 8d b5 40 c7 ff ff 	lea    -0x38c0(%rbp),%rsi
  404f51:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  404f58:	e8 43 d1 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  404f5d:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  404f64:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  404f6b:	e8 d0 d4 ff ff       	call   402440 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  404f70:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  404f77:	48 39 df             	cmp    %rbx,%rdi
  404f7a:	74 14                	je     404f90 <main+0x1bb0>
  404f7c:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  404f83:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404f8a:	00 
  404f8b:	e8 b0 d2 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  404f90:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  404f97:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  404f9e:	74 10                	je     404fb0 <main+0x1bd0>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404fa0:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  404fa7:	48 8d 70 01          	lea    0x1(%rax),%rsi
  404fab:	e8 90 d2 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  404fb0:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  404fb7:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  404fbe:	48 39 c7             	cmp    %rax,%rdi
  404fc1:	74 10                	je     404fd3 <main+0x1bf3>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404fc3:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  404fca:	48 8d 70 01          	lea    0x1(%rax),%rsi
  404fce:	e8 6d d2 ff ff       	call   402240 <_ZdlPvm@plt>
  404fd3:	4c 89 e7             	mov    %r12,%rdi
  404fd6:	e8 55 d3 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  404fdb:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  404fe2:	e8 49 d3 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  404fe7:	e9 83 fa ff ff       	jmp    404a6f <main+0x168f>
  404fec:	0f 1f 40 00          	nopl   0x0(%rax)
						text.setString(text.getString() + typedtext[0]);
  404ff0:	31 f6                	xor    %esi,%esi
  404ff2:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  404ff9:	e8 a2 d2 ff ff       	call   4022a0 <_ZN2sf6StringixEm@plt>
  404ffe:	8b 30                	mov    (%rax),%esi
  405000:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  405007:	e8 b4 d0 ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  40500c:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405013:	e8 b8 d3 ff ff       	call   4023d0 <_ZNK2sf4Text9getStringEv@plt>
  405018:	48 89 c6             	mov    %rax,%rsi
  40501b:	48 8d 95 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdx
  405022:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405029:	e8 a2 d0 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  40502e:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  405035:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  40503c:	e8 3f d4 ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405041:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  405048:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  40504f:	48 39 df             	cmp    %rbx,%rdi
  405052:	74 14                	je     405068 <main+0x1c88>
  405054:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40505b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405062:	00 
  405063:	e8 d8 d1 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405068:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  40506f:	48 8d 85 50 c7 ff ff 	lea    -0x38b0(%rbp),%rax
  405076:	48 89 85 b0 c5 ff ff 	mov    %rax,-0x3a50(%rbp)
  40507d:	48 39 c7             	cmp    %rax,%rdi
  405080:	74 14                	je     405096 <main+0x1cb6>
  405082:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  405089:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405090:	00 
  405091:	e8 aa d1 ff ff       	call   402240 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  405096:	4c 8d bd 48 c6 ff ff 	lea    -0x39b8(%rbp),%r15
  40509d:	4c 8d a5 40 c6 ff ff 	lea    -0x39c0(%rbp),%r12
  4050a4:	4c 89 ff             	mov    %r15,%rdi
  4050a7:	4c 89 bd b8 c5 ff ff 	mov    %r15,-0x3a48(%rbp)
  4050ae:	4c 8d b5 20 c7 ff ff 	lea    -0x38e0(%rbp),%r14
  4050b5:	e8 26 d4 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4050ba:	4c 89 e7             	mov    %r12,%rdi
  4050bd:	e8 1e d4 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4050c2:	4c 89 e2             	mov    %r12,%rdx
  4050c5:	48 8d b5 a0 c6 ff ff 	lea    -0x3960(%rbp),%rsi
  4050cc:	4c 89 f7             	mov    %r14,%rdi
  4050cf:	e8 9c d3 ff ff       	call   402470 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  4050d4:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4050db:	ba 01 00 00 00       	mov    $0x1,%edx
  4050e0:	4c 89 f6             	mov    %r14,%rsi
  4050e3:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  4050ea:	e8 61 d1 ff ff       	call   402250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  4050ef:	4c 89 fa             	mov    %r15,%rdx
  4050f2:	48 8d b5 40 c7 ff ff 	lea    -0x38c0(%rbp),%rsi
  4050f9:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405100:	e8 9b cf ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405105:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40510c:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  405113:	e8 28 d3 ff ff       	call   402440 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405118:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40511f:	48 39 df             	cmp    %rbx,%rdi
  405122:	74 14                	je     405138 <main+0x1d58>
  405124:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40512b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405132:	00 
  405133:	e8 08 d1 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405138:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  40513f:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  405146:	74 10                	je     405158 <main+0x1d78>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405148:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  40514f:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405153:	e8 e8 d0 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405158:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  40515f:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  405166:	48 39 c7             	cmp    %rax,%rdi
  405169:	74 10                	je     40517b <main+0x1d9b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40516b:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  405172:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405176:	e8 c5 d0 ff ff       	call   402240 <_ZdlPvm@plt>
  40517b:	4c 89 e7             	mov    %r12,%rdi
  40517e:	e8 ad d1 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  405183:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  40518a:	e8 a1 d1 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  40518f:	e9 3a f6 ff ff       	jmp    4047ce <main+0x13ee>
  405194:	0f 1f 40 00          	nopl   0x0(%rax)
						text.setString(text.getString() + typedtext[0]);
  405198:	31 f6                	xor    %esi,%esi
  40519a:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  4051a1:	e8 fa d0 ff ff       	call   4022a0 <_ZN2sf6StringixEm@plt>
  4051a6:	8b 30                	mov    (%rax),%esi
  4051a8:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  4051af:	e8 0c cf ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  4051b4:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4051bb:	e8 10 d2 ff ff       	call   4023d0 <_ZNK2sf4Text9getStringEv@plt>
  4051c0:	48 89 c6             	mov    %rax,%rsi
  4051c3:	48 8d 95 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdx
  4051ca:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4051d1:	e8 fa ce ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  4051d6:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4051dd:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4051e4:	e8 97 d2 ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  4051e9:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4051f0:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  4051f7:	48 39 df             	cmp    %rbx,%rdi
  4051fa:	74 14                	je     405210 <main+0x1e30>
  4051fc:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  405203:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40520a:	00 
  40520b:	e8 30 d0 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405210:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  405217:	48 8d 85 50 c7 ff ff 	lea    -0x38b0(%rbp),%rax
  40521e:	48 89 85 b0 c5 ff ff 	mov    %rax,-0x3a50(%rbp)
  405225:	48 39 c7             	cmp    %rax,%rdi
  405228:	74 14                	je     40523e <main+0x1e5e>
  40522a:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  405231:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405238:	00 
  405239:	e8 02 d0 ff ff       	call   402240 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  40523e:	4c 8d bd 48 c6 ff ff 	lea    -0x39b8(%rbp),%r15
  405245:	4c 8d a5 40 c6 ff ff 	lea    -0x39c0(%rbp),%r12
  40524c:	4c 89 ff             	mov    %r15,%rdi
  40524f:	4c 89 bd b8 c5 ff ff 	mov    %r15,-0x3a48(%rbp)
  405256:	4c 8d b5 20 c7 ff ff 	lea    -0x38e0(%rbp),%r14
  40525d:	e8 7e d2 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  405262:	4c 89 e7             	mov    %r12,%rdi
  405265:	e8 76 d2 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  40526a:	4c 89 e2             	mov    %r12,%rdx
  40526d:	48 8d b5 a0 c6 ff ff 	lea    -0x3960(%rbp),%rsi
  405274:	4c 89 f7             	mov    %r14,%rdi
  405277:	e8 f4 d1 ff ff       	call   402470 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  40527c:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  405283:	ba 01 00 00 00       	mov    $0x1,%edx
  405288:	4c 89 f6             	mov    %r14,%rsi
  40528b:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  405292:	e8 b9 cf ff ff       	call   402250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  405297:	4c 89 fa             	mov    %r15,%rdx
  40529a:	48 8d b5 40 c7 ff ff 	lea    -0x38c0(%rbp),%rsi
  4052a1:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4052a8:	e8 f3 cd ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  4052ad:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4052b4:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  4052bb:	e8 80 d1 ff ff       	call   402440 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  4052c0:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4052c7:	48 39 df             	cmp    %rbx,%rdi
  4052ca:	74 14                	je     4052e0 <main+0x1f00>
  4052cc:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4052d3:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4052da:	00 
  4052db:	e8 60 cf ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4052e0:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  4052e7:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  4052ee:	74 10                	je     405300 <main+0x1f20>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4052f0:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  4052f7:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4052fb:	e8 40 cf ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405300:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  405307:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  40530e:	48 39 c7             	cmp    %rax,%rdi
  405311:	74 10                	je     405323 <main+0x1f43>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405313:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  40531a:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40531e:	e8 1d cf ff ff       	call   402240 <_ZdlPvm@plt>
  405323:	4c 89 e7             	mov    %r12,%rdi
  405326:	e8 05 d0 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  40532b:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  405332:	e8 f9 cf ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  405337:	e9 96 f6 ff ff       	jmp    4049d2 <main+0x15f2>
  40533c:	0f 1f 40 00          	nopl   0x0(%rax)
						text.setString(text.getString() + typedtext[0]);
  405340:	31 f6                	xor    %esi,%esi
  405342:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  405349:	e8 52 cf ff ff       	call   4022a0 <_ZN2sf6StringixEm@plt>
  40534e:	4c 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%r15
  405355:	8b 30                	mov    (%rax),%esi
  405357:	4c 89 ff             	mov    %r15,%rdi
  40535a:	e8 61 cd ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  40535f:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405366:	e8 65 d0 ff ff       	call   4023d0 <_ZNK2sf4Text9getStringEv@plt>
  40536b:	48 89 c6             	mov    %rax,%rsi
  40536e:	4c 89 fa             	mov    %r15,%rdx
  405371:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405378:	e8 53 cd ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  40537d:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  405384:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  40538b:	e8 f0 d0 ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405390:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  405397:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  40539e:	48 39 df             	cmp    %rbx,%rdi
  4053a1:	74 14                	je     4053b7 <main+0x1fd7>
  4053a3:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4053aa:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4053b1:	00 
  4053b2:	e8 89 ce ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4053b7:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  4053be:	48 8d 85 50 c7 ff ff 	lea    -0x38b0(%rbp),%rax
  4053c5:	48 89 85 b0 c5 ff ff 	mov    %rax,-0x3a50(%rbp)
  4053cc:	48 39 c7             	cmp    %rax,%rdi
  4053cf:	74 14                	je     4053e5 <main+0x2005>
  4053d1:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  4053d8:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4053df:	00 
  4053e0:	e8 5b ce ff ff       	call   402240 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  4053e5:	48 8d 85 48 c6 ff ff 	lea    -0x39b8(%rbp),%rax
  4053ec:	4c 8d a5 40 c6 ff ff 	lea    -0x39c0(%rbp),%r12
  4053f3:	48 89 c7             	mov    %rax,%rdi
  4053f6:	48 89 85 b8 c5 ff ff 	mov    %rax,-0x3a48(%rbp)
  4053fd:	4c 8d b5 20 c7 ff ff 	lea    -0x38e0(%rbp),%r14
  405404:	e8 d7 d0 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  405409:	4c 89 e7             	mov    %r12,%rdi
  40540c:	e8 cf d0 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  405411:	4c 89 e2             	mov    %r12,%rdx
  405414:	48 8d b5 a0 c6 ff ff 	lea    -0x3960(%rbp),%rsi
  40541b:	4c 89 f7             	mov    %r14,%rdi
  40541e:	e8 4d d0 ff ff       	call   402470 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  405423:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  40542a:	ba 01 00 00 00       	mov    $0x1,%edx
  40542f:	4c 89 f6             	mov    %r14,%rsi
  405432:	4c 89 ff             	mov    %r15,%rdi
  405435:	e8 16 ce ff ff       	call   402250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  40543a:	48 8b 95 b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdx
  405441:	4c 89 fe             	mov    %r15,%rsi
  405444:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  40544b:	e8 50 cc ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405450:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  405457:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  40545e:	e8 dd cf ff ff       	call   402440 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405463:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40546a:	48 39 df             	cmp    %rbx,%rdi
  40546d:	74 14                	je     405483 <main+0x20a3>
  40546f:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  405476:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40547d:	00 
  40547e:	e8 bd cd ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405483:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  40548a:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  405491:	74 10                	je     4054a3 <main+0x20c3>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405493:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  40549a:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40549e:	e8 9d cd ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4054a3:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  4054aa:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  4054b1:	48 39 c7             	cmp    %rax,%rdi
  4054b4:	74 10                	je     4054c6 <main+0x20e6>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4054b6:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  4054bd:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4054c1:	e8 7a cd ff ff       	call   402240 <_ZdlPvm@plt>
  4054c6:	4c 89 e7             	mov    %r12,%rdi
  4054c9:	e8 62 ce ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  4054ce:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  4054d5:	e8 56 ce ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
						temp_clock.restart();
  4054da:	48 8d bd 20 c6 ff ff 	lea    -0x39e0(%rbp),%rdi
  4054e1:	e8 0a cf ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  4054e6:	e9 3d f8 ff ff       	jmp    404d28 <main+0x1948>
  4054eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
						text.setString(text.getString() + typedtext[0]);
  4054f0:	31 f6                	xor    %esi,%esi
  4054f2:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  4054f9:	e8 a2 cd ff ff       	call   4022a0 <_ZN2sf6StringixEm@plt>
  4054fe:	8b 30                	mov    (%rax),%esi
  405500:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  405507:	e8 b4 cb ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  40550c:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405513:	e8 b8 ce ff ff       	call   4023d0 <_ZNK2sf4Text9getStringEv@plt>
  405518:	48 89 c6             	mov    %rax,%rsi
  40551b:	48 8d 95 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdx
  405522:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405529:	e8 a2 cb ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  40552e:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  405535:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  40553c:	e8 3f cf ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405541:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  405548:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  40554f:	48 39 df             	cmp    %rbx,%rdi
  405552:	74 14                	je     405568 <main+0x2188>
  405554:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40555b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405562:	00 
  405563:	e8 d8 cc ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405568:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  40556f:	48 8d 85 50 c7 ff ff 	lea    -0x38b0(%rbp),%rax
  405576:	48 89 85 b0 c5 ff ff 	mov    %rax,-0x3a50(%rbp)
  40557d:	48 39 c7             	cmp    %rax,%rdi
  405580:	74 14                	je     405596 <main+0x21b6>
  405582:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  405589:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405590:	00 
  405591:	e8 aa cc ff ff       	call   402240 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  405596:	4c 8d bd 48 c6 ff ff 	lea    -0x39b8(%rbp),%r15
  40559d:	4c 8d a5 40 c6 ff ff 	lea    -0x39c0(%rbp),%r12
  4055a4:	4c 89 ff             	mov    %r15,%rdi
  4055a7:	4c 89 bd b8 c5 ff ff 	mov    %r15,-0x3a48(%rbp)
  4055ae:	4c 8d b5 20 c7 ff ff 	lea    -0x38e0(%rbp),%r14
  4055b5:	e8 26 cf ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4055ba:	4c 89 e7             	mov    %r12,%rdi
  4055bd:	e8 1e cf ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4055c2:	4c 89 e2             	mov    %r12,%rdx
  4055c5:	48 8d b5 a0 c6 ff ff 	lea    -0x3960(%rbp),%rsi
  4055cc:	4c 89 f7             	mov    %r14,%rdi
  4055cf:	e8 9c ce ff ff       	call   402470 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  4055d4:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4055db:	ba 01 00 00 00       	mov    $0x1,%edx
  4055e0:	4c 89 f6             	mov    %r14,%rsi
  4055e3:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  4055ea:	e8 61 cc ff ff       	call   402250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  4055ef:	4c 89 fa             	mov    %r15,%rdx
  4055f2:	48 8d b5 40 c7 ff ff 	lea    -0x38c0(%rbp),%rsi
  4055f9:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405600:	e8 9b ca ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405605:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40560c:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  405613:	e8 28 ce ff ff       	call   402440 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405618:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40561f:	48 39 df             	cmp    %rbx,%rdi
  405622:	74 14                	je     405638 <main+0x2258>
  405624:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40562b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405632:	00 
  405633:	e8 08 cc ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405638:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  40563f:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  405646:	74 10                	je     405658 <main+0x2278>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405648:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  40564f:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405653:	e8 e8 cb ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405658:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  40565f:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  405666:	48 39 c7             	cmp    %rax,%rdi
  405669:	74 10                	je     40567b <main+0x229b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40566b:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  405672:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405676:	e8 c5 cb ff ff       	call   402240 <_ZdlPvm@plt>
  40567b:	4c 89 e7             	mov    %r12,%rdi
  40567e:	e8 ad cc ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  405683:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  40568a:	e8 a1 cc ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  40568f:	e9 78 f4 ff ff       	jmp    404b0c <main+0x172c>
  405694:	0f 1f 40 00          	nopl   0x0(%rax)
						text.setString(text.getString() + typedtext[0]);
  405698:	31 f6                	xor    %esi,%esi
  40569a:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  4056a1:	e8 fa cb ff ff       	call   4022a0 <_ZN2sf6StringixEm@plt>
  4056a6:	8b 30                	mov    (%rax),%esi
  4056a8:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  4056af:	e8 0c ca ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  4056b4:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4056bb:	e8 10 cd ff ff       	call   4023d0 <_ZNK2sf4Text9getStringEv@plt>
  4056c0:	48 89 c6             	mov    %rax,%rsi
  4056c3:	48 8d 95 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdx
  4056ca:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4056d1:	e8 fa c9 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  4056d6:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4056dd:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4056e4:	e8 97 cd ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  4056e9:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4056f0:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  4056f7:	48 39 df             	cmp    %rbx,%rdi
  4056fa:	74 14                	je     405710 <main+0x2330>
  4056fc:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  405703:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40570a:	00 
  40570b:	e8 30 cb ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405710:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  405717:	48 8d 85 50 c7 ff ff 	lea    -0x38b0(%rbp),%rax
  40571e:	48 89 85 b0 c5 ff ff 	mov    %rax,-0x3a50(%rbp)
  405725:	48 39 c7             	cmp    %rax,%rdi
  405728:	74 14                	je     40573e <main+0x235e>
  40572a:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  405731:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405738:	00 
  405739:	e8 02 cb ff ff       	call   402240 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  40573e:	4c 8d bd 48 c6 ff ff 	lea    -0x39b8(%rbp),%r15
  405745:	4c 8d a5 40 c6 ff ff 	lea    -0x39c0(%rbp),%r12
  40574c:	4c 89 ff             	mov    %r15,%rdi
  40574f:	4c 89 bd b8 c5 ff ff 	mov    %r15,-0x3a48(%rbp)
  405756:	4c 8d b5 20 c7 ff ff 	lea    -0x38e0(%rbp),%r14
  40575d:	e8 7e cd ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  405762:	4c 89 e7             	mov    %r12,%rdi
  405765:	e8 76 cd ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  40576a:	4c 89 e2             	mov    %r12,%rdx
  40576d:	48 8d b5 a0 c6 ff ff 	lea    -0x3960(%rbp),%rsi
  405774:	4c 89 f7             	mov    %r14,%rdi
  405777:	e8 f4 cc ff ff       	call   402470 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  40577c:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  405783:	ba 01 00 00 00       	mov    $0x1,%edx
  405788:	4c 89 f6             	mov    %r14,%rsi
  40578b:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  405792:	e8 b9 ca ff ff       	call   402250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  405797:	4c 89 fa             	mov    %r15,%rdx
  40579a:	48 8d b5 40 c7 ff ff 	lea    -0x38c0(%rbp),%rsi
  4057a1:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4057a8:	e8 f3 c8 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  4057ad:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4057b4:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  4057bb:	e8 80 cc ff ff       	call   402440 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  4057c0:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4057c7:	48 39 df             	cmp    %rbx,%rdi
  4057ca:	74 14                	je     4057e0 <main+0x2400>
  4057cc:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4057d3:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4057da:	00 
  4057db:	e8 60 ca ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4057e0:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  4057e7:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  4057ee:	74 10                	je     405800 <main+0x2420>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4057f0:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  4057f7:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4057fb:	e8 40 ca ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405800:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  405807:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  40580e:	48 39 c7             	cmp    %rax,%rdi
  405811:	74 10                	je     405823 <main+0x2443>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405813:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  40581a:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40581e:	e8 1d ca ff ff       	call   402240 <_ZdlPvm@plt>
  405823:	4c 89 e7             	mov    %r12,%rdi
  405826:	e8 05 cb ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  40582b:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  405832:	e8 f9 ca ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  405837:	e9 f9 f0 ff ff       	jmp    404935 <main+0x1555>
  40583c:	0f 1f 40 00          	nopl   0x0(%rax)
						text.setString(text.getString() + typedtext[0]);
  405840:	31 f6                	xor    %esi,%esi
  405842:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  405849:	e8 52 ca ff ff       	call   4022a0 <_ZN2sf6StringixEm@plt>
  40584e:	8b 30                	mov    (%rax),%esi
  405850:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  405857:	e8 64 c8 ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  40585c:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405863:	e8 68 cb ff ff       	call   4023d0 <_ZNK2sf4Text9getStringEv@plt>
  405868:	48 89 c6             	mov    %rax,%rsi
  40586b:	48 8d 95 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdx
  405872:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405879:	e8 52 c8 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  40587e:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  405885:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  40588c:	e8 ef cb ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405891:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  405898:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  40589f:	48 39 df             	cmp    %rbx,%rdi
  4058a2:	74 14                	je     4058b8 <main+0x24d8>
  4058a4:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4058ab:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4058b2:	00 
  4058b3:	e8 88 c9 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4058b8:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  4058bf:	48 8d 85 50 c7 ff ff 	lea    -0x38b0(%rbp),%rax
  4058c6:	48 89 85 b0 c5 ff ff 	mov    %rax,-0x3a50(%rbp)
  4058cd:	48 39 c7             	cmp    %rax,%rdi
  4058d0:	74 14                	je     4058e6 <main+0x2506>
  4058d2:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  4058d9:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4058e0:	00 
  4058e1:	e8 5a c9 ff ff       	call   402240 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  4058e6:	4c 8d bd 48 c6 ff ff 	lea    -0x39b8(%rbp),%r15
  4058ed:	4c 8d a5 40 c6 ff ff 	lea    -0x39c0(%rbp),%r12
  4058f4:	4c 89 ff             	mov    %r15,%rdi
  4058f7:	4c 89 bd b8 c5 ff ff 	mov    %r15,-0x3a48(%rbp)
  4058fe:	4c 8d b5 20 c7 ff ff 	lea    -0x38e0(%rbp),%r14
  405905:	e8 d6 cb ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  40590a:	4c 89 e7             	mov    %r12,%rdi
  40590d:	e8 ce cb ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  405912:	4c 89 e2             	mov    %r12,%rdx
  405915:	48 8d b5 a0 c6 ff ff 	lea    -0x3960(%rbp),%rsi
  40591c:	4c 89 f7             	mov    %r14,%rdi
  40591f:	e8 4c cb ff ff       	call   402470 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  405924:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  40592b:	ba 01 00 00 00       	mov    $0x1,%edx
  405930:	4c 89 f6             	mov    %r14,%rsi
  405933:	48 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%rdi
  40593a:	e8 11 c9 ff ff       	call   402250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  40593f:	4c 89 fa             	mov    %r15,%rdx
  405942:	48 8d b5 40 c7 ff ff 	lea    -0x38c0(%rbp),%rsi
  405949:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405950:	e8 4b c7 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405955:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40595c:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  405963:	e8 d8 ca ff ff       	call   402440 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405968:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40596f:	48 39 df             	cmp    %rbx,%rdi
  405972:	74 14                	je     405988 <main+0x25a8>
  405974:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40597b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405982:	00 
  405983:	e8 b8 c8 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405988:	48 8b bd 40 c7 ff ff 	mov    -0x38c0(%rbp),%rdi
	if (!_M_is_local())
  40598f:	48 3b bd b0 c5 ff ff 	cmp    -0x3a50(%rbp),%rdi
  405996:	74 10                	je     4059a8 <main+0x25c8>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405998:	48 8b 85 50 c7 ff ff 	mov    -0x38b0(%rbp),%rax
  40599f:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4059a3:	e8 98 c8 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4059a8:	48 8b bd 20 c7 ff ff 	mov    -0x38e0(%rbp),%rdi
	if (!_M_is_local())
  4059af:	48 8d 85 30 c7 ff ff 	lea    -0x38d0(%rbp),%rax
  4059b6:	48 39 c7             	cmp    %rax,%rdi
  4059b9:	74 10                	je     4059cb <main+0x25eb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4059bb:	48 8b 85 30 c7 ff ff 	mov    -0x38d0(%rbp),%rax
  4059c2:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4059c6:	e8 75 c8 ff ff       	call   402240 <_ZdlPvm@plt>
  4059cb:	4c 89 e7             	mov    %r12,%rdi
  4059ce:	e8 5d c9 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  4059d3:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  4059da:	e8 51 c9 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
  4059df:	e9 c5 f1 ff ff       	jmp    404ba9 <main+0x17c9>
  4059e4:	0f 1f 40 00          	nopl   0x0(%rax)
							typing.stop();
  4059e8:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  4059ef:	e8 0c c8 ff ff       	call   402200 <_ZN2sf11SoundStream4stopEv@plt>
							clock_time.play(); 
  4059f4:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  4059fb:	e8 00 ca ff ff       	call   402400 <_ZN2sf11SoundStream4playEv@plt>
							clock_time.setLoop(true);
  405a00:	be 01 00 00 00       	mov    $0x1,%esi
  405a05:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405a0c:	e8 0f c8 ff ff       	call   402220 <_ZN2sf11SoundStream7setLoopEb@plt>
  405a11:	e9 18 ee ff ff       	jmp    40482e <main+0x144e>
  405a16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  405a1d:	00 00 00 
							typing.stop();
  405a20:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  405a27:	e8 d4 c7 ff ff       	call   402200 <_ZN2sf11SoundStream4stopEv@plt>
							clock_time.play(); 
  405a2c:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405a33:	e8 c8 c9 ff ff       	call   402400 <_ZN2sf11SoundStream4playEv@plt>
							clock_time.setLoop(true);
  405a38:	be 01 00 00 00       	mov    $0x1,%esi
  405a3d:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405a44:	e8 d7 c7 ff ff       	call   402220 <_ZN2sf11SoundStream7setLoopEb@plt>
  405a49:	e9 47 ef ff ff       	jmp    404995 <main+0x15b5>
  405a4e:	66 90                	xchg   %ax,%ax
							typing.stop();
  405a50:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  405a57:	e8 a4 c7 ff ff       	call   402200 <_ZN2sf11SoundStream4stopEv@plt>
							clock_time.play(); 
  405a5c:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405a63:	e8 98 c9 ff ff       	call   402400 <_ZN2sf11SoundStream4playEv@plt>
							clock_time.setLoop(true);
  405a68:	be 01 00 00 00       	mov    $0x1,%esi
  405a6d:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405a74:	e8 a7 c7 ff ff       	call   402220 <_ZN2sf11SoundStream7setLoopEb@plt>
  405a79:	e9 51 f0 ff ff       	jmp    404acf <main+0x16ef>
  405a7e:	66 90                	xchg   %ax,%ax
							typing.stop();
  405a80:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  405a87:	e8 74 c7 ff ff       	call   402200 <_ZN2sf11SoundStream4stopEv@plt>
							clock_time.play(); 
  405a8c:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405a93:	e8 68 c9 ff ff       	call   402400 <_ZN2sf11SoundStream4playEv@plt>
							clock_time.setLoop(true);
  405a98:	be 01 00 00 00       	mov    $0x1,%esi
  405a9d:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405aa4:	e8 77 c7 ff ff       	call   402220 <_ZN2sf11SoundStream7setLoopEb@plt>
  405aa9:	e9 5b f1 ff ff       	jmp    404c09 <main+0x1829>
  405aae:	66 90                	xchg   %ax,%ax
							typing.stop();
  405ab0:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  405ab7:	e8 44 c7 ff ff       	call   402200 <_ZN2sf11SoundStream4stopEv@plt>
							clock_time.play(); 
  405abc:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405ac3:	e8 38 c9 ff ff       	call   402400 <_ZN2sf11SoundStream4playEv@plt>
							clock_time.setLoop(true);
  405ac8:	be 01 00 00 00       	mov    $0x1,%esi
  405acd:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405ad4:	e8 47 c7 ff ff       	call   402220 <_ZN2sf11SoundStream7setLoopEb@plt>
  405ad9:	e9 54 ef ff ff       	jmp    404a32 <main+0x1652>
  405ade:	66 90                	xchg   %ax,%ax
							typing.stop();
  405ae0:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  405ae7:	e8 14 c7 ff ff       	call   402200 <_ZN2sf11SoundStream4stopEv@plt>
							clock_time.play(); 
  405aec:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405af3:	e8 08 c9 ff ff       	call   402400 <_ZN2sf11SoundStream4playEv@plt>
							clock_time.setLoop(true);
  405af8:	be 01 00 00 00       	mov    $0x1,%esi
  405afd:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  405b04:	e8 17 c7 ff ff       	call   402220 <_ZN2sf11SoundStream7setLoopEb@plt>
  405b09:	e9 5e f0 ff ff       	jmp    404b6c <main+0x178c>
  405b0e:	66 90                	xchg   %ax,%ax
	ioctl(fd, WR_R_DISPLAY);
  405b10:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  405b16:	be 64 61 00 00       	mov    $0x6164,%esi
  405b1b:	31 c0                	xor    %eax,%eax
  405b1d:	c7 85 ec c5 ff ff ff 	movl   $0xffffffff,-0x3a14(%rbp)
  405b24:	ff ff ff 
  405b27:	89 df                	mov    %ebx,%edi
  405b29:	e8 f2 c7 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  405b2e:	ba 04 00 00 00       	mov    $0x4,%edx
  405b33:	48 8d b5 ec c5 ff ff 	lea    -0x3a14(%rbp),%rsi
  405b3a:	89 df                	mov    %ebx,%edi
  405b3c:	e8 9f c5 ff ff       	call   4020e0 <write@plt>
							text.setString("");
  405b41:	4c 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%r15
  405b48:	4c 89 ff             	mov    %r15,%rdi
  405b4b:	e8 90 c9 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  405b50:	4c 89 fa             	mov    %r15,%rdx
  405b53:	be c4 90 40 00       	mov    $0x4090c4,%esi
  405b58:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405b5f:	e8 8c c5 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  405b64:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  405b6b:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405b72:	e8 09 c9 ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405b77:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  405b7e:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  405b85:	48 39 df             	cmp    %rbx,%rdi
  405b88:	74 14                	je     405b9e <main+0x27be>
  405b8a:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  405b91:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405b98:	00 
  405b99:	e8 a2 c6 ff ff       	call   402240 <_ZdlPvm@plt>
  405b9e:	4c 89 ff             	mov    %r15,%rdi
  405ba1:	e8 8a c7 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
							typedtext.insert(0, "[root@bois ~] $ Voce deveria saber matematica...");
  405ba6:	4c 89 ff             	mov    %r15,%rdi
  405ba9:	e8 32 c9 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  405bae:	4c 89 fa             	mov    %r15,%rdx
  405bb1:	be 80 94 40 00       	mov    $0x409480,%esi
  405bb6:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405bbd:	e8 2e c5 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  405bc2:	48 8d 95 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdx
  405bc9:	31 f6                	xor    %esi,%esi
  405bcb:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  405bd2:	e8 d9 c5 ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  405bd7:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  405bde:	48 39 df             	cmp    %rbx,%rdi
  405be1:	74 14                	je     405bf7 <main+0x2817>
  405be3:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  405bea:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405bf1:	00 
  405bf2:	e8 49 c6 ff ff       	call   402240 <_ZdlPvm@plt>
  405bf7:	4c 89 ff             	mov    %r15,%rdi
  405bfa:	e8 31 c7 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
							clock_text.restart();
  405bff:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  405c06:	e8 e5 c7 ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
							clock_bomb.restart();
  405c0b:	48 8d bd 30 c6 ff ff 	lea    -0x39d0(%rbp),%rdi
  405c12:	e8 d9 c7 ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
							screen = 2;
  405c17:	c7 85 ac c5 ff ff 02 	movl   $0x2,-0x3a54(%rbp)
  405c1e:	00 00 00 
  405c21:	e9 02 f1 ff ff       	jmp    404d28 <main+0x1948>
				window.draw(text);
  405c26:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405c2b:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  405c32:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405c39:	e8 d2 c7 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
	ioctl(fd, WR_R_DISPLAY);
  405c3e:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  405c44:	be 64 61 00 00       	mov    $0x6164,%esi
  405c49:	31 c0                	xor    %eax,%eax
  405c4b:	c7 85 f0 c5 ff ff a4 	movl   $0x90f999a4,-0x3a10(%rbp)
  405c52:	99 f9 90 
  405c55:	89 df                	mov    %ebx,%edi
  405c57:	e8 c4 c6 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  405c5c:	ba 04 00 00 00       	mov    $0x4,%edx
  405c61:	48 8d b5 f0 c5 ff ff 	lea    -0x3a10(%rbp),%rsi
  405c68:	89 df                	mov    %ebx,%edi
  405c6a:	e8 71 c4 ff ff       	call   4020e0 <write@plt>
				switches = readSwitch(fd, switches);
  405c6f:	8b 85 a4 c5 ff ff    	mov    -0x3a5c(%rbp),%eax
	ioctl(fd, RD_SWITCHES);
  405c75:	be 61 61 00 00       	mov    $0x6161,%esi
  405c7a:	89 df                	mov    %ebx,%edi
  405c7c:	89 85 f4 c5 ff ff    	mov    %eax,-0x3a0c(%rbp)
  405c82:	31 c0                	xor    %eax,%eax
  405c84:	e8 97 c6 ff ff       	call   402320 <ioctl@plt>
	read(fd, &data, 3);
  405c89:	ba 03 00 00 00       	mov    $0x3,%edx
  405c8e:	48 8d b5 f4 c5 ff ff 	lea    -0x3a0c(%rbp),%rsi
  405c95:	89 df                	mov    %ebx,%edi
  405c97:	e8 b4 c6 ff ff       	call   402350 <read@plt>
	return data;
  405c9c:	8b 85 f4 c5 ff ff    	mov    -0x3a0c(%rbp),%eax
  405ca2:	89 85 a4 c5 ff ff    	mov    %eax,-0x3a5c(%rbp)
				if (switches == 0x23B6) // 9142 em hexa
  405ca8:	3d b6 23 00 00       	cmp    $0x23b6,%eax
  405cad:	0f 85 65 f1 ff ff    	jne    404e18 <main+0x1a38>
	ioctl(fd, WR_R_DISPLAY);
  405cb3:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  405cb9:	be 64 61 00 00       	mov    $0x6164,%esi
  405cbe:	31 c0                	xor    %eax,%eax
  405cc0:	c7 85 f8 c5 ff ff 00 	movl   $0x0,-0x3a08(%rbp)
  405cc7:	00 00 00 
  405cca:	89 df                	mov    %ebx,%edi
  405ccc:	e8 4f c6 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  405cd1:	ba 04 00 00 00       	mov    $0x4,%edx
  405cd6:	48 8d b5 f8 c5 ff ff 	lea    -0x3a08(%rbp),%rsi
  405cdd:	89 df                	mov    %ebx,%edi
  405cdf:	e8 fc c3 ff ff       	call   4020e0 <write@plt>
					text.setString("");
  405ce4:	4c 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%r15
  405ceb:	4c 89 ff             	mov    %r15,%rdi
  405cee:	e8 ed c7 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  405cf3:	4c 89 fa             	mov    %r15,%rdx
  405cf6:	be c4 90 40 00       	mov    $0x4090c4,%esi
  405cfb:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405d02:	e8 e9 c3 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  405d07:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  405d0e:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405d15:	e8 66 c7 ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405d1a:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  405d21:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  405d28:	48 39 df             	cmp    %rbx,%rdi
  405d2b:	74 14                	je     405d41 <main+0x2961>
  405d2d:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  405d34:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405d3b:	00 
  405d3c:	e8 ff c4 ff ff       	call   402240 <_ZdlPvm@plt>
  405d41:	4c 89 ff             	mov    %r15,%rdi
  405d44:	e8 e7 c5 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
					typedtext.insert(0, "[root@bois ~] $ Isso faz algum sentido?");
  405d49:	4c 89 ff             	mov    %r15,%rdi
  405d4c:	e8 8f c7 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  405d51:	4c 89 fa             	mov    %r15,%rdx
  405d54:	be b8 94 40 00       	mov    $0x4094b8,%esi
  405d59:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405d60:	e8 8b c3 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  405d65:	48 8d 95 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdx
  405d6c:	31 f6                	xor    %esi,%esi
  405d6e:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  405d75:	e8 36 c4 ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  405d7a:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  405d81:	48 39 df             	cmp    %rbx,%rdi
  405d84:	74 14                	je     405d9a <main+0x29ba>
  405d86:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  405d8d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405d94:	00 
  405d95:	e8 a6 c4 ff ff       	call   402240 <_ZdlPvm@plt>
  405d9a:	4c 89 ff             	mov    %r15,%rdi
  405d9d:	e8 8e c5 ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
					window.clear();
  405da2:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  405da8:	31 c9                	xor    %ecx,%ecx
  405daa:	31 d2                	xor    %edx,%edx
  405dac:	31 f6                	xor    %esi,%esi
  405dae:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  405db5:	e8 46 c3 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  405dba:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  405dc1:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405dc8:	e8 b3 c3 ff ff       	call   402180 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@plt>
					screen = 3;
  405dcd:	c7 85 ac c5 ff ff 03 	movl   $0x3,-0x3a54(%rbp)
  405dd4:	00 00 00 
  405dd7:	e9 3c f0 ff ff       	jmp    404e18 <main+0x1a38>
				window.draw(text);
  405ddc:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405de1:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  405de8:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405def:	e8 1c c6 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  405df4:	c7 85 ac c5 ff ff 06 	movl   $0x6,-0x3a54(%rbp)
  405dfb:	00 00 00 
  405dfe:	e9 15 f0 ff ff       	jmp    404e18 <main+0x1a38>
				window.draw(text);
  405e03:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405e08:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  405e0f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405e16:	e8 f5 c5 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
	ioctl(fd, RD_SWITCHES);
  405e1b:	44 8b b5 a8 c5 ff ff 	mov    -0x3a58(%rbp),%r14d
  405e22:	8b 9d a4 c5 ff ff    	mov    -0x3a5c(%rbp),%ebx
  405e28:	be 61 61 00 00       	mov    $0x6161,%esi
  405e2d:	31 c0                	xor    %eax,%eax
  405e2f:	44 89 f7             	mov    %r14d,%edi
  405e32:	89 9d 08 c6 ff ff    	mov    %ebx,-0x39f8(%rbp)
  405e38:	e8 e3 c4 ff ff       	call   402320 <ioctl@plt>
	read(fd, &data, 3);
  405e3d:	ba 03 00 00 00       	mov    $0x3,%edx
  405e42:	48 8d b5 08 c6 ff ff 	lea    -0x39f8(%rbp),%rsi
  405e49:	44 89 f7             	mov    %r14d,%edi
  405e4c:	e8 ff c4 ff ff       	call   402350 <read@plt>
	return data;
  405e51:	8b 85 08 c6 ff ff    	mov    -0x39f8(%rbp),%eax
  405e57:	89 85 c0 c5 ff ff    	mov    %eax,-0x3a40(%rbp)
				if(mask != 0){
  405e5d:	39 c3                	cmp    %eax,%ebx
  405e5f:	0f 85 69 0e 00 00    	jne    406cce <main+0x38ee>
				if(currMatrix[0] == 1) window.draw(greenSquare1);
  405e65:	83 bd 80 c7 ff ff 01 	cmpl   $0x1,-0x3880(%rbp)
  405e6c:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405e71:	0f 84 f1 12 00 00    	je     407168 <main+0x3d88>
				else window.draw(redSquare1);
  405e77:	48 8d b5 30 cc ff ff 	lea    -0x33d0(%rbp),%rsi
  405e7e:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405e85:	e8 86 c5 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[3] == 1) window.draw(greenSquare2);
  405e8a:	83 bd 8c c7 ff ff 01 	cmpl   $0x1,-0x3874(%rbp)
  405e91:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405e96:	0f 84 1d 15 00 00    	je     4073b9 <main+0x3fd9>
				else window.draw(redSquare2);
  405e9c:	48 8d b5 f0 ce ff ff 	lea    -0x3110(%rbp),%rsi
  405ea3:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405eaa:	e8 61 c5 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[6] == 1) window.draw(greenSquare3);
  405eaf:	83 bd 98 c7 ff ff 01 	cmpl   $0x1,-0x3868(%rbp)
  405eb6:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405ebb:	0f 84 e0 14 00 00    	je     4073a1 <main+0x3fc1>
				else window.draw(redSquare3);
  405ec1:	48 8d b5 b0 d1 ff ff 	lea    -0x2e50(%rbp),%rsi
  405ec8:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405ecf:	e8 3c c5 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[9] == 1) window.draw(greenSquare4);
  405ed4:	83 bd a4 c7 ff ff 01 	cmpl   $0x1,-0x385c(%rbp)
  405edb:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405ee0:	0f 84 a3 14 00 00    	je     407389 <main+0x3fa9>
				else window.draw(redSquare4);
  405ee6:	48 8d b5 70 d4 ff ff 	lea    -0x2b90(%rbp),%rsi
  405eed:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405ef4:	e8 17 c5 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[12] == 1) window.draw(greenSquare5);
  405ef9:	83 bd b0 c7 ff ff 01 	cmpl   $0x1,-0x3850(%rbp)
  405f00:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405f05:	0f 84 66 14 00 00    	je     407371 <main+0x3f91>
				else window.draw(redSquare5);
  405f0b:	48 8d b5 30 d7 ff ff 	lea    -0x28d0(%rbp),%rsi
  405f12:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405f19:	e8 f2 c4 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[15] == 1) window.draw(greenSquare6);
  405f1e:	83 bd bc c7 ff ff 01 	cmpl   $0x1,-0x3844(%rbp)
  405f25:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405f2a:	0f 84 29 14 00 00    	je     407359 <main+0x3f79>
				else window.draw(redSquare6);
  405f30:	48 8d b5 f0 d9 ff ff 	lea    -0x2610(%rbp),%rsi
  405f37:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405f3e:	e8 cd c4 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[1] == 1) window.draw(greenSquare7);
  405f43:	83 bd 84 c7 ff ff 01 	cmpl   $0x1,-0x387c(%rbp)
  405f4a:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405f4f:	0f 84 ec 13 00 00    	je     407341 <main+0x3f61>
				else window.draw(redSquare7);
  405f55:	48 8d b5 b0 dc ff ff 	lea    -0x2350(%rbp),%rsi
  405f5c:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405f63:	e8 a8 c4 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[4] == 1) window.draw(greenSquare8);
  405f68:	83 bd 90 c7 ff ff 01 	cmpl   $0x1,-0x3870(%rbp)
  405f6f:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405f74:	0f 84 af 13 00 00    	je     407329 <main+0x3f49>
				else window.draw(redSquare8);
  405f7a:	48 8d b5 70 df ff ff 	lea    -0x2090(%rbp),%rsi
  405f81:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405f88:	e8 83 c4 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[7] == 1) window.draw(greenSquare9);
  405f8d:	83 bd 9c c7 ff ff 01 	cmpl   $0x1,-0x3864(%rbp)
  405f94:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405f99:	0f 84 72 13 00 00    	je     407311 <main+0x3f31>
				else window.draw(redSquare9);
  405f9f:	48 8d b5 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rsi
  405fa6:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405fad:	e8 5e c4 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[10] == 1) window.draw(greenSquare10);
  405fb2:	83 bd a8 c7 ff ff 01 	cmpl   $0x1,-0x3858(%rbp)
  405fb9:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405fbe:	0f 84 35 13 00 00    	je     4072f9 <main+0x3f19>
				else window.draw(redSquare10);
  405fc4:	48 8d b5 f0 e4 ff ff 	lea    -0x1b10(%rbp),%rsi
  405fcb:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405fd2:	e8 39 c4 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[13] == 1) window.draw(greenSquare11);
  405fd7:	83 bd b4 c7 ff ff 01 	cmpl   $0x1,-0x384c(%rbp)
  405fde:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  405fe3:	0f 84 f8 12 00 00    	je     4072e1 <main+0x3f01>
				else window.draw(redSquare11);
  405fe9:	48 8d b5 b0 e7 ff ff 	lea    -0x1850(%rbp),%rsi
  405ff0:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405ff7:	e8 14 c4 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[16] == 1) window.draw(greenSquare12);
  405ffc:	83 bd c0 c7 ff ff 01 	cmpl   $0x1,-0x3840(%rbp)
  406003:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  406008:	0f 84 bb 12 00 00    	je     4072c9 <main+0x3ee9>
				else window.draw(redSquare12);
  40600e:	48 8d b5 70 ea ff ff 	lea    -0x1590(%rbp),%rsi
  406015:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40601c:	e8 ef c3 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[2] == 1) window.draw(greenSquare13);
  406021:	83 bd 88 c7 ff ff 01 	cmpl   $0x1,-0x3878(%rbp)
  406028:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  40602d:	0f 84 7e 12 00 00    	je     4072b1 <main+0x3ed1>
				else window.draw(redSquare13);
  406033:	48 8d b5 30 ed ff ff 	lea    -0x12d0(%rbp),%rsi
  40603a:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406041:	e8 ca c3 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[5] == 1) window.draw(greenSquare14);
  406046:	83 bd 94 c7 ff ff 01 	cmpl   $0x1,-0x386c(%rbp)
  40604d:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  406052:	0f 84 41 12 00 00    	je     407299 <main+0x3eb9>
				else window.draw(redSquare14);
  406058:	48 8d b5 f0 ef ff ff 	lea    -0x1010(%rbp),%rsi
  40605f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406066:	e8 a5 c3 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[8] == 1) window.draw(greenSquare15);
  40606b:	83 bd a0 c7 ff ff 01 	cmpl   $0x1,-0x3860(%rbp)
  406072:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  406077:	0f 84 04 12 00 00    	je     407281 <main+0x3ea1>
				else window.draw(redSquare15);
  40607d:	48 8d b5 b0 f2 ff ff 	lea    -0xd50(%rbp),%rsi
  406084:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40608b:	e8 80 c3 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[11] == 1) window.draw(greenSquare16);
  406090:	83 bd ac c7 ff ff 01 	cmpl   $0x1,-0x3854(%rbp)
  406097:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  40609c:	0f 84 c7 11 00 00    	je     407269 <main+0x3e89>
				else window.draw(redSquare16);
  4060a2:	48 8d b5 70 f5 ff ff 	lea    -0xa90(%rbp),%rsi
  4060a9:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4060b0:	e8 5b c3 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[14] == 1) window.draw(greenSquare17);
  4060b5:	83 bd b8 c7 ff ff 01 	cmpl   $0x1,-0x3848(%rbp)
  4060bc:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4060c1:	0f 84 8a 11 00 00    	je     407251 <main+0x3e71>
				else window.draw(redSquare17);
  4060c7:	48 8d b5 30 f8 ff ff 	lea    -0x7d0(%rbp),%rsi
  4060ce:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4060d5:	e8 36 c3 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[17] == 1) window.draw(greenSquare18);
  4060da:	83 bd c4 c7 ff ff 01 	cmpl   $0x1,-0x383c(%rbp)
  4060e1:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4060e6:	0f 84 4d 11 00 00    	je     407239 <main+0x3e59>
				else window.draw(redSquare18);
  4060ec:	48 8d b5 f0 fa ff ff 	lea    -0x510(%rbp),%rsi
  4060f3:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4060fa:	e8 11 c3 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				redLeds %= 0x40000;
  4060ff:	81 a5 a0 c5 ff ff ff 	andl   $0x3ffff,-0x3a60(%rbp)
  406106:	ff 03 00 
  406109:	8b 85 a0 c5 ff ff    	mov    -0x3a60(%rbp),%eax
				if (redLeds == 0x3FFFF){ // All on
  40610f:	3d ff ff 03 00       	cmp    $0x3ffff,%eax
  406114:	0f 84 b7 12 00 00    	je     4073d1 <main+0x3ff1>
				for(int i = 0; i < 6; i++){
  40611a:	4c 8d a5 8c c7 ff ff 	lea    -0x3874(%rbp),%r12
  406121:	4c 8d b5 d4 c7 ff ff 	lea    -0x382c(%rbp),%r14
  406128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40612f:	00 
					for(int j = 0; j < 3; j++){
  406130:	49 8d 5c 24 f4       	lea    -0xc(%r12),%rbx
						printf("%d ", currMatrix[3*i + j]);
  406135:	8b 33                	mov    (%rbx),%esi
  406137:	bf ae 90 40 00       	mov    $0x4090ae,%edi
  40613c:	31 c0                	xor    %eax,%eax
  40613e:	e8 fd be ff ff       	call   402040 <printf@plt>
					for(int j = 0; j < 3; j++){
  406143:	48 83 c3 04          	add    $0x4,%rbx
  406147:	49 39 dc             	cmp    %rbx,%r12
  40614a:	75 e9                	jne    406135 <main+0x2d55>
					printf("\n");
  40614c:	bf 0a 00 00 00       	mov    $0xa,%edi
  406151:	e8 ba c1 ff ff       	call   402310 <putchar@plt>
				for(int i = 0; i < 6; i++){
  406156:	49 83 c4 0c          	add    $0xc,%r12
  40615a:	4d 39 e6             	cmp    %r12,%r14
  40615d:	75 d1                	jne    406130 <main+0x2d50>
	return data;
  40615f:	8b 85 c0 c5 ff ff    	mov    -0x3a40(%rbp),%eax
  406165:	89 85 a4 c5 ff ff    	mov    %eax,-0x3a5c(%rbp)
  40616b:	e9 a8 ec ff ff       	jmp    404e18 <main+0x1a38>
				window.draw(text);
  406170:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  406175:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  40617c:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406183:	e8 88 c2 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare1);
  406188:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  40618d:	48 8d b5 d0 ca ff ff 	lea    -0x3530(%rbp),%rsi
  406194:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40619b:	e8 70 c2 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare2);
  4061a0:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4061a5:	48 8d b5 90 cd ff ff 	lea    -0x3270(%rbp),%rsi
  4061ac:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4061b3:	e8 58 c2 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare3);
  4061b8:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4061bd:	48 8d b5 b0 d1 ff ff 	lea    -0x2e50(%rbp),%rsi
  4061c4:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4061cb:	e8 40 c2 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare4);
  4061d0:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4061d5:	48 8d b5 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rsi
  4061dc:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4061e3:	e8 28 c2 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare5);
  4061e8:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4061ed:	48 8d b5 30 d7 ff ff 	lea    -0x28d0(%rbp),%rsi
  4061f4:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4061fb:	e8 10 c2 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare6);
  406200:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  406205:	48 8d b5 90 d8 ff ff 	lea    -0x2770(%rbp),%rsi
  40620c:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406213:	e8 f8 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare7);
  406218:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  40621d:	48 8d b5 b0 dc ff ff 	lea    -0x2350(%rbp),%rsi
  406224:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40622b:	e8 e0 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare8);
  406230:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  406235:	48 8d b5 10 de ff ff 	lea    -0x21f0(%rbp),%rsi
  40623c:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406243:	e8 c8 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare9);
  406248:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  40624d:	48 8d b5 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rsi
  406254:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40625b:	e8 b0 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare10);
  406260:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  406265:	48 8d b5 90 e3 ff ff 	lea    -0x1c70(%rbp),%rsi
  40626c:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406273:	e8 98 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare11);
  406278:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  40627d:	48 8d b5 50 e6 ff ff 	lea    -0x19b0(%rbp),%rsi
  406284:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40628b:	e8 80 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare12);
  406290:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  406295:	48 8d b5 10 e9 ff ff 	lea    -0x16f0(%rbp),%rsi
  40629c:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4062a3:	e8 68 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare13);
  4062a8:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4062ad:	48 8d b5 d0 eb ff ff 	lea    -0x1430(%rbp),%rsi
  4062b4:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4062bb:	e8 50 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare14);
  4062c0:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4062c5:	48 8d b5 f0 ef ff ff 	lea    -0x1010(%rbp),%rsi
  4062cc:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4062d3:	e8 38 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare15);
  4062d8:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4062dd:	48 8d b5 50 f1 ff ff 	lea    -0xeb0(%rbp),%rsi
  4062e4:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4062eb:	e8 20 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare16);
  4062f0:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4062f5:	48 8d b5 70 f5 ff ff 	lea    -0xa90(%rbp),%rsi
  4062fc:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406303:	e8 08 c1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare17);
  406308:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  40630d:	48 8d b5 d0 f6 ff ff 	lea    -0x930(%rbp),%rsi
  406314:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40631b:	e8 f0 c0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare18);
  406320:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  406325:	48 8d b5 f0 fa ff ff 	lea    -0x510(%rbp),%rsi
  40632c:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406333:	e8 d8 c0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				switches = readSwitch(fd, switches);
  406338:	8b 85 a4 c5 ff ff    	mov    -0x3a5c(%rbp),%eax
	ioctl(fd, RD_SWITCHES);
  40633e:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  406344:	be 61 61 00 00       	mov    $0x6161,%esi
  406349:	89 85 fc c5 ff ff    	mov    %eax,-0x3a04(%rbp)
  40634f:	89 df                	mov    %ebx,%edi
  406351:	31 c0                	xor    %eax,%eax
  406353:	e8 c8 bf ff ff       	call   402320 <ioctl@plt>
	read(fd, &data, 3);
  406358:	ba 03 00 00 00       	mov    $0x3,%edx
  40635d:	48 8d b5 fc c5 ff ff 	lea    -0x3a04(%rbp),%rsi
  406364:	89 df                	mov    %ebx,%edi
  406366:	e8 e5 bf ff ff       	call   402350 <read@plt>
	return data;
  40636b:	44 8b b5 fc c5 ff ff 	mov    -0x3a04(%rbp),%r14d
	ioctl(fd, WR_RED_LEDS);
  406372:	be 65 61 00 00       	mov    $0x6165,%esi
  406377:	89 df                	mov    %ebx,%edi
  406379:	31 c0                	xor    %eax,%eax
	return data;
  40637b:	44 89 b5 a4 c5 ff ff 	mov    %r14d,-0x3a5c(%rbp)
				writeRedLed(fd, switches);
  406382:	44 89 b5 00 c6 ff ff 	mov    %r14d,-0x3a00(%rbp)
	ioctl(fd, WR_RED_LEDS);
  406389:	e8 92 bf ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  40638e:	ba 04 00 00 00       	mov    $0x4,%edx
  406393:	48 8d b5 00 c6 ff ff 	lea    -0x3a00(%rbp),%rsi
  40639a:	89 df                	mov    %ebx,%edi
  40639c:	e8 3f bd ff ff       	call   4020e0 <write@plt>
				if(switches == 0x0AA15){
  4063a1:	41 81 fe 15 aa 00 00 	cmp    $0xaa15,%r14d
  4063a8:	0f 85 6a ea ff ff    	jne    404e18 <main+0x1a38>
					text.setString("");
  4063ae:	4c 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%r15
  4063b5:	4c 89 ff             	mov    %r15,%rdi
  4063b8:	e8 23 c1 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4063bd:	4c 89 fa             	mov    %r15,%rdx
  4063c0:	be c4 90 40 00       	mov    $0x4090c4,%esi
  4063c5:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4063cc:	e8 1f bd ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4063d1:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4063d8:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4063df:	e8 9c c0 ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  4063e4:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4063eb:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  4063f2:	48 39 df             	cmp    %rbx,%rdi
  4063f5:	74 14                	je     40640b <main+0x302b>
  4063f7:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4063fe:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406405:	00 
  406406:	e8 35 be ff ff       	call   402240 <_ZdlPvm@plt>
  40640b:	4c 89 ff             	mov    %r15,%rdi
  40640e:	e8 1d bf ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
					typedtext.insert(0, "[root@bois ~] $ Sobrecarga no sistema pode ate ser boa");
  406413:	4c 89 ff             	mov    %r15,%rdi
  406416:	e8 c5 c0 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  40641b:	4c 89 fa             	mov    %r15,%rdx
  40641e:	be e0 94 40 00       	mov    $0x4094e0,%esi
  406423:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  40642a:	e8 c1 bc ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  40642f:	48 8d 95 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdx
  406436:	31 f6                	xor    %esi,%esi
  406438:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  40643f:	e8 6c bd ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  406444:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40644b:	48 39 df             	cmp    %rbx,%rdi
  40644e:	74 14                	je     406464 <main+0x3084>
  406450:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  406457:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40645e:	00 
  40645f:	e8 dc bd ff ff       	call   402240 <_ZdlPvm@plt>
  406464:	4c 89 ff             	mov    %r15,%rdi
  406467:	e8 c4 be ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
					temp_clock.restart();
  40646c:	48 8d bd 20 c6 ff ff 	lea    -0x39e0(%rbp),%rdi
  406473:	e8 78 bf ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
	ioctl(fd, WR_RED_LEDS);
  406478:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  40647e:	be 65 61 00 00       	mov    $0x6165,%esi
  406483:	31 c0                	xor    %eax,%eax
  406485:	c7 85 04 c6 ff ff 00 	movl   $0x0,-0x39fc(%rbp)
  40648c:	00 00 00 
  40648f:	89 df                	mov    %ebx,%edi
  406491:	e8 8a be ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  406496:	ba 04 00 00 00       	mov    $0x4,%edx
  40649b:	48 8d b5 04 c6 ff ff 	lea    -0x39fc(%rbp),%rsi
  4064a2:	89 df                	mov    %ebx,%edi
  4064a4:	e8 37 bc ff ff       	call   4020e0 <write@plt>
					screen = 4;
  4064a9:	c7 85 ac c5 ff ff 04 	movl   $0x4,-0x3a54(%rbp)
  4064b0:	00 00 00 
  4064b3:	e9 60 e9 ff ff       	jmp    404e18 <main+0x1a38>
				window.draw(text);
  4064b8:	ba c0 c2 40 00       	mov    $0x40c2c0,%edx
  4064bd:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  4064c4:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4064cb:	e8 40 bf ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				int seqGreenLeds[BUTTON_AMOUNT] = {48, 12, 192, 48, 3, 48}; // 2^4+2^5, 2^2+2^3, 2^6+2^7, 2^0+2^1
  4064d0:	66 0f 6f 2d b8 32 00 	movdqa 0x32b8(%rip),%xmm5        # 409790 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x110>
  4064d7:	00 
  4064d8:	48 8b 05 89 32 00 00 	mov    0x3289(%rip),%rax        # 409768 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe8>
				temp_time = temp_clock.getElapsedTime();
  4064df:	48 8d bd 20 c6 ff ff 	lea    -0x39e0(%rbp),%rdi
				int seqGreenLeds[BUTTON_AMOUNT] = {48, 12, 192, 48, 3, 48}; // 2^4+2^5, 2^2+2^3, 2^6+2^7, 2^0+2^1
  4064e6:	48 89 85 30 c7 ff ff 	mov    %rax,-0x38d0(%rbp)
  4064ed:	0f 29 ad 20 c7 ff ff 	movaps %xmm5,-0x38e0(%rbp)
				temp_time = temp_clock.getElapsedTime();
  4064f4:	e8 c7 be ff ff       	call   4023c0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>
				if(temp_time >= sf::seconds(3.0f) && i < BUTTON_AMOUNT && flag){
  4064f9:	f3 0f 10 05 e3 32 00 	movss  0x32e3(%rip),%xmm0        # 4097e4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x164>
  406500:	00 
				temp_time = temp_clock.getElapsedTime();
  406501:	48 89 85 28 c6 ff ff 	mov    %rax,-0x39d8(%rbp)
				if(temp_time >= sf::seconds(3.0f) && i < BUTTON_AMOUNT && flag){
  406508:	e8 43 bc ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  40650d:	48 8b bd 28 c6 ff ff 	mov    -0x39d8(%rbp),%rdi
  406514:	48 89 c6             	mov    %rax,%rsi
  406517:	e8 a4 bd ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  40651c:	0f b6 95 9c c5 ff ff 	movzbl -0x3a64(%rbp),%edx
  406523:	84 c0                	test   %al,%al
  406525:	0f 85 f7 06 00 00    	jne    406c22 <main+0x3842>
				else if (i >= BUTTON_AMOUNT && flag && temp_time >= sf::seconds(3.0f)){
  40652b:	83 bd 8c c5 ff ff 05 	cmpl   $0x5,-0x3a74(%rbp)
  406532:	7e 08                	jle    40653c <main+0x315c>
  406534:	84 d2                	test   %dl,%dl
  406536:	0f 85 44 0c 00 00    	jne    407180 <main+0x3da0>
				int answer[BUTTON_AMOUNT] = {11, 13, 7, 11, 14, 11}; // 0xB, 0xD, 0x7, 0xE
  40653c:	48 8b 05 2d 32 00 00 	mov    0x322d(%rip),%rax        # 409770 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xf0>
	ioctl(fd, RD_PBUTTONS);
  406543:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  406549:	be 62 61 00 00       	mov    $0x6162,%esi
				int answer[BUTTON_AMOUNT] = {11, 13, 7, 11, 14, 11}; // 0xB, 0xD, 0x7, 0xE
  40654e:	66 0f 6f 35 4a 32 00 	movdqa 0x324a(%rip),%xmm6        # 4097a0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x120>
  406555:	00 
  406556:	48 89 85 50 c7 ff ff 	mov    %rax,-0x38b0(%rbp)
				int button = readButton(fd, button);
  40655d:	8b 85 90 c5 ff ff    	mov    -0x3a70(%rbp),%eax
	ioctl(fd, RD_PBUTTONS);
  406563:	89 df                	mov    %ebx,%edi
				int answer[BUTTON_AMOUNT] = {11, 13, 7, 11, 14, 11}; // 0xB, 0xD, 0x7, 0xE
  406565:	0f 29 b5 40 c7 ff ff 	movaps %xmm6,-0x38c0(%rbp)
  40656c:	89 85 48 c6 ff ff    	mov    %eax,-0x39b8(%rbp)
	ioctl(fd, RD_PBUTTONS);
  406572:	31 c0                	xor    %eax,%eax
  406574:	e8 a7 bd ff ff       	call   402320 <ioctl@plt>
	read(fd, &data, 1);
  406579:	48 8d 85 48 c6 ff ff 	lea    -0x39b8(%rbp),%rax
  406580:	ba 01 00 00 00       	mov    $0x1,%edx
  406585:	89 df                	mov    %ebx,%edi
  406587:	48 89 c6             	mov    %rax,%rsi
  40658a:	48 89 85 b8 c5 ff ff 	mov    %rax,-0x3a48(%rbp)
  406591:	e8 ba bd ff ff       	call   402350 <read@plt>
	return data;
  406596:	8b 8d 48 c6 ff ff    	mov    -0x39b8(%rbp),%ecx
  40659c:	89 8d 90 c5 ff ff    	mov    %ecx,-0x3a70(%rbp)
				if(button != 0xF && button != old_button && j < BUTTON_AMOUNT){
  4065a2:	83 f9 0f             	cmp    $0xf,%ecx
  4065a5:	0f 84 92 0b 00 00    	je     40713d <main+0x3d5d>
  4065ab:	39 8d 98 c5 ff ff    	cmp    %ecx,-0x3a68(%rbp)
  4065b1:	0f 84 86 0b 00 00    	je     40713d <main+0x3d5d>
  4065b7:	8b 95 94 c5 ff ff    	mov    -0x3a6c(%rbp),%edx
  4065bd:	83 fa 06             	cmp    $0x6,%edx
  4065c0:	0f 85 5e 0b 00 00    	jne    407124 <main+0x3d44>
					printf("%d %d %d %d %d %d\n", input[0], input[1], input[2], input[3], input[4], input[5]);
  4065c6:	8b 85 94 c6 ff ff    	mov    -0x396c(%rbp),%eax
  4065cc:	51                   	push   %rcx
  4065cd:	bf b2 90 40 00       	mov    $0x4090b2,%edi
  4065d2:	44 8b 8d 90 c6 ff ff 	mov    -0x3970(%rbp),%r9d
  4065d9:	44 8b 85 8c c6 ff ff 	mov    -0x3974(%rbp),%r8d
  4065e0:	8b 8d 88 c6 ff ff    	mov    -0x3978(%rbp),%ecx
  4065e6:	8b 95 84 c6 ff ff    	mov    -0x397c(%rbp),%edx
  4065ec:	50                   	push   %rax
  4065ed:	31 c0                	xor    %eax,%eax
  4065ef:	8b b5 80 c6 ff ff    	mov    -0x3980(%rbp),%esi
  4065f5:	e8 46 ba ff ff       	call   402040 <printf@plt>
  4065fa:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  406601:	58                   	pop    %rax
  406602:	4c 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%r15
  406609:	31 c0                	xor    %eax,%eax
  40660b:	5a                   	pop    %rdx
						if(answer[k] != input[k]){
  40660c:	41 8b 34 07          	mov    (%r15,%rax,1),%esi
  406610:	8b 94 05 80 c6 ff ff 	mov    -0x3980(%rbp,%rax,1),%edx
  406617:	39 d6                	cmp    %edx,%esi
  406619:	0f 85 da 0e 00 00    	jne    4074f9 <main+0x4119>
					for (int k = 0; k < BUTTON_AMOUNT; k++){
  40661f:	48 83 c0 04          	add    $0x4,%rax
  406623:	48 83 f8 18          	cmp    $0x18,%rax
  406627:	75 e3                	jne    40660c <main+0x322c>
					if(flag_correct){
  406629:	83 bd 88 c5 ff ff 00 	cmpl   $0x0,-0x3a78(%rbp)
  406630:	48 89 bd b8 c5 ff ff 	mov    %rdi,-0x3a48(%rbp)
  406637:	c7 85 94 c5 ff ff 06 	movl   $0x6,-0x3a6c(%rbp)
  40663e:	00 00 00 
  406641:	0f 84 d1 e7 ff ff    	je     404e18 <main+0x1a38>
						text.setString("");
  406647:	48 89 fb             	mov    %rdi,%rbx
  40664a:	e8 91 be ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  40664f:	48 89 da             	mov    %rbx,%rdx
  406652:	be c4 90 40 00       	mov    $0x4090c4,%esi
  406657:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  40665e:	e8 8d ba ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  406663:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40666a:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  406671:	e8 0a be ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  406676:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40667d:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  406684:	48 39 df             	cmp    %rbx,%rdi
  406687:	74 14                	je     40669d <main+0x32bd>
  406689:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  406690:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406697:	00 
  406698:	e8 a3 bb ff ff       	call   402240 <_ZdlPvm@plt>
  40669d:	4c 8b b5 b8 c5 ff ff 	mov    -0x3a48(%rbp),%r14
  4066a4:	4c 89 f7             	mov    %r14,%rdi
  4066a7:	e8 84 bc ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
						typedtext.insert(0, "[root@bois ~] $ Parabens, dessa vez nada foi pelos ares, \nquem sabe na proxima :(");
  4066ac:	4c 89 f7             	mov    %r14,%rdi
  4066af:	e8 2c be ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4066b4:	4c 89 f2             	mov    %r14,%rdx
  4066b7:	be 20 96 40 00       	mov    $0x409620,%esi
  4066bc:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4066c3:	e8 28 ba ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4066c8:	48 8d 95 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdx
  4066cf:	31 f6                	xor    %esi,%esi
  4066d1:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  4066d8:	e8 d3 ba ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  4066dd:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4066e4:	48 39 df             	cmp    %rbx,%rdi
  4066e7:	74 14                	je     4066fd <main+0x331d>
  4066e9:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4066f0:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4066f7:	00 
  4066f8:	e8 43 bb ff ff       	call   402240 <_ZdlPvm@plt>
  4066fd:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  406704:	e8 27 bc ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
						clock_text.restart();
  406709:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  406710:	e8 db bc ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  406715:	c7 85 94 c5 ff ff 06 	movl   $0x6,-0x3a6c(%rbp)
  40671c:	00 00 00 
						screen = 7;
  40671f:	c7 85 ac c5 ff ff 07 	movl   $0x7,-0x3a54(%rbp)
  406726:	00 00 00 
  406729:	e9 ea e6 ff ff       	jmp    404e18 <main+0x1a38>
  40672e:	b8 f0 bc 40 00       	mov    $0x40bcf0,%eax
      { return _M_dataplus._M_p; }
  406733:	48 8b bd 00 c7 ff ff 	mov    -0x3900(%rbp),%rdi
  40673a:	66 48 0f 6e d8       	movq   %rax,%xmm3
	if (!_M_is_local())
  40673f:	48 8d 85 10 c7 ff ff 	lea    -0x38f0(%rbp),%rax
  406746:	0f 16 1d 2b 30 00 00 	movhps 0x302b(%rip),%xmm3        # 409778 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xf8>
  40674d:	0f 29 9d c0 c5 ff ff 	movaps %xmm3,-0x3a40(%rbp)
  406754:	48 39 c7             	cmp    %rax,%rdi
  406757:	74 10                	je     406769 <main+0x3389>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406759:	48 8b 85 10 c7 ff ff 	mov    -0x38f0(%rbp),%rax
  406760:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406764:	e8 d7 ba ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406769:	48 8b bd e0 c6 ff ff 	mov    -0x3920(%rbp),%rdi
	if (!_M_is_local())
  406770:	48 8d 85 f0 c6 ff ff 	lea    -0x3910(%rbp),%rax
  406777:	48 39 c7             	cmp    %rax,%rdi
  40677a:	74 10                	je     40678c <main+0x33ac>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40677c:	48 8b 85 f0 c6 ff ff 	mov    -0x3910(%rbp),%rax
  406783:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406787:	e8 b4 ba ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40678c:	48 8b bd c0 c6 ff ff 	mov    -0x3940(%rbp),%rdi
	if (!_M_is_local())
  406793:	48 8d 85 d0 c6 ff ff 	lea    -0x3930(%rbp),%rax
  40679a:	48 39 c7             	cmp    %rax,%rdi
  40679d:	74 14                	je     4067b3 <main+0x33d3>
  40679f:	48 8b 85 d0 c6 ff ff 	mov    -0x3930(%rbp),%rax
  4067a6:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4067ad:	00 
  4067ae:	e8 8d ba ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4067b3:	48 8b bd a0 c6 ff ff 	mov    -0x3960(%rbp),%rdi
	if (!_M_is_local())
  4067ba:	48 8d 85 b0 c6 ff ff 	lea    -0x3950(%rbp),%rax
  4067c1:	48 39 c7             	cmp    %rax,%rdi
  4067c4:	74 14                	je     4067da <main+0x33fa>
  4067c6:	48 8b 85 b0 c6 ff ff 	mov    -0x3950(%rbp),%rax
  4067cd:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4067d4:	00 
  4067d5:	e8 66 ba ff ff       	call   402240 <_ZdlPvm@plt>
}
  4067da:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  4067e1:	e8 7a bb ff ff       	call   402360 <_ZN2sf5MusicD1Ev@plt>
  4067e6:	48 8d bd 30 c9 ff ff 	lea    -0x36d0(%rbp),%rdi
  4067ed:	e8 6e bb ff ff       	call   402360 <_ZN2sf5MusicD1Ev@plt>
  4067f2:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  4067f9:	e8 62 bb ff ff       	call   402360 <_ZN2sf5MusicD1Ev@plt>
  4067fe:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  406805:	e8 c6 23 00 00       	call   408bd0 <_ZN2sf4TextD1Ev>
  40680a:	48 8d bd d0 c7 ff ff 	lea    -0x3830(%rbp),%rdi
  406811:	e8 5a ba ff ff       	call   402270 <_ZN2sf4FontD1Ev@plt>
  406816:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  40681d:	ff 
  40681e:	48 8d bd f0 fa ff ff 	lea    -0x510(%rbp),%rdi
  406825:	0f 29 95 f0 fa ff ff 	movaps %xmm2,-0x510(%rbp)
  40682c:	e8 2f b8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406831:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406838:	ff 
  406839:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  406840:	0f 29 95 90 f9 ff ff 	movaps %xmm2,-0x670(%rbp)
  406847:	e8 14 b8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40684c:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406853:	ff 
  406854:	48 8d bd 30 f8 ff ff 	lea    -0x7d0(%rbp),%rdi
  40685b:	0f 29 95 30 f8 ff ff 	movaps %xmm2,-0x7d0(%rbp)
  406862:	e8 f9 b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406867:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  40686e:	ff 
  40686f:	48 8d bd d0 f6 ff ff 	lea    -0x930(%rbp),%rdi
  406876:	0f 29 95 d0 f6 ff ff 	movaps %xmm2,-0x930(%rbp)
  40687d:	e8 de b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406882:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406889:	ff 
  40688a:	48 8d bd 70 f5 ff ff 	lea    -0xa90(%rbp),%rdi
  406891:	0f 29 95 70 f5 ff ff 	movaps %xmm2,-0xa90(%rbp)
  406898:	e8 c3 b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40689d:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  4068a4:	ff 
  4068a5:	48 8d bd 10 f4 ff ff 	lea    -0xbf0(%rbp),%rdi
  4068ac:	0f 29 95 10 f4 ff ff 	movaps %xmm2,-0xbf0(%rbp)
  4068b3:	e8 a8 b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4068b8:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  4068bf:	ff 
  4068c0:	48 8d bd b0 f2 ff ff 	lea    -0xd50(%rbp),%rdi
  4068c7:	0f 29 95 b0 f2 ff ff 	movaps %xmm2,-0xd50(%rbp)
  4068ce:	e8 8d b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4068d3:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  4068da:	ff 
  4068db:	48 8d bd 50 f1 ff ff 	lea    -0xeb0(%rbp),%rdi
  4068e2:	0f 29 95 50 f1 ff ff 	movaps %xmm2,-0xeb0(%rbp)
  4068e9:	e8 72 b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4068ee:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  4068f5:	ff 
  4068f6:	48 8d bd f0 ef ff ff 	lea    -0x1010(%rbp),%rdi
  4068fd:	0f 29 95 f0 ef ff ff 	movaps %xmm2,-0x1010(%rbp)
  406904:	e8 57 b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406909:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406910:	ff 
  406911:	48 8d bd 90 ee ff ff 	lea    -0x1170(%rbp),%rdi
  406918:	0f 29 95 90 ee ff ff 	movaps %xmm2,-0x1170(%rbp)
  40691f:	e8 3c b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406924:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  40692b:	ff 
  40692c:	48 8d bd 30 ed ff ff 	lea    -0x12d0(%rbp),%rdi
  406933:	0f 29 95 30 ed ff ff 	movaps %xmm2,-0x12d0(%rbp)
  40693a:	e8 21 b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40693f:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406946:	ff 
  406947:	48 8d bd d0 eb ff ff 	lea    -0x1430(%rbp),%rdi
  40694e:	0f 29 95 d0 eb ff ff 	movaps %xmm2,-0x1430(%rbp)
  406955:	e8 06 b7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40695a:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406961:	ff 
  406962:	48 8d bd 70 ea ff ff 	lea    -0x1590(%rbp),%rdi
  406969:	0f 29 95 70 ea ff ff 	movaps %xmm2,-0x1590(%rbp)
  406970:	e8 eb b6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406975:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  40697c:	ff 
  40697d:	48 8d bd 10 e9 ff ff 	lea    -0x16f0(%rbp),%rdi
  406984:	0f 29 95 10 e9 ff ff 	movaps %xmm2,-0x16f0(%rbp)
  40698b:	e8 d0 b6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406990:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406997:	ff 
  406998:	48 8d bd b0 e7 ff ff 	lea    -0x1850(%rbp),%rdi
  40699f:	0f 29 95 b0 e7 ff ff 	movaps %xmm2,-0x1850(%rbp)
  4069a6:	e8 b5 b6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4069ab:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  4069b2:	ff 
  4069b3:	48 8d bd 50 e6 ff ff 	lea    -0x19b0(%rbp),%rdi
  4069ba:	0f 29 95 50 e6 ff ff 	movaps %xmm2,-0x19b0(%rbp)
  4069c1:	e8 9a b6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4069c6:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  4069cd:	ff 
  4069ce:	48 8d bd f0 e4 ff ff 	lea    -0x1b10(%rbp),%rdi
  4069d5:	0f 29 95 f0 e4 ff ff 	movaps %xmm2,-0x1b10(%rbp)
  4069dc:	e8 7f b6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4069e1:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  4069e8:	ff 
  4069e9:	48 8d bd 90 e3 ff ff 	lea    -0x1c70(%rbp),%rdi
  4069f0:	0f 29 95 90 e3 ff ff 	movaps %xmm2,-0x1c70(%rbp)
  4069f7:	e8 64 b6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4069fc:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406a03:	ff 
  406a04:	48 8d bd 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rdi
  406a0b:	0f 29 95 30 e2 ff ff 	movaps %xmm2,-0x1dd0(%rbp)
  406a12:	e8 49 b6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406a17:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406a1e:	ff 
  406a1f:	48 8d bd d0 e0 ff ff 	lea    -0x1f30(%rbp),%rdi
  406a26:	0f 29 95 d0 e0 ff ff 	movaps %xmm2,-0x1f30(%rbp)
  406a2d:	e8 2e b6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406a32:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406a39:	ff 
  406a3a:	48 8d bd 70 df ff ff 	lea    -0x2090(%rbp),%rdi
  406a41:	0f 29 95 70 df ff ff 	movaps %xmm2,-0x2090(%rbp)
  406a48:	e8 13 b6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406a4d:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406a54:	ff 
  406a55:	48 8d bd 10 de ff ff 	lea    -0x21f0(%rbp),%rdi
  406a5c:	0f 29 95 10 de ff ff 	movaps %xmm2,-0x21f0(%rbp)
  406a63:	e8 f8 b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406a68:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406a6f:	ff 
  406a70:	48 8d bd b0 dc ff ff 	lea    -0x2350(%rbp),%rdi
  406a77:	0f 29 95 b0 dc ff ff 	movaps %xmm2,-0x2350(%rbp)
  406a7e:	e8 dd b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406a83:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406a8a:	ff 
  406a8b:	48 8d bd 50 db ff ff 	lea    -0x24b0(%rbp),%rdi
  406a92:	0f 29 95 50 db ff ff 	movaps %xmm2,-0x24b0(%rbp)
  406a99:	e8 c2 b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406a9e:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406aa5:	ff 
  406aa6:	48 8d bd f0 d9 ff ff 	lea    -0x2610(%rbp),%rdi
  406aad:	0f 29 95 f0 d9 ff ff 	movaps %xmm2,-0x2610(%rbp)
  406ab4:	e8 a7 b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406ab9:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406ac0:	ff 
  406ac1:	48 8d bd 90 d8 ff ff 	lea    -0x2770(%rbp),%rdi
  406ac8:	0f 29 95 90 d8 ff ff 	movaps %xmm2,-0x2770(%rbp)
  406acf:	e8 8c b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406ad4:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406adb:	ff 
  406adc:	48 8d bd 30 d7 ff ff 	lea    -0x28d0(%rbp),%rdi
  406ae3:	0f 29 95 30 d7 ff ff 	movaps %xmm2,-0x28d0(%rbp)
  406aea:	e8 71 b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406aef:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406af6:	ff 
  406af7:	48 8d bd d0 d5 ff ff 	lea    -0x2a30(%rbp),%rdi
  406afe:	0f 29 95 d0 d5 ff ff 	movaps %xmm2,-0x2a30(%rbp)
  406b05:	e8 56 b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406b0a:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406b11:	ff 
  406b12:	48 8d bd 70 d4 ff ff 	lea    -0x2b90(%rbp),%rdi
  406b19:	0f 29 95 70 d4 ff ff 	movaps %xmm2,-0x2b90(%rbp)
  406b20:	e8 3b b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406b25:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406b2c:	ff 
  406b2d:	48 8d bd 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rdi
  406b34:	0f 29 95 10 d3 ff ff 	movaps %xmm2,-0x2cf0(%rbp)
  406b3b:	e8 20 b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406b40:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406b47:	ff 
  406b48:	48 8d bd b0 d1 ff ff 	lea    -0x2e50(%rbp),%rdi
  406b4f:	0f 29 95 b0 d1 ff ff 	movaps %xmm2,-0x2e50(%rbp)
  406b56:	e8 05 b5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406b5b:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406b62:	ff 
  406b63:	48 8d bd 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rdi
  406b6a:	0f 29 95 50 d0 ff ff 	movaps %xmm2,-0x2fb0(%rbp)
  406b71:	e8 ea b4 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406b76:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406b7d:	ff 
  406b7e:	48 8d bd f0 ce ff ff 	lea    -0x3110(%rbp),%rdi
  406b85:	0f 29 95 f0 ce ff ff 	movaps %xmm2,-0x3110(%rbp)
  406b8c:	e8 cf b4 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406b91:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406b98:	ff 
  406b99:	48 8d bd 90 cd ff ff 	lea    -0x3270(%rbp),%rdi
  406ba0:	0f 29 95 90 cd ff ff 	movaps %xmm2,-0x3270(%rbp)
  406ba7:	e8 b4 b4 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406bac:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406bb3:	ff 
  406bb4:	48 8d bd 30 cc ff ff 	lea    -0x33d0(%rbp),%rdi
  406bbb:	0f 29 95 30 cc ff ff 	movaps %xmm2,-0x33d0(%rbp)
  406bc2:	e8 99 b4 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406bc7:	66 0f 6f 95 c0 c5 ff 	movdqa -0x3a40(%rbp),%xmm2
  406bce:	ff 
  406bcf:	48 8d bd d0 ca ff ff 	lea    -0x3530(%rbp),%rdi
  406bd6:	0f 29 95 d0 ca ff ff 	movaps %xmm2,-0x3530(%rbp)
  406bdd:	e8 7e b4 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406be2:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  406be9:	e8 72 b8 ff ff       	call   402460 <_ZN2sf12RenderWindowD1Ev@plt>
  406bee:	31 c0                	xor    %eax,%eax
  406bf0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
  406bf4:	5b                   	pop    %rbx
  406bf5:	41 5c                	pop    %r12
  406bf7:	41 5d                	pop    %r13
  406bf9:	41 5e                	pop    %r14
  406bfb:	41 5f                	pop    %r15
  406bfd:	5d                   	pop    %rbp
  406bfe:	c3                   	ret    
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    {
      if (!__s)
	__out.setstate(ios_base::badbit);
      else
	__ostream_insert(__out, __s,
  406bff:	ba 1e 00 00 00       	mov    $0x1e,%edx
  406c04:	be 70 92 40 00       	mov    $0x409270,%esi
  406c09:	bf 40 c3 40 00       	mov    $0x40c340,%edi
  406c0e:	e8 6d b6 ff ff       	call   402280 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
	return __pf(*this);
  406c13:	bf 40 c3 40 00       	mov    $0x40c340,%edi
  406c18:	e8 13 11 00 00       	call   407d30 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0>
  406c1d:	e9 4a d9 ff ff       	jmp    40456c <main+0x118c>
				if(temp_time >= sf::seconds(3.0f) && i < BUTTON_AMOUNT && flag){
  406c22:	8b 9d 8c c5 ff ff    	mov    -0x3a74(%rbp),%ebx
  406c28:	83 fb 05             	cmp    $0x5,%ebx
  406c2b:	0f 8f 03 f9 ff ff    	jg     406534 <main+0x3154>
  406c31:	84 d2                	test   %dl,%dl
  406c33:	0f 84 f2 f8 ff ff    	je     40652b <main+0x314b>
					temp_clock.restart();
  406c39:	48 8d bd 20 c6 ff ff 	lea    -0x39e0(%rbp),%rdi
  406c40:	e8 ab b7 ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
					writeGreenLed(fd, seqGreenLeds[i]);
  406c45:	48 63 c3             	movslq %ebx,%rax
	ioctl(fd, WR_GREEN_LEDS);
  406c48:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  406c4e:	be 66 61 00 00       	mov    $0x6166,%esi
  406c53:	8b 84 85 20 c7 ff ff 	mov    -0x38e0(%rbp,%rax,4),%eax
  406c5a:	89 df                	mov    %ebx,%edi
  406c5c:	89 85 40 c6 ff ff    	mov    %eax,-0x39c0(%rbp)
  406c62:	31 c0                	xor    %eax,%eax
  406c64:	e8 b7 b6 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  406c69:	ba 04 00 00 00       	mov    $0x4,%edx
  406c6e:	48 8d b5 40 c6 ff ff 	lea    -0x39c0(%rbp),%rsi
  406c75:	89 df                	mov    %ebx,%edi
  406c77:	e8 64 b4 ff ff       	call   4020e0 <write@plt>
					i++;
  406c7c:	83 85 8c c5 ff ff 01 	addl   $0x1,-0x3a74(%rbp)
  406c83:	e9 b4 f8 ff ff       	jmp    40653c <main+0x315c>
	__ostream_insert(__out, __s,
  406c88:	ba 1e 00 00 00       	mov    $0x1e,%edx
  406c8d:	be 70 92 40 00       	mov    $0x409270,%esi
  406c92:	bf 40 c3 40 00       	mov    $0x40c340,%edi
  406c97:	e8 e4 b5 ff ff       	call   402280 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
	return __pf(*this);
  406c9c:	bf 40 c3 40 00       	mov    $0x40c340,%edi
  406ca1:	e8 8a 10 00 00       	call   407d30 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0>
  406ca6:	e9 5d d8 ff ff       	jmp    404508 <main+0x1128>
	__ostream_insert(__out, __s,
  406cab:	ba 1e 00 00 00       	mov    $0x1e,%edx
  406cb0:	be 70 92 40 00       	mov    $0x409270,%esi
  406cb5:	bf 40 c3 40 00       	mov    $0x40c340,%edi
  406cba:	e8 c1 b5 ff ff       	call   402280 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
	return __pf(*this);
  406cbf:	bf 40 c3 40 00       	mov    $0x40c340,%edi
  406cc4:	e8 67 10 00 00       	call   407d30 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0>
  406cc9:	e9 dd d7 ff ff       	jmp    4044ab <main+0x10cb>
				unsigned int mask = switches ^ oldSwitches;
  406cce:	31 c3                	xor    %eax,%ebx
  406cd0:	89 d8                	mov    %ebx,%eax
							if (temp == 1){
  406cd2:	a8 01                	test   $0x1,%al
  406cd4:	74 23                	je     406cf9 <main+0x3919>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406cd6:	f3 0f 7e 85 c0 c7 ff 	movq   -0x3840(%rbp),%xmm0
  406cdd:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406cde:	83 b5 b8 c7 ff ff 01 	xorl   $0x1,-0x3848(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406ce5:	f3 0f 7e 0d 73 2a 00 	movq   0x2a73(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406cec:	00 
  406ced:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406cf1:	66 0f d6 85 c0 c7 ff 	movq   %xmm0,-0x3840(%rbp)
  406cf8:	ff 
							if (temp == 1){
  406cf9:	a8 02                	test   $0x2,%al
  406cfb:	74 2a                	je     406d27 <main+0x3947>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406cfd:	f3 0f 7e 85 bc c7 ff 	movq   -0x3844(%rbp),%xmm0
  406d04:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406d05:	83 b5 b4 c7 ff ff 01 	xorl   $0x1,-0x384c(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406d0c:	f3 0f 7e 0d 4c 2a 00 	movq   0x2a4c(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406d13:	00 
									currMatrix[i * 3 + (j + 1)] ^= 1;
  406d14:	83 b5 c4 c7 ff ff 01 	xorl   $0x1,-0x383c(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406d1b:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406d1f:	66 0f d6 85 bc c7 ff 	movq   %xmm0,-0x3844(%rbp)
  406d26:	ff 
							mask = mask >> 1;
  406d27:	89 c1                	mov    %eax,%ecx
  406d29:	c1 e9 03             	shr    $0x3,%ecx
							if (temp == 1){
  406d2c:	a8 04                	test   $0x4,%al
  406d2e:	74 23                	je     406d53 <main+0x3973>
								currMatrix[i*3 + j] ^= 1;
  406d30:	f3 0f 7e 85 bc c7 ff 	movq   -0x3844(%rbp),%xmm0
  406d37:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406d38:	83 b5 b0 c7 ff ff 01 	xorl   $0x1,-0x3850(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406d3f:	f3 0f 7e 0d 19 2a 00 	movq   0x2a19(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406d46:	00 
  406d47:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406d4b:	66 0f d6 85 bc c7 ff 	movq   %xmm0,-0x3844(%rbp)
  406d52:	ff 
							if (temp == 1){
  406d53:	f6 c1 01             	test   $0x1,%cl
  406d56:	74 2a                	je     406d82 <main+0x39a2>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406d58:	f3 0f 7e 85 b4 c7 ff 	movq   -0x384c(%rbp),%xmm0
  406d5f:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406d60:	83 b5 ac c7 ff ff 01 	xorl   $0x1,-0x3854(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406d67:	f3 0f 7e 0d f1 29 00 	movq   0x29f1(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406d6e:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406d6f:	83 b5 c4 c7 ff ff 01 	xorl   $0x1,-0x383c(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406d76:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406d7a:	66 0f d6 85 b4 c7 ff 	movq   %xmm0,-0x384c(%rbp)
  406d81:	ff 
							if (temp == 1){
  406d82:	f6 c1 02             	test   $0x2,%cl
  406d85:	74 31                	je     406db8 <main+0x39d8>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406d87:	f3 0f 7e 85 b0 c7 ff 	movq   -0x3850(%rbp),%xmm0
  406d8e:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406d8f:	83 b5 a8 c7 ff ff 01 	xorl   $0x1,-0x3858(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406d96:	f3 0f 7e 0d c2 29 00 	movq   0x29c2(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406d9d:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406d9e:	83 b5 c0 c7 ff ff 01 	xorl   $0x1,-0x3840(%rbp)
									currMatrix[i * 3 + (j + 1)] ^= 1;
  406da5:	83 b5 b8 c7 ff ff 01 	xorl   $0x1,-0x3848(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406dac:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406db0:	66 0f d6 85 b0 c7 ff 	movq   %xmm0,-0x3850(%rbp)
  406db7:	ff 
							mask = mask >> 1;
  406db8:	89 c2                	mov    %eax,%edx
  406dba:	c1 ea 06             	shr    $0x6,%edx
							if (temp == 1){
  406dbd:	80 e1 04             	and    $0x4,%cl
  406dc0:	74 2a                	je     406dec <main+0x3a0c>
								currMatrix[i*3 + j] ^= 1;
  406dc2:	f3 0f 7e 85 b0 c7 ff 	movq   -0x3850(%rbp),%xmm0
  406dc9:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406dca:	83 b5 a4 c7 ff ff 01 	xorl   $0x1,-0x385c(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406dd1:	f3 0f 7e 0d 87 29 00 	movq   0x2987(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406dd8:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406dd9:	83 b5 bc c7 ff ff 01 	xorl   $0x1,-0x3844(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406de0:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406de4:	66 0f d6 85 b0 c7 ff 	movq   %xmm0,-0x3850(%rbp)
  406deb:	ff 
							if (temp == 1){
  406dec:	f6 c2 01             	test   $0x1,%dl
  406def:	74 2a                	je     406e1b <main+0x3a3b>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406df1:	f3 0f 7e 85 a8 c7 ff 	movq   -0x3858(%rbp),%xmm0
  406df8:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406df9:	83 b5 a0 c7 ff ff 01 	xorl   $0x1,-0x3860(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406e00:	f3 0f 7e 0d 58 29 00 	movq   0x2958(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406e07:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406e08:	83 b5 b8 c7 ff ff 01 	xorl   $0x1,-0x3848(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406e0f:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406e13:	66 0f d6 85 a8 c7 ff 	movq   %xmm0,-0x3858(%rbp)
  406e1a:	ff 
							if (temp == 1){
  406e1b:	f6 c2 02             	test   $0x2,%dl
  406e1e:	74 31                	je     406e51 <main+0x3a71>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406e20:	f3 0f 7e 85 a4 c7 ff 	movq   -0x385c(%rbp),%xmm0
  406e27:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406e28:	83 b5 9c c7 ff ff 01 	xorl   $0x1,-0x3864(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406e2f:	f3 0f 7e 0d 29 29 00 	movq   0x2929(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406e36:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406e37:	83 b5 b4 c7 ff ff 01 	xorl   $0x1,-0x384c(%rbp)
									currMatrix[i * 3 + (j + 1)] ^= 1;
  406e3e:	83 b5 ac c7 ff ff 01 	xorl   $0x1,-0x3854(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406e45:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406e49:	66 0f d6 85 a4 c7 ff 	movq   %xmm0,-0x385c(%rbp)
  406e50:	ff 
							mask = mask >> 1;
  406e51:	89 c1                	mov    %eax,%ecx
  406e53:	c1 e9 09             	shr    $0x9,%ecx
							if (temp == 1){
  406e56:	80 e2 04             	and    $0x4,%dl
  406e59:	74 2a                	je     406e85 <main+0x3aa5>
								currMatrix[i*3 + j] ^= 1;
  406e5b:	f3 0f 7e 85 a4 c7 ff 	movq   -0x385c(%rbp),%xmm0
  406e62:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406e63:	83 b5 98 c7 ff ff 01 	xorl   $0x1,-0x3868(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406e6a:	f3 0f 7e 0d ee 28 00 	movq   0x28ee(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406e71:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406e72:	83 b5 b0 c7 ff ff 01 	xorl   $0x1,-0x3850(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406e79:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406e7d:	66 0f d6 85 a4 c7 ff 	movq   %xmm0,-0x385c(%rbp)
  406e84:	ff 
							if (temp == 1){
  406e85:	f6 c1 01             	test   $0x1,%cl
  406e88:	74 2a                	je     406eb4 <main+0x3ad4>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406e8a:	f3 0f 7e 85 9c c7 ff 	movq   -0x3864(%rbp),%xmm0
  406e91:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406e92:	83 b5 94 c7 ff ff 01 	xorl   $0x1,-0x386c(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406e99:	f3 0f 7e 0d bf 28 00 	movq   0x28bf(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406ea0:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406ea1:	83 b5 ac c7 ff ff 01 	xorl   $0x1,-0x3854(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406ea8:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406eac:	66 0f d6 85 9c c7 ff 	movq   %xmm0,-0x3864(%rbp)
  406eb3:	ff 
							if (temp == 1){
  406eb4:	f6 c1 02             	test   $0x2,%cl
  406eb7:	74 31                	je     406eea <main+0x3b0a>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406eb9:	f3 0f 7e 85 98 c7 ff 	movq   -0x3868(%rbp),%xmm0
  406ec0:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406ec1:	83 b5 90 c7 ff ff 01 	xorl   $0x1,-0x3870(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406ec8:	f3 0f 7e 0d 90 28 00 	movq   0x2890(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406ecf:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406ed0:	83 b5 a8 c7 ff ff 01 	xorl   $0x1,-0x3858(%rbp)
									currMatrix[i * 3 + (j + 1)] ^= 1;
  406ed7:	83 b5 a0 c7 ff ff 01 	xorl   $0x1,-0x3860(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406ede:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406ee2:	66 0f d6 85 98 c7 ff 	movq   %xmm0,-0x3868(%rbp)
  406ee9:	ff 
							mask = mask >> 1;
  406eea:	89 c2                	mov    %eax,%edx
  406eec:	c1 ea 0c             	shr    $0xc,%edx
							if (temp == 1){
  406eef:	80 e1 04             	and    $0x4,%cl
  406ef2:	74 2a                	je     406f1e <main+0x3b3e>
								currMatrix[i*3 + j] ^= 1;
  406ef4:	f3 0f 7e 85 98 c7 ff 	movq   -0x3868(%rbp),%xmm0
  406efb:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406efc:	83 b5 8c c7 ff ff 01 	xorl   $0x1,-0x3874(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406f03:	f3 0f 7e 0d 55 28 00 	movq   0x2855(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406f0a:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406f0b:	83 b5 a4 c7 ff ff 01 	xorl   $0x1,-0x385c(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406f12:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406f16:	66 0f d6 85 98 c7 ff 	movq   %xmm0,-0x3868(%rbp)
  406f1d:	ff 
							if (temp == 1){
  406f1e:	f6 c2 01             	test   $0x1,%dl
  406f21:	74 2a                	je     406f4d <main+0x3b6d>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406f23:	f3 0f 7e 85 90 c7 ff 	movq   -0x3870(%rbp),%xmm0
  406f2a:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406f2b:	83 b5 88 c7 ff ff 01 	xorl   $0x1,-0x3878(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406f32:	f3 0f 7e 0d 26 28 00 	movq   0x2826(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406f39:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406f3a:	83 b5 a0 c7 ff ff 01 	xorl   $0x1,-0x3860(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406f41:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406f45:	66 0f d6 85 90 c7 ff 	movq   %xmm0,-0x3870(%rbp)
  406f4c:	ff 
							if (temp == 1){
  406f4d:	f6 c2 02             	test   $0x2,%dl
  406f50:	74 31                	je     406f83 <main+0x3ba3>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406f52:	f3 0f 7e 85 8c c7 ff 	movq   -0x3874(%rbp),%xmm0
  406f59:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406f5a:	83 b5 84 c7 ff ff 01 	xorl   $0x1,-0x387c(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406f61:	f3 0f 7e 0d f7 27 00 	movq   0x27f7(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406f68:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406f69:	83 b5 9c c7 ff ff 01 	xorl   $0x1,-0x3864(%rbp)
									currMatrix[i * 3 + (j + 1)] ^= 1;
  406f70:	83 b5 94 c7 ff ff 01 	xorl   $0x1,-0x386c(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406f77:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406f7b:	66 0f d6 85 8c c7 ff 	movq   %xmm0,-0x3874(%rbp)
  406f82:	ff 
							mask = mask >> 1;
  406f83:	c1 e8 0f             	shr    $0xf,%eax
							if (temp == 1){
  406f86:	80 e2 04             	and    $0x4,%dl
  406f89:	74 2a                	je     406fb5 <main+0x3bd5>
								currMatrix[i*3 + j] ^= 1;
  406f8b:	f3 0f 7e 85 8c c7 ff 	movq   -0x3874(%rbp),%xmm0
  406f92:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406f93:	83 b5 80 c7 ff ff 01 	xorl   $0x1,-0x3880(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406f9a:	f3 0f 7e 0d be 27 00 	movq   0x27be(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406fa1:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406fa2:	83 b5 98 c7 ff ff 01 	xorl   $0x1,-0x3868(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406fa9:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406fad:	66 0f d6 85 8c c7 ff 	movq   %xmm0,-0x3874(%rbp)
  406fb4:	ff 
							if (temp == 1){
  406fb5:	a8 01                	test   $0x1,%al
  406fb7:	74 23                	je     406fdc <main+0x3bfc>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406fb9:	f3 0f 7e 85 84 c7 ff 	movq   -0x387c(%rbp),%xmm0
  406fc0:	ff 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406fc1:	83 b5 94 c7 ff ff 01 	xorl   $0x1,-0x386c(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406fc8:	f3 0f 7e 0d 90 27 00 	movq   0x2790(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406fcf:	00 
  406fd0:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406fd4:	66 0f d6 85 84 c7 ff 	movq   %xmm0,-0x387c(%rbp)
  406fdb:	ff 
							if (temp == 1){
  406fdc:	a8 02                	test   $0x2,%al
  406fde:	74 2a                	je     40700a <main+0x3c2a>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406fe0:	f3 0f 7e 85 80 c7 ff 	movq   -0x3880(%rbp),%xmm0
  406fe7:	ff 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406fe8:	83 b5 90 c7 ff ff 01 	xorl   $0x1,-0x3870(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406fef:	f3 0f 7e 0d 69 27 00 	movq   0x2769(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406ff6:	00 
									currMatrix[i * 3 + (j + 1)] ^= 1;
  406ff7:	83 b5 88 c7 ff ff 01 	xorl   $0x1,-0x3878(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406ffe:	66 0f ef c1          	pxor   %xmm1,%xmm0
  407002:	66 0f d6 85 80 c7 ff 	movq   %xmm0,-0x3880(%rbp)
  407009:	ff 
							if (temp == 1){
  40700a:	a8 04                	test   $0x4,%al
  40700c:	74 23                	je     407031 <main+0x3c51>
								currMatrix[i*3 + j] ^= 1;
  40700e:	f3 0f 7e 85 80 c7 ff 	movq   -0x3880(%rbp),%xmm0
  407015:	ff 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  407016:	83 b5 8c c7 ff ff 01 	xorl   $0x1,-0x3874(%rbp)
								currMatrix[i*3 + j] ^= 1;
  40701d:	f3 0f 7e 0d 3b 27 00 	movq   0x273b(%rip),%xmm1        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  407024:	00 
  407025:	66 0f ef c1          	pxor   %xmm1,%xmm0
  407029:	66 0f d6 85 80 c7 ff 	movq   %xmm0,-0x3880(%rbp)
  407030:	ff 
							redLeds += currMatrix[i*3 + j] * k;
  407031:	8b 85 bc c7 ff ff    	mov    -0x3844(%rbp),%eax
  407037:	8b 95 c0 c7 ff ff    	mov    -0x3840(%rbp),%edx
	ioctl(fd, WR_RED_LEDS);
  40703d:	be 65 61 00 00       	mov    $0x6165,%esi
  407042:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
							redLeds += currMatrix[i*3 + j] * k;
  407048:	c1 e0 02             	shl    $0x2,%eax
  40704b:	8d 04 50             	lea    (%rax,%rdx,2),%eax
  40704e:	8b 95 b8 c7 ff ff    	mov    -0x3848(%rbp),%edx
  407054:	03 85 c4 c7 ff ff    	add    -0x383c(%rbp),%eax
	ioctl(fd, WR_RED_LEDS);
  40705a:	89 df                	mov    %ebx,%edi
							redLeds += currMatrix[i*3 + j] * k;
  40705c:	8d 14 d0             	lea    (%rax,%rdx,8),%edx
  40705f:	8b 85 b4 c7 ff ff    	mov    -0x384c(%rbp),%eax
  407065:	c1 e0 04             	shl    $0x4,%eax
  407068:	01 d0                	add    %edx,%eax
  40706a:	8b 95 b0 c7 ff ff    	mov    -0x3850(%rbp),%edx
  407070:	c1 e2 05             	shl    $0x5,%edx
  407073:	01 c2                	add    %eax,%edx
  407075:	8b 85 ac c7 ff ff    	mov    -0x3854(%rbp),%eax
  40707b:	c1 e0 06             	shl    $0x6,%eax
  40707e:	01 d0                	add    %edx,%eax
  407080:	8b 95 a8 c7 ff ff    	mov    -0x3858(%rbp),%edx
  407086:	c1 e2 07             	shl    $0x7,%edx
  407089:	01 c2                	add    %eax,%edx
  40708b:	8b 85 a4 c7 ff ff    	mov    -0x385c(%rbp),%eax
  407091:	c1 e0 08             	shl    $0x8,%eax
  407094:	01 d0                	add    %edx,%eax
  407096:	8b 95 a0 c7 ff ff    	mov    -0x3860(%rbp),%edx
  40709c:	c1 e2 09             	shl    $0x9,%edx
  40709f:	01 c2                	add    %eax,%edx
  4070a1:	8b 85 9c c7 ff ff    	mov    -0x3864(%rbp),%eax
  4070a7:	c1 e0 0a             	shl    $0xa,%eax
  4070aa:	01 d0                	add    %edx,%eax
  4070ac:	8b 95 98 c7 ff ff    	mov    -0x3868(%rbp),%edx
  4070b2:	c1 e2 0b             	shl    $0xb,%edx
  4070b5:	01 c2                	add    %eax,%edx
  4070b7:	8b 85 94 c7 ff ff    	mov    -0x386c(%rbp),%eax
  4070bd:	c1 e0 0c             	shl    $0xc,%eax
  4070c0:	01 d0                	add    %edx,%eax
  4070c2:	8b 95 90 c7 ff ff    	mov    -0x3870(%rbp),%edx
  4070c8:	c1 e2 0d             	shl    $0xd,%edx
  4070cb:	01 c2                	add    %eax,%edx
  4070cd:	8b 85 8c c7 ff ff    	mov    -0x3874(%rbp),%eax
  4070d3:	c1 e0 0e             	shl    $0xe,%eax
  4070d6:	01 d0                	add    %edx,%eax
  4070d8:	8b 95 88 c7 ff ff    	mov    -0x3878(%rbp),%edx
  4070de:	c1 e2 0f             	shl    $0xf,%edx
  4070e1:	01 c2                	add    %eax,%edx
  4070e3:	8b 85 84 c7 ff ff    	mov    -0x387c(%rbp),%eax
  4070e9:	c1 e0 10             	shl    $0x10,%eax
  4070ec:	01 d0                	add    %edx,%eax
  4070ee:	8b 95 80 c7 ff ff    	mov    -0x3880(%rbp),%edx
  4070f4:	c1 e2 11             	shl    $0x11,%edx
  4070f7:	01 d0                	add    %edx,%eax
  4070f9:	89 85 a0 c5 ff ff    	mov    %eax,-0x3a60(%rbp)
					writeRedLed(fd, redLeds);
  4070ff:	89 85 0c c6 ff ff    	mov    %eax,-0x39f4(%rbp)
	ioctl(fd, WR_RED_LEDS);
  407105:	31 c0                	xor    %eax,%eax
  407107:	e8 14 b2 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  40710c:	ba 04 00 00 00       	mov    $0x4,%edx
  407111:	48 8d b5 0c c6 ff ff 	lea    -0x39f4(%rbp),%rsi
  407118:	89 df                	mov    %ebx,%edi
  40711a:	e8 c1 af ff ff       	call   4020e0 <write@plt>
}
  40711f:	e9 41 ed ff ff       	jmp    405e65 <main+0x2a85>
					input[j] = button;
  407124:	48 63 c2             	movslq %edx,%rax
					j++;
  407127:	83 c2 01             	add    $0x1,%edx
  40712a:	89 8d 98 c5 ff ff    	mov    %ecx,-0x3a68(%rbp)
					input[j] = button;
  407130:	89 8c 85 80 c6 ff ff 	mov    %ecx,-0x3980(%rbp,%rax,4)
					j++;
  407137:	89 95 94 c5 ff ff    	mov    %edx,-0x3a6c(%rbp)
				if (j >= BUTTON_AMOUNT){
  40713d:	83 bd 94 c5 ff ff 06 	cmpl   $0x6,-0x3a6c(%rbp)
  407144:	0f 85 ce dc ff ff    	jne    404e18 <main+0x1a38>
  40714a:	e9 77 f4 ff ff       	jmp    4065c6 <main+0x31e6>
	printf("Syntax: %s <device file path>\n", argv[0]);
  40714f:	48 8b 36             	mov    (%rsi),%rsi
  407152:	bf 98 91 40 00       	mov    $0x409198,%edi
  407157:	31 c0                	xor    %eax,%eax
  407159:	e8 e2 ae ff ff       	call   402040 <printf@plt>
	return -EINVAL;
  40715e:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
  407163:	e9 88 fa ff ff       	jmp    406bf0 <main+0x3810>
				if(currMatrix[0] == 1) window.draw(greenSquare1);
  407168:	48 8d b5 d0 ca ff ff 	lea    -0x3530(%rbp),%rsi
  40716f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407176:	e8 95 b2 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40717b:	e9 0a ed ff ff       	jmp    405e8a <main+0x2aaa>
				else if (i >= BUTTON_AMOUNT && flag && temp_time >= sf::seconds(3.0f)){
  407180:	f3 0f 10 05 5c 26 00 	movss  0x265c(%rip),%xmm0        # 4097e4 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x164>
  407187:	00 
  407188:	e8 c3 af ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  40718d:	48 8b bd 28 c6 ff ff 	mov    -0x39d8(%rbp),%rdi
  407194:	48 89 c6             	mov    %rax,%rsi
  407197:	e8 24 b1 ff ff       	call   4022c0 <_ZN2sfgeENS_4TimeES0_@plt>
  40719c:	c7 85 8c c5 ff ff 06 	movl   $0x6,-0x3a74(%rbp)
  4071a3:	00 00 00 
  4071a6:	84 c0                	test   %al,%al
  4071a8:	0f 84 8e f3 ff ff    	je     40653c <main+0x315c>
	ioctl(fd, WR_GREEN_LEDS);
  4071ae:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  4071b4:	be 66 61 00 00       	mov    $0x6166,%esi
  4071b9:	31 c0                	xor    %eax,%eax
	write(fd, &data, sizeof(data));
  4071bb:	4c 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%r15
  4071c2:	c7 85 40 c7 ff ff 00 	movl   $0x0,-0x38c0(%rbp)
  4071c9:	00 00 00 
	ioctl(fd, WR_GREEN_LEDS);
  4071cc:	89 df                	mov    %ebx,%edi
  4071ce:	e8 4d b1 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  4071d3:	ba 04 00 00 00       	mov    $0x4,%edx
  4071d8:	4c 89 fe             	mov    %r15,%rsi
  4071db:	89 df                	mov    %ebx,%edi
  4071dd:	e8 fe ae ff ff       	call   4020e0 <write@plt>
					flag = 0;
  4071e2:	c7 85 9c c5 ff ff 00 	movl   $0x0,-0x3a64(%rbp)
  4071e9:	00 00 00 
					i = 0;
  4071ec:	c7 85 8c c5 ff ff 00 	movl   $0x0,-0x3a74(%rbp)
  4071f3:	00 00 00 
  4071f6:	e9 41 f3 ff ff       	jmp    40653c <main+0x315c>
				typing.stop();
  4071fb:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  407202:	e8 f9 af ff ff       	call   402200 <_ZN2sf11SoundStream4stopEv@plt>
				boom.play();
  407207:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  40720e:	e8 ed b1 ff ff       	call   402400 <_ZN2sf11SoundStream4playEv@plt>
  407213:	e9 7e d5 ff ff       	jmp    404796 <main+0x13b6>
	fprintf(stderr, "Error opening file %s\n", argv[1]);
  407218:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  40721c:	48 8b 3d 3d 52 00 00 	mov    0x523d(%rip),%rdi        # 40c460 <stderr@@GLIBC_2.2.5>
  407223:	be 83 90 40 00       	mov    $0x409083,%esi
  407228:	31 c0                	xor    %eax,%eax
  40722a:	e8 11 b1 ff ff       	call   402340 <fprintf@plt>
	return -EBUSY;
  40722f:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
  407234:	e9 b7 f9 ff ff       	jmp    406bf0 <main+0x3810>
				if(currMatrix[17] == 1) window.draw(greenSquare18);
  407239:	48 8d b5 90 f9 ff ff 	lea    -0x670(%rbp),%rsi
  407240:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407247:	e8 c4 b1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40724c:	e9 ae ee ff ff       	jmp    4060ff <main+0x2d1f>
				if(currMatrix[14] == 1) window.draw(greenSquare17);
  407251:	48 8d b5 d0 f6 ff ff 	lea    -0x930(%rbp),%rsi
  407258:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40725f:	e8 ac b1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  407264:	e9 71 ee ff ff       	jmp    4060da <main+0x2cfa>
				if(currMatrix[11] == 1) window.draw(greenSquare16);
  407269:	48 8d b5 10 f4 ff ff 	lea    -0xbf0(%rbp),%rsi
  407270:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407277:	e8 94 b1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40727c:	e9 34 ee ff ff       	jmp    4060b5 <main+0x2cd5>
				if(currMatrix[8] == 1) window.draw(greenSquare15);
  407281:	48 8d b5 50 f1 ff ff 	lea    -0xeb0(%rbp),%rsi
  407288:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40728f:	e8 7c b1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  407294:	e9 f7 ed ff ff       	jmp    406090 <main+0x2cb0>
				if(currMatrix[5] == 1) window.draw(greenSquare14);
  407299:	48 8d b5 90 ee ff ff 	lea    -0x1170(%rbp),%rsi
  4072a0:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4072a7:	e8 64 b1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  4072ac:	e9 ba ed ff ff       	jmp    40606b <main+0x2c8b>
				if(currMatrix[2] == 1) window.draw(greenSquare13);
  4072b1:	48 8d b5 d0 eb ff ff 	lea    -0x1430(%rbp),%rsi
  4072b8:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4072bf:	e8 4c b1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  4072c4:	e9 7d ed ff ff       	jmp    406046 <main+0x2c66>
				if(currMatrix[16] == 1) window.draw(greenSquare12);
  4072c9:	48 8d b5 10 e9 ff ff 	lea    -0x16f0(%rbp),%rsi
  4072d0:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4072d7:	e8 34 b1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  4072dc:	e9 40 ed ff ff       	jmp    406021 <main+0x2c41>
				if(currMatrix[13] == 1) window.draw(greenSquare11);
  4072e1:	48 8d b5 50 e6 ff ff 	lea    -0x19b0(%rbp),%rsi
  4072e8:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4072ef:	e8 1c b1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  4072f4:	e9 03 ed ff ff       	jmp    405ffc <main+0x2c1c>
				if(currMatrix[10] == 1) window.draw(greenSquare10);
  4072f9:	48 8d b5 90 e3 ff ff 	lea    -0x1c70(%rbp),%rsi
  407300:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407307:	e8 04 b1 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40730c:	e9 c6 ec ff ff       	jmp    405fd7 <main+0x2bf7>
				if(currMatrix[7] == 1) window.draw(greenSquare9);
  407311:	48 8d b5 d0 e0 ff ff 	lea    -0x1f30(%rbp),%rsi
  407318:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40731f:	e8 ec b0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  407324:	e9 89 ec ff ff       	jmp    405fb2 <main+0x2bd2>
				if(currMatrix[4] == 1) window.draw(greenSquare8);
  407329:	48 8d b5 10 de ff ff 	lea    -0x21f0(%rbp),%rsi
  407330:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407337:	e8 d4 b0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40733c:	e9 4c ec ff ff       	jmp    405f8d <main+0x2bad>
				if(currMatrix[1] == 1) window.draw(greenSquare7);
  407341:	48 8d b5 50 db ff ff 	lea    -0x24b0(%rbp),%rsi
  407348:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40734f:	e8 bc b0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  407354:	e9 0f ec ff ff       	jmp    405f68 <main+0x2b88>
				if(currMatrix[15] == 1) window.draw(greenSquare6);
  407359:	48 8d b5 90 d8 ff ff 	lea    -0x2770(%rbp),%rsi
  407360:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407367:	e8 a4 b0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40736c:	e9 d2 eb ff ff       	jmp    405f43 <main+0x2b63>
				if(currMatrix[12] == 1) window.draw(greenSquare5);
  407371:	48 8d b5 d0 d5 ff ff 	lea    -0x2a30(%rbp),%rsi
  407378:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40737f:	e8 8c b0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  407384:	e9 95 eb ff ff       	jmp    405f1e <main+0x2b3e>
				if(currMatrix[9] == 1) window.draw(greenSquare4);
  407389:	48 8d b5 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rsi
  407390:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407397:	e8 74 b0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40739c:	e9 58 eb ff ff       	jmp    405ef9 <main+0x2b19>
				if(currMatrix[6] == 1) window.draw(greenSquare3);
  4073a1:	48 8d b5 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rsi
  4073a8:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4073af:	e8 5c b0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  4073b4:	e9 1b eb ff ff       	jmp    405ed4 <main+0x2af4>
				if(currMatrix[3] == 1) window.draw(greenSquare2);
  4073b9:	48 8d b5 90 cd ff ff 	lea    -0x3270(%rbp),%rsi
  4073c0:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4073c7:	e8 44 b0 ff ff       	call   402410 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  4073cc:	e9 de ea ff ff       	jmp    405eaf <main+0x2acf>
					text.setString("");
  4073d1:	4c 8d bd 40 c7 ff ff 	lea    -0x38c0(%rbp),%r15
  4073d8:	4c 89 ff             	mov    %r15,%rdi
  4073db:	e8 00 b1 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  4073e0:	4c 89 fa             	mov    %r15,%rdx
  4073e3:	be c4 90 40 00       	mov    $0x4090c4,%esi
  4073e8:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  4073ef:	e8 fc ac ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4073f4:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  4073fb:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  407402:	e8 79 b0 ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  407407:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40740e:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  407415:	48 39 df             	cmp    %rbx,%rdi
  407418:	74 14                	je     40742e <main+0x404e>
  40741a:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  407421:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  407428:	00 
  407429:	e8 12 ae ff ff       	call   402240 <_ZdlPvm@plt>
  40742e:	4c 89 ff             	mov    %r15,%rdi
  407431:	e8 fa ae ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
					typedtext.insert(0, "[root@bois ~] $ Tem alguma coisa piscando\n\n[root@bois ~] $ voce deveria prestar atencao");
  407436:	4c 89 ff             	mov    %r15,%rdi
  407439:	e8 a2 b0 ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  40743e:	4c 89 fa             	mov    %r15,%rdx
  407441:	be 18 95 40 00       	mov    $0x409518,%esi
  407446:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  40744d:	e8 9e ac ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  407452:	48 8d 95 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdx
  407459:	31 f6                	xor    %esi,%esi
  40745b:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  407462:	e8 49 ad ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  407467:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40746e:	48 39 df             	cmp    %rbx,%rdi
  407471:	74 14                	je     407487 <main+0x40a7>
  407473:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  40747a:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  407481:	00 
  407482:	e8 b9 ad ff ff       	call   402240 <_ZdlPvm@plt>
  407487:	4c 89 ff             	mov    %r15,%rdi
  40748a:	e8 a1 ae ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
					temp_clock.restart();
  40748f:	48 8d bd 20 c6 ff ff 	lea    -0x39e0(%rbp),%rdi
  407496:	e8 55 af ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
	ioctl(fd, WR_GREEN_LEDS);
  40749b:	8b 9d a8 c5 ff ff    	mov    -0x3a58(%rbp),%ebx
  4074a1:	be 66 61 00 00       	mov    $0x6166,%esi
  4074a6:	31 c0                	xor    %eax,%eax
  4074a8:	c7 85 20 c7 ff ff 00 	movl   $0x0,-0x38e0(%rbp)
  4074af:	00 00 00 
  4074b2:	89 df                	mov    %ebx,%edi
  4074b4:	e8 67 ae ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  4074b9:	ba 04 00 00 00       	mov    $0x4,%edx
  4074be:	48 8d b5 20 c7 ff ff 	lea    -0x38e0(%rbp),%rsi
  4074c5:	89 df                	mov    %ebx,%edi
  4074c7:	e8 14 ac ff ff       	call   4020e0 <write@plt>
					flag = 1;
  4074cc:	c7 85 9c c5 ff ff 01 	movl   $0x1,-0x3a64(%rbp)
  4074d3:	00 00 00 
					old_button = 0xF;
  4074d6:	c7 85 98 c5 ff ff 0f 	movl   $0xf,-0x3a68(%rbp)
  4074dd:	00 00 00 
					i = 0;
  4074e0:	c7 85 8c c5 ff ff 00 	movl   $0x0,-0x3a74(%rbp)
  4074e7:	00 00 00 
					screen = 5;
  4074ea:	c7 85 ac c5 ff ff 05 	movl   $0x5,-0x3a54(%rbp)
  4074f1:	00 00 00 
  4074f4:	e9 21 ec ff ff       	jmp    40611a <main+0x2d3a>
							printf("\n%d %d", answer[k], input[k]);
  4074f9:	48 89 bd b8 c5 ff ff 	mov    %rdi,-0x3a48(%rbp)
  407500:	48 89 fb             	mov    %rdi,%rbx
  407503:	31 c0                	xor    %eax,%eax
  407505:	bf c5 90 40 00       	mov    $0x4090c5,%edi
  40750a:	e8 31 ab ff ff       	call   402040 <printf@plt>
							printf("errou\n");
  40750f:	bf cc 90 40 00       	mov    $0x4090cc,%edi
  407514:	e8 87 ae ff ff       	call   4023a0 <puts@plt>
							text.setString("");
  407519:	48 89 df             	mov    %rbx,%rdi
  40751c:	e8 bf af ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  407521:	48 89 da             	mov    %rbx,%rdx
  407524:	be c4 90 40 00       	mov    $0x4090c4,%esi
  407529:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  407530:	e8 bb ab ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  407535:	48 8d b5 60 c7 ff ff 	lea    -0x38a0(%rbp),%rsi
  40753c:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  407543:	e8 38 af ff ff       	call   402480 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  407548:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  40754f:	48 8d 9d 70 c7 ff ff 	lea    -0x3890(%rbp),%rbx
  407556:	48 39 df             	cmp    %rbx,%rdi
  407559:	74 14                	je     40756f <main+0x418f>
  40755b:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  407562:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  407569:	00 
  40756a:	e8 d1 ac ff ff       	call   402240 <_ZdlPvm@plt>
  40756f:	4c 8b b5 b8 c5 ff ff 	mov    -0x3a48(%rbp),%r14
  407576:	4c 89 f7             	mov    %r14,%rdi
  407579:	e8 b2 ad ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
							typedtext.insert(0, "[root@bois ~] $ Nao foi dessa vez, tente de novo se\n voce tiver sobrevivido :)\n[root@bois ~] $ ???????\n[root@bois ~] $ ???????\n[root@bois ~] $ ???????\n[root@bois ~] $ ???????");
  40757e:	4c 89 f7             	mov    %r14,%rdi
  407581:	e8 5a af ff ff       	call   4024e0 <_ZNSt6localeC1Ev@plt>
  407586:	4c 89 f2             	mov    %r14,%rdx
  407589:	be 70 95 40 00       	mov    $0x409570,%esi
  40758e:	48 8d bd 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdi
  407595:	e8 56 ab ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  40759a:	48 8d 95 60 c7 ff ff 	lea    -0x38a0(%rbp),%rdx
  4075a1:	31 f6                	xor    %esi,%esi
  4075a3:	48 8d bd a0 c6 ff ff 	lea    -0x3960(%rbp),%rdi
  4075aa:	e8 01 ac ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  4075af:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
	if (!_M_is_local())
  4075b6:	48 39 df             	cmp    %rbx,%rdi
  4075b9:	74 14                	je     4075cf <main+0x41ef>
  4075bb:	48 8b 85 70 c7 ff ff 	mov    -0x3890(%rbp),%rax
  4075c2:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4075c9:	00 
  4075ca:	e8 71 ac ff ff       	call   402240 <_ZdlPvm@plt>
  4075cf:	48 8b bd b8 c5 ff ff 	mov    -0x3a48(%rbp),%rdi
  4075d6:	e8 55 ad ff ff       	call   402330 <_ZNSt6localeD1Ev@plt>
							clock_text.restart();
  4075db:	48 8d bd 10 c6 ff ff 	lea    -0x39f0(%rbp),%rdi
  4075e2:	e8 09 ae ff ff       	call   4023f0 <_ZN2sf5Clock7restartEv@plt>
  4075e7:	c7 85 94 c5 ff ff 06 	movl   $0x6,-0x3a6c(%rbp)
  4075ee:	00 00 00 
							flag_correct = 0;
  4075f1:	c7 85 88 c5 ff ff 00 	movl   $0x0,-0x3a78(%rbp)
  4075f8:	00 00 00 
							screen = 6;
  4075fb:	c7 85 ac c5 ff ff 06 	movl   $0x6,-0x3a54(%rbp)
  407602:	00 00 00 
  407605:	e9 0e d8 ff ff       	jmp    404e18 <main+0x1a38>
      { return _M_dataplus._M_p; }
  40760a:	49 89 c4             	mov    %rax,%r12
  40760d:	e9 ef af ff ff       	jmp    402601 <main.cold>
							typedtext.insert(0, "[root@bois ~] $ Nao foi dessa vez, tente de novo se\n voce tiver sobrevivido :)\n[root@bois ~] $ ???????\n[root@bois ~] $ ???????\n[root@bois ~] $ ???????\n[root@bois ~] $ ???????");
  407612:	48 89 c3             	mov    %rax,%rbx
  407615:	e9 0a b0 ff ff       	jmp    402624 <main.cold+0x23>
  40761a:	48 89 c3             	mov    %rax,%rbx
  40761d:	e9 4f b5 ff ff       	jmp    402b71 <main.cold+0x570>
							text.setString("");
  407622:	48 89 c3             	mov    %rax,%rbx
  407625:	e9 fa af ff ff       	jmp    402624 <main.cold+0x23>
						typedtext.insert(0, "[root@bois ~] $ Parabens, dessa vez nada foi pelos ares, \nquem sabe na proxima :(");
  40762a:	48 89 c3             	mov    %rax,%rbx
  40762d:	e9 f2 af ff ff       	jmp    402624 <main.cold+0x23>
  407632:	48 89 c3             	mov    %rax,%rbx
  407635:	e9 80 b5 ff ff       	jmp    402bba <main.cold+0x5b9>
						text.setString("");
  40763a:	48 89 c3             	mov    %rax,%rbx
  40763d:	e9 e2 af ff ff       	jmp    402624 <main.cold+0x23>
  407642:	49 89 c6             	mov    %rax,%r14
  407645:	e9 a0 b5 ff ff       	jmp    402bea <main.cold+0x5e9>
  40764a:	48 89 c3             	mov    %rax,%rbx
  40764d:	e9 ef b5 ff ff       	jmp    402c41 <main.cold+0x640>
  407652:	48 89 c3             	mov    %rax,%rbx
  407655:	e9 17 b6 ff ff       	jmp    402c71 <main.cold+0x670>
}
  40765a:	48 89 c3             	mov    %rax,%rbx
  40765d:	e9 6a b0 ff ff       	jmp    4026cc <main.cold+0xcb>
  407662:	48 89 c3             	mov    %rax,%rbx
  407665:	e9 d8 b6 ff ff       	jmp    402d42 <main.cold+0x741>
  40766a:	48 89 c3             	mov    %rax,%rbx
  40766d:	e9 42 b0 ff ff       	jmp    4026b4 <main.cold+0xb3>
  407672:	48 89 c3             	mov    %rax,%rbx
  407675:	e9 2f b6 ff ff       	jmp    402ca9 <main.cold+0x6a8>
  40767a:	48 89 c3             	mov    %rax,%rbx
  40767d:	e9 47 b6 ff ff       	jmp    402cc9 <main.cold+0x6c8>
						typedtext = typedtext.toAnsiString().substr(1);
  407682:	48 89 c3             	mov    %rax,%rbx
  407685:	e9 62 b6 ff ff       	jmp    402cec <main.cold+0x6eb>
  40768a:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407691:	28 bd 40 00 
  407695:	48 89 c3             	mov    %rax,%rbx
  407698:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40769e:	e9 7d b0 ff ff       	jmp    402720 <main.cold+0x11f>
  4076a3:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4076aa:	28 bd 40 00 
  4076ae:	48 89 c3             	mov    %rax,%rbx
  4076b1:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4076b7:	e9 83 b0 ff ff       	jmp    40273f <main.cold+0x13e>
  4076bc:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4076c3:	28 bd 40 00 
  4076c7:	48 89 c3             	mov    %rax,%rbx
  4076ca:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4076d0:	e9 89 b0 ff ff       	jmp    40275e <main.cold+0x15d>
  4076d5:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4076dc:	28 bd 40 00 
  4076e0:	48 89 c3             	mov    %rax,%rbx
  4076e3:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4076e9:	e9 8f b0 ff ff       	jmp    40277d <main.cold+0x17c>
  4076ee:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4076f5:	28 bd 40 00 
  4076f9:	48 89 c3             	mov    %rax,%rbx
  4076fc:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407702:	e9 95 b0 ff ff       	jmp    40279c <main.cold+0x19b>
							typedtext.insert(0, "[root@bois ~] $ Voce deveria saber matematica...");
  407707:	48 89 c3             	mov    %rax,%rbx
  40770a:	e9 fe b4 ff ff       	jmp    402c0d <main.cold+0x60c>
  40770f:	48 89 c3             	mov    %rax,%rbx
  407712:	e9 e2 b5 ff ff       	jmp    402cf9 <main.cold+0x6f8>
							text.setString("");
  407717:	48 89 c3             	mov    %rax,%rbx
  40771a:	e9 ee b4 ff ff       	jmp    402c0d <main.cold+0x60c>
  40771f:	49 89 c6             	mov    %rax,%r14
  407722:	e9 6f b5 ff ff       	jmp    402c96 <main.cold+0x695>
}
  407727:	48 89 c3             	mov    %rax,%rbx
  40772a:	e9 91 af ff ff       	jmp    4026c0 <main.cold+0xbf>
  40772f:	49 89 c6             	mov    %rax,%r14
  407732:	e9 37 b6 ff ff       	jmp    402d6e <main.cold+0x76d>
  407737:	48 89 c3             	mov    %rax,%rbx
  40773a:	e9 57 b6 ff ff       	jmp    402d96 <main.cold+0x795>
  40773f:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407746:	28 bd 40 00 
  40774a:	48 89 c3             	mov    %rax,%rbx
  40774d:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407753:	e9 63 b0 ff ff       	jmp    4027bb <main.cold+0x1ba>
  407758:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  40775f:	28 bd 40 00 
  407763:	48 89 c3             	mov    %rax,%rbx
  407766:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40776c:	e9 69 b0 ff ff       	jmp    4027da <main.cold+0x1d9>
  407771:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407778:	28 bd 40 00 
  40777c:	48 89 c3             	mov    %rax,%rbx
  40777f:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407785:	e9 6f b0 ff ff       	jmp    4027f9 <main.cold+0x1f8>
  40778a:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407791:	28 bd 40 00 
  407795:	48 89 c3             	mov    %rax,%rbx
  407798:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40779e:	e9 75 b0 ff ff       	jmp    402818 <main.cold+0x217>
  4077a3:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4077aa:	28 bd 40 00 
  4077ae:	48 89 c3             	mov    %rax,%rbx
  4077b1:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4077b7:	e9 7b b0 ff ff       	jmp    402837 <main.cold+0x236>
  4077bc:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4077c3:	28 bd 40 00 
  4077c7:	48 89 c3             	mov    %rax,%rbx
  4077ca:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4077d0:	e9 81 b0 ff ff       	jmp    402856 <main.cold+0x255>
  4077d5:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4077dc:	28 bd 40 00 
  4077e0:	48 89 c3             	mov    %rax,%rbx
  4077e3:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4077e9:	e9 87 b0 ff ff       	jmp    402875 <main.cold+0x274>
  4077ee:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4077f5:	28 bd 40 00 
  4077f9:	48 89 c3             	mov    %rax,%rbx
  4077fc:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407802:	e9 8d b0 ff ff       	jmp    402894 <main.cold+0x293>
  407807:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  40780e:	28 bd 40 00 
  407812:	48 89 c3             	mov    %rax,%rbx
  407815:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40781b:	e9 93 b0 ff ff       	jmp    4028b3 <main.cold+0x2b2>
  407820:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407827:	28 bd 40 00 
  40782b:	48 89 c3             	mov    %rax,%rbx
  40782e:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407834:	e9 99 b0 ff ff       	jmp    4028d2 <main.cold+0x2d1>
  407839:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407840:	28 bd 40 00 
  407844:	48 89 c3             	mov    %rax,%rbx
  407847:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40784d:	e9 9f b0 ff ff       	jmp    4028f1 <main.cold+0x2f0>
  407852:	48 89 c3             	mov    %rax,%rbx
  407855:	e9 bc b5 ff ff       	jmp    402e16 <main.cold+0x815>
  40785a:	48 89 c3             	mov    %rax,%rbx
  40785d:	e9 df b3 ff ff       	jmp    402c41 <main.cold+0x640>
  407862:	48 89 c3             	mov    %rax,%rbx
  407865:	e9 60 b5 ff ff       	jmp    402dca <main.cold+0x7c9>
  40786a:	48 89 c3             	mov    %rax,%rbx
  40786d:	e9 78 b5 ff ff       	jmp    402dea <main.cold+0x7e9>
  407872:	49 89 c6             	mov    %rax,%r14
  407875:	e9 41 b5 ff ff       	jmp    402dbb <main.cold+0x7ba>
						typedtext = typedtext.toAnsiString().substr(1);
  40787a:	48 89 c3             	mov    %rax,%rbx
  40787d:	e9 6a b4 ff ff       	jmp    402cec <main.cold+0x6eb>
  407882:	48 89 c3             	mov    %rax,%rbx
  407885:	e9 d5 b5 ff ff       	jmp    402e5f <main.cold+0x85e>
  40788a:	48 89 c3             	mov    %rax,%rbx
  40788d:	e9 af b3 ff ff       	jmp    402c41 <main.cold+0x640>
  407892:	49 89 c6             	mov    %rax,%r14
  407895:	e9 f5 b5 ff ff       	jmp    402e8f <main.cold+0x88e>
  40789a:	48 89 c3             	mov    %rax,%rbx
  40789d:	e9 10 b6 ff ff       	jmp    402eb2 <main.cold+0x8b1>
  4078a2:	48 89 c3             	mov    %rax,%rbx
  4078a5:	e9 28 b6 ff ff       	jmp    402ed2 <main.cold+0x8d1>
						typedtext = typedtext.toAnsiString().substr(1);
  4078aa:	48 89 c3             	mov    %rax,%rbx
  4078ad:	e9 3a b4 ff ff       	jmp    402cec <main.cold+0x6eb>
  4078b2:	48 89 c3             	mov    %rax,%rbx
  4078b5:	e9 44 b6 ff ff       	jmp    402efe <main.cold+0x8fd>
  4078ba:	48 89 c3             	mov    %rax,%rbx
  4078bd:	e9 7f b3 ff ff       	jmp    402c41 <main.cold+0x640>
  4078c2:	49 89 c6             	mov    %rax,%r14
  4078c5:	e9 64 b6 ff ff       	jmp    402f2e <main.cold+0x92d>
  4078ca:	48 89 c3             	mov    %rax,%rbx
  4078cd:	e9 7f b6 ff ff       	jmp    402f51 <main.cold+0x950>
  4078d2:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4078d9:	28 bd 40 00 
  4078dd:	48 89 c3             	mov    %rax,%rbx
  4078e0:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4078e6:	e9 25 b0 ff ff       	jmp    402910 <main.cold+0x30f>
  4078eb:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4078f2:	28 bd 40 00 
  4078f6:	48 89 c3             	mov    %rax,%rbx
  4078f9:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4078ff:	e9 2b b0 ff ff       	jmp    40292f <main.cold+0x32e>
  407904:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  40790b:	28 bd 40 00 
  40790f:	48 89 c3             	mov    %rax,%rbx
  407912:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407918:	e9 31 b0 ff ff       	jmp    40294e <main.cold+0x34d>
  40791d:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407924:	28 bd 40 00 
  407928:	48 89 c3             	mov    %rax,%rbx
  40792b:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407931:	e9 37 b0 ff ff       	jmp    40296d <main.cold+0x36c>
  407936:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  40793d:	28 bd 40 00 
  407941:	48 89 c3             	mov    %rax,%rbx
  407944:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40794a:	e9 3d b0 ff ff       	jmp    40298c <main.cold+0x38b>
  40794f:	49 89 c4             	mov    %rax,%r12
  407952:	e9 46 b6 ff ff       	jmp    402f9d <main.cold+0x99c>
					text.setString("");
  407957:	48 89 c3             	mov    %rax,%rbx
  40795a:	e9 ae b2 ff ff       	jmp    402c0d <main.cold+0x60c>
					typedtext.insert(0, "[root@bois ~] $ Isso faz algum sentido?");
  40795f:	48 89 c3             	mov    %rax,%rbx
  407962:	e9 a6 b2 ff ff       	jmp    402c0d <main.cold+0x60c>
  407967:	48 89 c3             	mov    %rax,%rbx
  40796a:	e9 56 b6 ff ff       	jmp    402fc5 <main.cold+0x9c4>
					typedtext.insert(0, "[root@bois ~] $ Sobrecarga no sistema pode ate ser boa");
  40796f:	48 89 c3             	mov    %rax,%rbx
  407972:	e9 96 b2 ff ff       	jmp    402c0d <main.cold+0x60c>
					text.setString("");
  407977:	48 89 c3             	mov    %rax,%rbx
  40797a:	e9 8e b2 ff ff       	jmp    402c0d <main.cold+0x60c>
  40797f:	49 89 c6             	mov    %rax,%r14
  407982:	e9 6e b6 ff ff       	jmp    402ff5 <main.cold+0x9f4>
  407987:	48 89 c3             	mov    %rax,%rbx
  40798a:	e9 8e b6 ff ff       	jmp    40301d <main.cold+0xa1c>
  40798f:	48 89 c3             	mov    %rax,%rbx
  407992:	e9 aa b2 ff ff       	jmp    402c41 <main.cold+0x640>
  407997:	48 89 c3             	mov    %rax,%rbx
  40799a:	e9 ae b6 ff ff       	jmp    40304d <main.cold+0xa4c>
  40799f:	48 89 c3             	mov    %rax,%rbx
  4079a2:	e9 d6 b6 ff ff       	jmp    40307d <main.cold+0xa7c>
					text.setString("");
  4079a7:	48 89 c3             	mov    %rax,%rbx
  4079aa:	e9 5e b2 ff ff       	jmp    402c0d <main.cold+0x60c>
				text.setString("");
  4079af:	48 89 c3             	mov    %rax,%rbx
  4079b2:	e9 56 b2 ff ff       	jmp    402c0d <main.cold+0x60c>
  4079b7:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  4079be:	28 bd 40 00 
  4079c2:	48 89 c3             	mov    %rax,%rbx
  4079c5:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4079cb:	e9 11 b1 ff ff       	jmp    402ae1 <main.cold+0x4e0>
  4079d0:	49 89 c6             	mov    %rax,%r14
  4079d3:	e9 d5 b6 ff ff       	jmp    4030ad <main.cold+0xaac>
					typedtext.insert(0, "[root@bois ~] $ Tem alguma coisa piscando\n\n[root@bois ~] $ voce deveria prestar atencao");
  4079d8:	48 89 c3             	mov    %rax,%rbx
  4079db:	e9 2d b2 ff ff       	jmp    402c0d <main.cold+0x60c>
  4079e0:	48 89 c3             	mov    %rax,%rbx
  4079e3:	e9 00 b7 ff ff       	jmp    4030e8 <main.cold+0xae7>
  4079e8:	48 89 c3             	mov    %rax,%rbx
  4079eb:	e9 18 b7 ff ff       	jmp    403108 <main.cold+0xb07>
						typedtext = typedtext.toAnsiString().substr(1);
  4079f0:	48 89 c3             	mov    %rax,%rbx
  4079f3:	e9 f4 b2 ff ff       	jmp    402cec <main.cold+0x6eb>
  4079f8:	48 89 c3             	mov    %rax,%rbx
  4079fb:	e9 1a b2 ff ff       	jmp    402c1a <main.cold+0x619>
  407a00:	48 89 c3             	mov    %rax,%rbx
  407a03:	e9 3b b7 ff ff       	jmp    403143 <main.cold+0xb42>
  407a08:	48 89 c3             	mov    %rax,%rbx
  407a0b:	e9 53 b7 ff ff       	jmp    403163 <main.cold+0xb62>
  407a10:	49 89 c6             	mov    %rax,%r14
  407a13:	e9 1c b7 ff ff       	jmp    403134 <main.cold+0xb33>
  407a18:	49 89 c6             	mov    %rax,%r14
  407a1b:	e9 6f b7 ff ff       	jmp    40318f <main.cold+0xb8e>
  407a20:	48 89 c3             	mov    %rax,%rbx
  407a23:	e9 a8 b7 ff ff       	jmp    4031d0 <main.cold+0xbcf>
				typedtext.insert(0, "BOOM!!!");
  407a28:	48 89 c3             	mov    %rax,%rbx
  407a2b:	e9 dd b1 ff ff       	jmp    402c0d <main.cold+0x60c>
  407a30:	48 89 c3             	mov    %rax,%rbx
  407a33:	e9 09 b2 ff ff       	jmp    402c41 <main.cold+0x640>
  407a38:	49 89 c6             	mov    %rax,%r14
  407a3b:	e9 c0 b7 ff ff       	jmp    403200 <main.cold+0xbff>
  407a40:	48 89 c3             	mov    %rax,%rbx
  407a43:	e9 db b7 ff ff       	jmp    403223 <main.cold+0xc22>
  407a48:	48 89 c3             	mov    %rax,%rbx
  407a4b:	e9 f3 b7 ff ff       	jmp    403243 <main.cold+0xc42>
						typedtext = typedtext.toAnsiString().substr(1);
  407a50:	48 89 c3             	mov    %rax,%rbx
  407a53:	e9 94 b2 ff ff       	jmp    402cec <main.cold+0x6eb>
  407a58:	48 89 c3             	mov    %rax,%rbx
  407a5b:	e9 0f b8 ff ff       	jmp    40326f <main.cold+0xc6e>
  407a60:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407a67:	28 bd 40 00 
  407a6b:	48 89 c3             	mov    %rax,%rbx
  407a6e:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407a74:	e9 32 af ff ff       	jmp    4029ab <main.cold+0x3aa>
  407a79:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407a80:	28 bd 40 00 
  407a84:	48 89 c3             	mov    %rax,%rbx
  407a87:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407a8d:	e9 8d b0 ff ff       	jmp    402b1f <main.cold+0x51e>
  407a92:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407a99:	28 bd 40 00 
  407a9d:	48 89 c3             	mov    %rax,%rbx
  407aa0:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407aa6:	e9 93 b0 ff ff       	jmp    402b3e <main.cold+0x53d>
}
  407aab:	48 89 c3             	mov    %rax,%rbx
  407aae:	e9 aa b0 ff ff       	jmp    402b5d <main.cold+0x55c>
  407ab3:	48 89 c3             	mov    %rax,%rbx
  407ab6:	e9 1d ac ff ff       	jmp    4026d8 <main.cold+0xd7>
  407abb:	48 89 c3             	mov    %rax,%rbx
  407abe:	e9 dc b7 ff ff       	jmp    40329f <main.cold+0xc9e>
  407ac3:	48 89 c3             	mov    %rax,%rbx
  407ac6:	e9 19 ac ff ff       	jmp    4026e4 <main.cold+0xe3>
  407acb:	48 89 c3             	mov    %rax,%rbx
  407ace:	e9 1d ac ff ff       	jmp    4026f0 <main.cold+0xef>
  407ad3:	48 89 c3             	mov    %rax,%rbx
  407ad6:	e9 55 ab ff ff       	jmp    402630 <main.cold+0x2f>
  407adb:	48 89 c3             	mov    %rax,%rbx
  407ade:	e9 93 ab ff ff       	jmp    402676 <main.cold+0x75>
  407ae3:	48 89 c3             	mov    %rax,%rbx
  407ae6:	e9 e0 b7 ff ff       	jmp    4032cb <main.cold+0xcca>
  407aeb:	48 89 c3             	mov    %rax,%rbx
  407aee:	e9 e9 b7 ff ff       	jmp    4032dc <main.cold+0xcdb>
  407af3:	48 89 c3             	mov    %rax,%rbx
  407af6:	e9 76 b4 ff ff       	jmp    402f71 <main.cold+0x970>
						typedtext = typedtext.toAnsiString().substr(1);
  407afb:	48 89 c3             	mov    %rax,%rbx
  407afe:	e9 e9 b1 ff ff       	jmp    402cec <main.cold+0x6eb>
  407b03:	48 89 c3             	mov    %rax,%rbx
  407b06:	e9 e2 b7 ff ff       	jmp    4032ed <main.cold+0xcec>
  407b0b:	48 89 c3             	mov    %rax,%rbx
  407b0e:	e9 2e b1 ff ff       	jmp    402c41 <main.cold+0x640>
  407b13:	49 89 c6             	mov    %rax,%r14
  407b16:	e9 ba b5 ff ff       	jmp    4030d5 <main.cold+0xad4>
  407b1b:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407b22:	28 bd 40 00 
  407b26:	48 89 c3             	mov    %rax,%rbx
  407b29:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407b2f:	e9 6f af ff ff       	jmp    402aa3 <main.cold+0x4a2>
  407b34:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407b3b:	28 bd 40 00 
  407b3f:	48 89 c3             	mov    %rax,%rbx
  407b42:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407b48:	e9 75 af ff ff       	jmp    402ac2 <main.cold+0x4c1>
						typedtext = typedtext.toAnsiString().substr(1);
  407b4d:	48 89 c3             	mov    %rax,%rbx
  407b50:	e9 97 b1 ff ff       	jmp    402cec <main.cold+0x6eb>
  407b55:	48 89 c3             	mov    %rax,%rbx
  407b58:	e9 d9 b7 ff ff       	jmp    403336 <main.cold+0xd35>
  407b5d:	48 89 c3             	mov    %rax,%rbx
  407b60:	e9 f8 b7 ff ff       	jmp    40335d <main.cold+0xd5c>
  407b65:	48 89 c3             	mov    %rax,%rbx
  407b68:	e9 2b b8 ff ff       	jmp    403398 <main.cold+0xd97>
  407b6d:	48 89 c3             	mov    %rax,%rbx
  407b70:	e9 fc b7 ff ff       	jmp    403371 <main.cold+0xd70>
  407b75:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407b7c:	28 bd 40 00 
  407b80:	48 89 c3             	mov    %rax,%rbx
  407b83:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407b89:	e9 72 af ff ff       	jmp    402b00 <main.cold+0x4ff>
  407b8e:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407b95:	28 bd 40 00 
  407b99:	48 89 c3             	mov    %rax,%rbx
  407b9c:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407ba2:	e9 80 ae ff ff       	jmp    402a27 <main.cold+0x426>
  407ba7:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407bae:	28 bd 40 00 
  407bb2:	48 89 c3             	mov    %rax,%rbx
  407bb5:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407bbb:	e9 29 ae ff ff       	jmp    4029e9 <main.cold+0x3e8>
  407bc0:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407bc7:	28 bd 40 00 
  407bcb:	48 89 c3             	mov    %rax,%rbx
  407bce:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407bd4:	e9 2f ae ff ff       	jmp    402a08 <main.cold+0x407>
  407bd9:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407be0:	28 bd 40 00 
  407be4:	48 89 c3             	mov    %rax,%rbx
  407be7:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407bed:	e9 d8 ad ff ff       	jmp    4029ca <main.cold+0x3c9>
  407bf2:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407bf9:	28 bd 40 00 
  407bfd:	48 89 c3             	mov    %rax,%rbx
  407c00:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407c06:	e9 5a ae ff ff       	jmp    402a65 <main.cold+0x464>
  407c0b:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407c12:	28 bd 40 00 
  407c16:	48 89 c3             	mov    %rax,%rbx
  407c19:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407c1f:	e9 60 ae ff ff       	jmp    402a84 <main.cold+0x483>
  407c24:	48 c7 85 c0 c5 ff ff 	movq   $0x40bd28,-0x3a40(%rbp)
  407c2b:	28 bd 40 00 
  407c2f:	48 89 c3             	mov    %rax,%rbx
  407c32:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407c38:	e9 09 ae ff ff       	jmp    402a46 <main.cold+0x445>

0000000000407c3d <.annobin_abi_note.c.hot>:
  407c3d:	0f 1f 00             	nopl   (%rax)

0000000000407c40 <_start>:
  407c40:	f3 0f 1e fa          	endbr64 
  407c44:	31 ed                	xor    %ebp,%ebp
  407c46:	49 89 d1             	mov    %rdx,%r9
  407c49:	5e                   	pop    %rsi
  407c4a:	48 89 e2             	mov    %rsp,%rdx
  407c4d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  407c51:	50                   	push   %rax
  407c52:	54                   	push   %rsp
  407c53:	45 31 c0             	xor    %r8d,%r8d
  407c56:	31 c9                	xor    %ecx,%ecx
  407c58:	48 c7 c7 e0 33 40 00 	mov    $0x4033e0,%rdi
  407c5f:	ff 15 8b 43 00 00    	call   *0x438b(%rip)        # 40bff0 <__libc_start_main@GLIBC_2.34>
  407c65:	f4                   	hlt    

0000000000407c66 <.annobin_abi_note.c>:
  407c66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  407c6d:	00 00 00 

0000000000407c70 <_dl_relocate_static_pie>:
  407c70:	f3 0f 1e fa          	endbr64 
  407c74:	c3                   	ret    

0000000000407c75 <.annobin__dl_relocate_static_pie.end>:
  407c75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  407c7c:	00 00 00 
  407c7f:	90                   	nop

0000000000407c80 <deregister_tm_clones>:
  407c80:	b8 88 c2 40 00       	mov    $0x40c288,%eax
  407c85:	48 3d 88 c2 40 00    	cmp    $0x40c288,%rax
  407c8b:	74 13                	je     407ca0 <deregister_tm_clones+0x20>
  407c8d:	b8 00 00 00 00       	mov    $0x0,%eax
  407c92:	48 85 c0             	test   %rax,%rax
  407c95:	74 09                	je     407ca0 <deregister_tm_clones+0x20>
  407c97:	bf 88 c2 40 00       	mov    $0x40c288,%edi
  407c9c:	ff e0                	jmp    *%rax
  407c9e:	66 90                	xchg   %ax,%ax
  407ca0:	c3                   	ret    
  407ca1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407ca8:	00 00 00 00 
  407cac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407cb0 <register_tm_clones>:
  407cb0:	be 88 c2 40 00       	mov    $0x40c288,%esi
  407cb5:	48 81 ee 88 c2 40 00 	sub    $0x40c288,%rsi
  407cbc:	48 89 f0             	mov    %rsi,%rax
  407cbf:	48 c1 ee 3f          	shr    $0x3f,%rsi
  407cc3:	48 c1 f8 03          	sar    $0x3,%rax
  407cc7:	48 01 c6             	add    %rax,%rsi
  407cca:	48 d1 fe             	sar    %rsi
  407ccd:	74 11                	je     407ce0 <register_tm_clones+0x30>
  407ccf:	b8 00 00 00 00       	mov    $0x0,%eax
  407cd4:	48 85 c0             	test   %rax,%rax
  407cd7:	74 07                	je     407ce0 <register_tm_clones+0x30>
  407cd9:	bf 88 c2 40 00       	mov    $0x40c288,%edi
  407cde:	ff e0                	jmp    *%rax
  407ce0:	c3                   	ret    
  407ce1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407ce8:	00 00 00 00 
  407cec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407cf0 <__do_global_dtors_aux>:
  407cf0:	f3 0f 1e fa          	endbr64 
  407cf4:	80 3d 6d 47 00 00 00 	cmpb   $0x0,0x476d(%rip)        # 40c468 <completed.0>
  407cfb:	75 13                	jne    407d10 <__do_global_dtors_aux+0x20>
  407cfd:	55                   	push   %rbp
  407cfe:	48 89 e5             	mov    %rsp,%rbp
  407d01:	e8 7a ff ff ff       	call   407c80 <deregister_tm_clones>
  407d06:	c6 05 5b 47 00 00 01 	movb   $0x1,0x475b(%rip)        # 40c468 <completed.0>
  407d0d:	5d                   	pop    %rbp
  407d0e:	c3                   	ret    
  407d0f:	90                   	nop
  407d10:	c3                   	ret    
  407d11:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407d18:	00 00 00 00 
  407d1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407d20 <frame_dummy>:
  407d20:	f3 0f 1e fa          	endbr64 
  407d24:	eb 8a                	jmp    407cb0 <register_tm_clones>
  407d26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  407d2d:	00 00 00 

0000000000407d30 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0>:
   *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
   *  for more on this subject.
  */
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    endl(basic_ostream<_CharT, _Traits>& __os)
  407d30:	41 54                	push   %r12
  407d32:	55                   	push   %rbp
  407d33:	48 83 ec 08          	sub    $0x8,%rsp
    { return flush(__os.put(__os.widen('\n'))); }
  407d37:	48 8b 07             	mov    (%rdi),%rax
  407d3a:	48 8b 40 e8          	mov    -0x18(%rax),%rax
  407d3e:	4c 8b a4 07 f0 00 00 	mov    0xf0(%rdi,%rax,1),%r12
  407d45:	00 

  template<typename _Facet>
    inline const _Facet&
    __check_facet(const _Facet* __f)
    {
      if (!__f)
  407d46:	4d 85 e4             	test   %r12,%r12
  407d49:	74 44                	je     407d8f <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x5f>
       *  @return  The converted character.
      */
      char_type
      widen(char __c) const
      {
	if (_M_widen_ok)
  407d4b:	41 80 7c 24 38 00    	cmpb   $0x0,0x38(%r12)
  407d51:	48 89 fd             	mov    %rdi,%rbp
  407d54:	74 1d                	je     407d73 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x43>
	  return _M_widen[static_cast<unsigned char>(__c)];
  407d56:	41 0f be 74 24 43    	movsbl 0x43(%r12),%esi
  407d5c:	48 89 ef             	mov    %rbp,%rdi
  407d5f:	e8 cc a2 ff ff       	call   402030 <_ZNSo3putEc@plt>
  407d64:	48 83 c4 08          	add    $0x8,%rsp
  407d68:	5d                   	pop    %rbp
  407d69:	48 89 c7             	mov    %rax,%rdi
  407d6c:	41 5c                	pop    %r12
   *  This manipulator simply calls the stream's @c flush() member function.
  */
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    flush(basic_ostream<_CharT, _Traits>& __os)
    { return __os.flush(); }
  407d6e:	e9 ed a3 ff ff       	jmp    402160 <_ZNSo5flushEv@plt>
	this->_M_widen_init();
  407d73:	4c 89 e7             	mov    %r12,%rdi
  407d76:	e8 15 a5 ff ff       	call   402290 <_ZNKSt5ctypeIcE13_M_widen_initEv@plt>
	return this->do_widen(__c);
  407d7b:	49 8b 04 24          	mov    (%r12),%rax
  407d7f:	be 0a 00 00 00       	mov    $0xa,%esi
  407d84:	4c 89 e7             	mov    %r12,%rdi
  407d87:	ff 50 30             	call   *0x30(%rax)
  407d8a:	0f be f0             	movsbl %al,%esi
  407d8d:	eb cd                	jmp    407d5c <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x2c>
	__throw_bad_cast();
  407d8f:	e8 4c a5 ff ff       	call   4022e0 <_ZSt16__throw_bad_castv@plt>
  407d94:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407d9b:	00 00 00 00 
  407d9f:	90                   	nop

0000000000407da0 <_Z17char_to_stringbitB5cxx11c>:
{
  407da0:	41 54                	push   %r12
	switch (n)
  407da2:	83 ee 30             	sub    $0x30,%esi
{
  407da5:	49 89 fc             	mov    %rdi,%r12
  407da8:	55                   	push   %rbp
  407da9:	53                   	push   %rbx
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
  407daa:	48 8d 5f 10          	lea    0x10(%rdi),%rbx
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  407dae:	48 89 1f             	mov    %rbx,(%rdi)
      { _M_string_length = __length; }
  407db1:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  407db8:	00 
  407db9:	c6 47 10 00          	movb   $0x0,0x10(%rdi)
	switch (n)
  407dbd:	40 80 fe 09          	cmp    $0x9,%sil
  407dc1:	0f 87 dc 00 00 00    	ja     407ea3 <_Z17char_to_stringbitB5cxx11c+0x103>
  407dc7:	40 0f b6 f6          	movzbl %sil,%esi
       */
      basic_string&
      assign(const _CharT* __s)
      {
	__glibcxx_requires_string(__s);
	return _M_replace(size_type(0), this->size(), __s,
  407dcb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  407dd1:	ff 24 f5 d8 90 40 00 	jmp    *0x4090d8(,%rsi,8)
  407dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  407ddf:	00 
  407de0:	b9 58 90 40 00       	mov    $0x409058,%ecx
  407de5:	31 d2                	xor    %edx,%edx
  407de7:	31 f6                	xor    %esi,%esi
  407de9:	e8 c2 a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
}
  407dee:	4c 89 e0             	mov    %r12,%rax
  407df1:	5b                   	pop    %rbx
  407df2:	5d                   	pop    %rbp
  407df3:	41 5c                	pop    %r12
  407df5:	c3                   	ret    
  407df6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  407dfd:	00 00 00 
  407e00:	b9 61 90 40 00       	mov    $0x409061,%ecx
  407e05:	31 d2                	xor    %edx,%edx
  407e07:	31 f6                	xor    %esi,%esi
  407e09:	e8 a2 a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407e0e:	eb de                	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
  407e10:	b9 10 90 40 00       	mov    $0x409010,%ecx
  407e15:	31 d2                	xor    %edx,%edx
  407e17:	31 f6                	xor    %esi,%esi
  407e19:	e8 92 a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407e1e:	eb ce                	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
  407e20:	b9 19 90 40 00       	mov    $0x409019,%ecx
  407e25:	31 d2                	xor    %edx,%edx
  407e27:	31 f6                	xor    %esi,%esi
  407e29:	e8 82 a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407e2e:	eb be                	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
  407e30:	b9 22 90 40 00       	mov    $0x409022,%ecx
  407e35:	31 d2                	xor    %edx,%edx
  407e37:	31 f6                	xor    %esi,%esi
  407e39:	e8 72 a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407e3e:	eb ae                	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
  407e40:	b9 2b 90 40 00       	mov    $0x40902b,%ecx
  407e45:	31 d2                	xor    %edx,%edx
  407e47:	31 f6                	xor    %esi,%esi
  407e49:	e8 62 a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407e4e:	eb 9e                	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
  407e50:	b9 34 90 40 00       	mov    $0x409034,%ecx
  407e55:	31 d2                	xor    %edx,%edx
  407e57:	31 f6                	xor    %esi,%esi
  407e59:	e8 52 a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407e5e:	eb 8e                	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
  407e60:	b9 3d 90 40 00       	mov    $0x40903d,%ecx
  407e65:	31 d2                	xor    %edx,%edx
  407e67:	31 f6                	xor    %esi,%esi
  407e69:	e8 42 a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407e6e:	e9 7b ff ff ff       	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
  407e73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407e78:	b9 46 90 40 00       	mov    $0x409046,%ecx
  407e7d:	31 d2                	xor    %edx,%edx
  407e7f:	31 f6                	xor    %esi,%esi
  407e81:	e8 2a a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407e86:	e9 63 ff ff ff       	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
  407e8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407e90:	b9 4f 90 40 00       	mov    $0x40904f,%ecx
  407e95:	31 d2                	xor    %edx,%edx
  407e97:	31 f6                	xor    %esi,%esi
  407e99:	e8 12 a5 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407e9e:	e9 4b ff ff ff       	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
  407ea3:	45 31 c0             	xor    %r8d,%r8d
  407ea6:	b9 c4 90 40 00       	mov    $0x4090c4,%ecx
  407eab:	31 d2                	xor    %edx,%edx
  407ead:	31 f6                	xor    %esi,%esi
  407eaf:	e8 fc a4 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407eb4:	e9 35 ff ff ff       	jmp    407dee <_Z17char_to_stringbitB5cxx11c+0x4e>
      { return _M_dataplus._M_p; }
  407eb9:	48 89 c5             	mov    %rax,%rbp
  407ebc:	e9 3f a6 ff ff       	jmp    402500 <_Z17char_to_stringbitB5cxx11c.cold>
  407ec1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407ec8:	00 00 00 00 
  407ecc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407ed0 <_Z13writeLDisplayij>:
{
  407ed0:	55                   	push   %rbp
	ioctl(fd, WR_L_DISPLAY);
  407ed1:	31 c0                	xor    %eax,%eax
{
  407ed3:	89 fd                	mov    %edi,%ebp
  407ed5:	48 83 ec 10          	sub    $0x10,%rsp
  407ed9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_L_DISPLAY);
  407edd:	be 63 61 00 00       	mov    $0x6163,%esi
  407ee2:	e8 39 a4 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407ee7:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407eec:	89 ef                	mov    %ebp,%edi
  407eee:	ba 04 00 00 00       	mov    $0x4,%edx
  407ef3:	e8 e8 a1 ff ff       	call   4020e0 <write@plt>
}
  407ef8:	48 83 c4 10          	add    $0x10,%rsp
  407efc:	5d                   	pop    %rbp
  407efd:	c3                   	ret    
  407efe:	66 90                	xchg   %ax,%ax

0000000000407f00 <_Z13writeRDisplayij>:
{
  407f00:	55                   	push   %rbp
	ioctl(fd, WR_R_DISPLAY);
  407f01:	31 c0                	xor    %eax,%eax
{
  407f03:	89 fd                	mov    %edi,%ebp
  407f05:	48 83 ec 10          	sub    $0x10,%rsp
  407f09:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_R_DISPLAY);
  407f0d:	be 64 61 00 00       	mov    $0x6164,%esi
  407f12:	e8 09 a4 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407f17:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407f1c:	89 ef                	mov    %ebp,%edi
  407f1e:	ba 04 00 00 00       	mov    $0x4,%edx
  407f23:	e8 b8 a1 ff ff       	call   4020e0 <write@plt>
}
  407f28:	48 83 c4 10          	add    $0x10,%rsp
  407f2c:	5d                   	pop    %rbp
  407f2d:	c3                   	ret    
  407f2e:	66 90                	xchg   %ax,%ax

0000000000407f30 <_Z13writeGreenLedij>:
{
  407f30:	55                   	push   %rbp
	ioctl(fd, WR_GREEN_LEDS);
  407f31:	31 c0                	xor    %eax,%eax
{
  407f33:	89 fd                	mov    %edi,%ebp
  407f35:	48 83 ec 10          	sub    $0x10,%rsp
  407f39:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_GREEN_LEDS);
  407f3d:	be 66 61 00 00       	mov    $0x6166,%esi
  407f42:	e8 d9 a3 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407f47:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407f4c:	89 ef                	mov    %ebp,%edi
  407f4e:	ba 04 00 00 00       	mov    $0x4,%edx
  407f53:	e8 88 a1 ff ff       	call   4020e0 <write@plt>
}
  407f58:	48 83 c4 10          	add    $0x10,%rsp
  407f5c:	5d                   	pop    %rbp
  407f5d:	c3                   	ret    
  407f5e:	66 90                	xchg   %ax,%ax

0000000000407f60 <_Z11writeRedLedij>:
{
  407f60:	55                   	push   %rbp
	ioctl(fd, WR_RED_LEDS);
  407f61:	31 c0                	xor    %eax,%eax
{
  407f63:	89 fd                	mov    %edi,%ebp
  407f65:	48 83 ec 10          	sub    $0x10,%rsp
  407f69:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_RED_LEDS);
  407f6d:	be 65 61 00 00       	mov    $0x6165,%esi
  407f72:	e8 a9 a3 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407f77:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407f7c:	89 ef                	mov    %ebp,%edi
  407f7e:	ba 04 00 00 00       	mov    $0x4,%edx
  407f83:	e8 58 a1 ff ff       	call   4020e0 <write@plt>
}
  407f88:	48 83 c4 10          	add    $0x10,%rsp
  407f8c:	5d                   	pop    %rbp
  407f8d:	c3                   	ret    
  407f8e:	66 90                	xchg   %ax,%ax

0000000000407f90 <_Z10readButtonij>:
{
  407f90:	55                   	push   %rbp
	ioctl(fd, RD_PBUTTONS);
  407f91:	31 c0                	xor    %eax,%eax
{
  407f93:	89 fd                	mov    %edi,%ebp
  407f95:	48 83 ec 10          	sub    $0x10,%rsp
  407f99:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, RD_PBUTTONS);
  407f9d:	be 62 61 00 00       	mov    $0x6162,%esi
  407fa2:	e8 79 a3 ff ff       	call   402320 <ioctl@plt>
	read(fd, &data, 1);
  407fa7:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407fac:	89 ef                	mov    %ebp,%edi
  407fae:	ba 01 00 00 00       	mov    $0x1,%edx
  407fb3:	e8 98 a3 ff ff       	call   402350 <read@plt>
}
  407fb8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  407fbc:	48 83 c4 10          	add    $0x10,%rsp
  407fc0:	5d                   	pop    %rbp
  407fc1:	c3                   	ret    
  407fc2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407fc9:	00 00 00 00 
  407fcd:	0f 1f 00             	nopl   (%rax)

0000000000407fd0 <_Z10readSwitchij>:
{
  407fd0:	55                   	push   %rbp
	ioctl(fd, RD_SWITCHES);
  407fd1:	31 c0                	xor    %eax,%eax
{
  407fd3:	89 fd                	mov    %edi,%ebp
  407fd5:	48 83 ec 10          	sub    $0x10,%rsp
  407fd9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, RD_SWITCHES);
  407fdd:	be 61 61 00 00       	mov    $0x6161,%esi
  407fe2:	e8 39 a3 ff ff       	call   402320 <ioctl@plt>
	read(fd, &data, 3);
  407fe7:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407fec:	89 ef                	mov    %ebp,%edi
  407fee:	ba 03 00 00 00       	mov    $0x3,%edx
  407ff3:	e8 58 a3 ff ff       	call   402350 <read@plt>
}
  407ff8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  407ffc:	48 83 c4 10          	add    $0x10,%rsp
  408000:	5d                   	pop    %rbp
  408001:	c3                   	ret    
  408002:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  408009:	00 00 00 00 
  40800d:	0f 1f 00             	nopl   (%rax)

0000000000408010 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_>:
{
  408010:	41 56                	push   %r14
  408012:	49 89 d6             	mov    %rdx,%r14
  408015:	41 55                	push   %r13
  408017:	49 89 f5             	mov    %rsi,%r13
  40801a:	41 54                	push   %r12
  40801c:	55                   	push   %rbp
  40801d:	89 fd                	mov    %edi,%ebp
  40801f:	53                   	push   %rbx
  408020:	48 83 ec 40          	sub    $0x40,%rsp
	bit_string += char_to_stringbit(sec_string[0]);
  408024:	48 8b 02             	mov    (%rdx),%rax
	: allocator_type(__a), _M_p(__dat) { }
  408027:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  40802c:	c6 44 24 10 00       	movb   $0x0,0x10(%rsp)
  408031:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  408036:	48 89 1c 24          	mov    %rbx,(%rsp)
      { _M_string_length = __length; }
  40803a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  408041:	00 00 
  408043:	0f be 30             	movsbl (%rax),%esi
  408046:	e8 55 fd ff ff       	call   407da0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  40804b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  408050:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  408055:	48 89 e7             	mov    %rsp,%rdi
  408058:	e8 33 a0 ff ff       	call   402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  40805d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  408062:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
  408067:	4c 39 e7             	cmp    %r12,%rdi
  40806a:	74 0e                	je     40807a <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x6a>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40806c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  408071:	48 8d 70 01          	lea    0x1(%rax),%rsi
  408075:	e8 c6 a1 ff ff       	call   402240 <_ZdlPvm@plt>
	bit_string += char_to_stringbit(sec_string[1]);
  40807a:	49 8b 06             	mov    (%r14),%rax
  40807d:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  408082:	0f be 70 01          	movsbl 0x1(%rax),%esi
  408086:	e8 15 fd ff ff       	call   407da0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  40808b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  408090:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  408095:	48 89 e7             	mov    %rsp,%rdi
  408098:	e8 f3 9f ff ff       	call   402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  40809d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4080a2:	4c 39 e7             	cmp    %r12,%rdi
  4080a5:	74 0e                	je     4080b5 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0xa5>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4080a7:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4080ac:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4080b0:	e8 8b a1 ff ff       	call   402240 <_ZdlPvm@plt>
	bit_string += char_to_stringbit(min_string[0]);
  4080b5:	49 8b 45 00          	mov    0x0(%r13),%rax
  4080b9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  4080be:	0f be 30             	movsbl (%rax),%esi
  4080c1:	e8 da fc ff ff       	call   407da0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  4080c6:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  4080cb:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  4080d0:	48 89 e7             	mov    %rsp,%rdi
  4080d3:	e8 b8 9f ff ff       	call   402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  4080d8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4080dd:	4c 39 e7             	cmp    %r12,%rdi
  4080e0:	74 0e                	je     4080f0 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0xe0>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4080e2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4080e7:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4080eb:	e8 50 a1 ff ff       	call   402240 <_ZdlPvm@plt>
	bit_string += char_to_stringbit(min_string[1]);
  4080f0:	49 8b 45 00          	mov    0x0(%r13),%rax
  4080f4:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  4080f9:	0f be 70 01          	movsbl 0x1(%rax),%esi
  4080fd:	e8 9e fc ff ff       	call   407da0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  408102:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  408107:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  40810c:	48 89 e7             	mov    %rsp,%rdi
  40810f:	e8 7c 9f ff ff       	call   402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  408114:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  408119:	4c 39 e7             	cmp    %r12,%rdi
  40811c:	74 0e                	je     40812c <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x11c>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40811e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  408123:	48 8d 70 01          	lea    0x1(%rax),%rsi
  408127:	e8 14 a1 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_string_length; }
  40812c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      { return _M_dataplus._M_p; }
  408131:	48 8b 04 24          	mov    (%rsp),%rax
    min(const _Tp& __a, const _Tp& __b)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
  408135:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
  408139:	0f 85 89 00 00 00    	jne    4081c8 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x1b8>
  40813f:	b9 20 00 00 00       	mov    $0x20,%ecx
  408144:	48 83 e9 01          	sub    $0x1,%rcx
    {
      typedef unsigned long _WordT;
      _WordT _M_w;

      _GLIBCXX_CONSTEXPR _Base_bitset() _GLIBCXX_NOEXCEPT
      : _M_w(0)
  408148:	31 f6                	xor    %esi,%esi
      _S_whichbit(size_t __pos) _GLIBCXX_NOEXCEPT
      {  return __pos % _GLIBCXX_BITSET_BITS_PER_WORD; }

      static _GLIBCXX_CONSTEXPR _WordT
      _S_maskbit(size_t __pos) _GLIBCXX_NOEXCEPT
      { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }
  40814a:	bf 01 00 00 00       	mov    $0x1,%edi
  40814f:	eb 0a                	jmp    40815b <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x14b>
  408151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  408158:	48 89 d1             	mov    %rdx,%rcx
      {
	reset();
	const size_t __nbits = std::min(_Nb, std::min(__n, size_t(__len - __pos)));
	for (size_t __i = __nbits; __i > 0; --__i)
	  {
	    const _CharT __c = __s[__pos + __nbits - __i];
  40815b:	0f b6 10             	movzbl (%rax),%edx
	    if (_Traits::eq(__c, __zero))
  40815e:	80 fa 30             	cmp    $0x30,%dl
  408161:	74 0e                	je     408171 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x161>
	      ;
	    else if (_Traits::eq(__c, __one))
  408163:	80 fa 31             	cmp    $0x31,%dl
  408166:	75 77                	jne    4081df <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x1cf>
      { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }
  408168:	48 89 fa             	mov    %rdi,%rdx
  40816b:	48 d3 e2             	shl    %cl,%rdx
	this->_M_getword(__pos) |= _Base::_S_maskbit(__pos);
  40816e:	48 09 d6             	or     %rdx,%rsi
	for (size_t __i = __nbits; __i > 0; --__i)
  408171:	48 83 c0 01          	add    $0x1,%rax
  408175:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
  408179:	48 85 c9             	test   %rcx,%rcx
  40817c:	75 da                	jne    408158 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x148>
	writeLDisplay(fd, data);
  40817e:	89 74 24 20          	mov    %esi,0x20(%rsp)
	ioctl(fd, WR_L_DISPLAY);
  408182:	89 ef                	mov    %ebp,%edi
  408184:	be 63 61 00 00       	mov    $0x6163,%esi
  408189:	31 c0                	xor    %eax,%eax
  40818b:	e8 90 a1 ff ff       	call   402320 <ioctl@plt>
	write(fd, &data, sizeof(data));
  408190:	ba 04 00 00 00       	mov    $0x4,%edx
  408195:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
  40819a:	89 ef                	mov    %ebp,%edi
  40819c:	e8 3f 9f ff ff       	call   4020e0 <write@plt>
  4081a1:	48 8b 3c 24          	mov    (%rsp),%rdi
	if (!_M_is_local())
  4081a5:	48 39 df             	cmp    %rbx,%rdi
  4081a8:	74 0e                	je     4081b8 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x1a8>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4081aa:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  4081af:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4081b3:	e8 88 a0 ff ff       	call   402240 <_ZdlPvm@plt>
}
  4081b8:	48 83 c4 40          	add    $0x40,%rsp
  4081bc:	5b                   	pop    %rbx
  4081bd:	5d                   	pop    %rbp
  4081be:	41 5c                	pop    %r12
  4081c0:	41 5d                	pop    %r13
  4081c2:	41 5e                	pop    %r14
  4081c4:	c3                   	ret    
  4081c5:	0f 1f 00             	nopl   (%rax)
  4081c8:	48 83 f9 1f          	cmp    $0x1f,%rcx
  4081cc:	0f 87 6d ff ff ff    	ja     40813f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x12f>
  4081d2:	48 85 c9             	test   %rcx,%rcx
  4081d5:	0f 85 69 ff ff ff    	jne    408144 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x134>
  4081db:	31 f6                	xor    %esi,%esi
  4081dd:	eb 9f                	jmp    40817e <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x16e>
	      _Unchecked_set(__i - 1);
	    else
	      __throw_invalid_argument(__N("bitset::_M_copy_from_ptr"));
  4081df:	bf 6a 90 40 00       	mov    $0x40906a,%edi
  4081e4:	e8 57 9f ff ff       	call   402140 <_ZSt24__throw_invalid_argumentPKc@plt>
      { return _M_dataplus._M_p; }
  4081e9:	48 89 c5             	mov    %rax,%rbp
  4081ec:	e9 2e a3 ff ff       	jmp    40251f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold>
  4081f1:	48 89 c5             	mov    %rax,%rbp
  4081f4:	e9 5d a3 ff ff       	jmp    402556 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x37>
  4081f9:	48 89 c5             	mov    %rax,%rbp
  4081fc:	e9 6f a3 ff ff       	jmp    402570 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x51>
  408201:	48 89 c5             	mov    %rax,%rbp
  408204:	e9 86 a3 ff ff       	jmp    40258f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x70>
  408209:	48 89 c5             	mov    %rax,%rbp
  40820c:	e9 26 a3 ff ff       	jmp    402537 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
  408211:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  408218:	00 00 00 00 
  40821c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000408220 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_>:
{
  408220:	41 57                	push   %r15
  408222:	41 56                	push   %r14
  408224:	41 55                	push   %r13
  408226:	49 89 cd             	mov    %rcx,%r13
  408229:	41 54                	push   %r12
  40822b:	49 89 d4             	mov    %rdx,%r12
  40822e:	55                   	push   %rbp
  40822f:	53                   	push   %rbx
  408230:	48 63 de             	movslq %esi,%rbx
  408233:	49 89 d8             	mov    %rbx,%r8
	unsigned int minutes = number / 60;
  408236:	48 69 db 89 88 88 88 	imul   $0xffffffff88888889,%rbx,%rbx
  40823d:	44 89 c0             	mov    %r8d,%eax
  408240:	c1 f8 1f             	sar    $0x1f,%eax
{
  408243:	48 83 ec 68          	sub    $0x68,%rsp
	unsigned int minutes = number / 60;
  408247:	48 c1 eb 20          	shr    $0x20,%rbx
{
  40824b:	89 7c 24 04          	mov    %edi,0x4(%rsp)
	unsigned int minutes = number / 60;
  40824f:	44 01 c3             	add    %r8d,%ebx
  408252:	c1 fb 05             	sar    $0x5,%ebx
  408255:	29 c3                	sub    %eax,%ebx
	unsigned int seconds = number % 60;
  408257:	6b c3 3c             	imul   $0x3c,%ebx,%eax
  40825a:	41 29 c0             	sub    %eax,%r8d
	if (seconds < 10)
  40825d:	41 83 f8 09          	cmp    $0x9,%r8d
  408261:	0f 87 09 02 00 00    	ja     408470 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x250>
	: allocator_type(__a), _M_p(__dat) { }
  408267:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
      { _M_construct(__n, __c); }
  40826c:	31 d2                	xor    %edx,%edx
  40826e:	be 01 00 00 00       	mov    $0x1,%esi
  408273:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
  408278:	4c 89 ff             	mov    %r15,%rdi
	: allocator_type(__a), _M_p(__dat) { }
  40827b:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
  408280:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  408285:	e8 26 a0 ff ff       	call   4022b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
	  auto const __num = __val * 2;
	  __first[1] = __digits[__num + 1];
	  __first[0] = __digits[__num];
	}
      else
	__first[0] = '0' + __val;
  40828a:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
      basic_string&
      replace(size_type __pos, size_type __n1, const _CharT* __s,
	      size_type __n2)
      {
	__glibcxx_requires_string_len(__s, __n2);
	return _M_replace(_M_check(__pos, "basic_string::replace"),
  40828f:	31 d2                	xor    %edx,%edx
  408291:	31 f6                	xor    %esi,%esi
  408293:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  408298:	b9 5f 90 40 00       	mov    $0x40905f,%ecx
  40829d:	4c 89 ff             	mov    %r15,%rdi
  4082a0:	41 83 c0 30          	add    $0x30,%r8d
  4082a4:	44 88 00             	mov    %r8b,(%rax)
  4082a7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4082ad:	e8 fe a0 ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  4082b2:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  4082b7:	48 8d 50 10          	lea    0x10(%rax),%rdx
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  4082bb:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      { return _M_dataplus._M_p; }
  4082c0:	48 8b 08             	mov    (%rax),%rcx
	if (__str._M_is_local())
  4082c3:	48 39 d1             	cmp    %rdx,%rcx
  4082c6:	0f 84 d4 06 00 00    	je     4089a0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x780>
      { _M_dataplus._M_p = __p; }
  4082cc:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
	    _M_capacity(__str._M_allocated_capacity);
  4082d1:	48 8b 48 10          	mov    0x10(%rax),%rcx
      { _M_allocated_capacity = __capacity; }
  4082d5:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
      { return _M_string_length; }
  4082da:	48 8b 48 08          	mov    0x8(%rax),%rcx
      { _M_string_length = __length; }
  4082de:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
      { _M_dataplus._M_p = __p; }
  4082e3:	48 89 10             	mov    %rdx,(%rax)
  4082e6:	c6 40 10 00          	movb   $0x0,0x10(%rax)
      { return _M_dataplus._M_p; }
  4082ea:	49 8b 7d 00          	mov    0x0(%r13),%rdi
      { _M_string_length = __length; }
  4082ee:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  4082f5:	00 
      { return _M_dataplus._M_p; }
  4082f6:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
	if (__str._M_is_local())
  4082fb:	48 39 e8             	cmp    %rbp,%rax
  4082fe:	0f 84 ac 06 00 00    	je     4089b0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x790>
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  408304:	49 8d 55 10          	lea    0x10(%r13),%rdx
      { return _M_string_length; }
  408308:	f3 0f 6f 44 24 48    	movdqu 0x48(%rsp),%xmm0
	    if (!_M_is_local())
  40830e:	48 39 d7             	cmp    %rdx,%rdi
  408311:	0f 84 09 07 00 00    	je     408a20 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x800>
		    __capacity = _M_allocated_capacity;
  408317:	49 8b 55 10          	mov    0x10(%r13),%rdx
      { _M_dataplus._M_p = __p; }
  40831b:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  40831f:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
	    if (__data)
  408324:	48 85 ff             	test   %rdi,%rdi
  408327:	0f 84 fc 06 00 00    	je     408a29 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x809>
      { _M_dataplus._M_p = __p; }
  40832d:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
      { _M_allocated_capacity = __capacity; }
  408332:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
      { _M_string_length = __length; }
  408337:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  40833e:	00 00 
  408340:	c6 07 00             	movb   $0x0,(%rdi)
      { return _M_dataplus._M_p; }
  408343:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  408348:	48 39 ef             	cmp    %rbp,%rdi
  40834b:	74 0e                	je     40835b <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x13b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40834d:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  408352:	48 8d 70 01          	lea    0x1(%rax),%rsi
  408356:	e8 e5 9e ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40835b:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  408360:	4c 39 f7             	cmp    %r14,%rdi
  408363:	74 0e                	je     408373 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x153>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  408365:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  40836a:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40836e:	e8 cd 9e ff ff       	call   402240 <_ZdlPvm@plt>
	  if (__value < (unsigned)__base) return __n;
  408373:	83 fb 09             	cmp    $0x9,%ebx
  408376:	0f 86 1e 07 00 00    	jbe    408a9a <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x87a>
	  if (__value < __b2) return __n + 1;
  40837c:	83 fb 63             	cmp    $0x63,%ebx
  40837f:	0f 86 33 07 00 00    	jbe    408ab8 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x898>
	  if (__value < __b3) return __n + 2;
  408385:	81 fb e7 03 00 00    	cmp    $0x3e7,%ebx
  40838b:	0f 86 3b 07 00 00    	jbe    408acc <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8ac>
	  if (__value < __b4) return __n + 3;
  408391:	89 d9                	mov    %ebx,%ecx
  408393:	48 89 ca             	mov    %rcx,%rdx
  408396:	81 fb 0f 27 00 00    	cmp    $0x270f,%ebx
  40839c:	0f 86 20 07 00 00    	jbe    408ac2 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8a2>
	  __value /= __b4;
  4083a2:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
  4083a9:	c5 6d 34 
      unsigned __n = 1;
  4083ac:	be 01 00 00 00       	mov    $0x1,%esi
  4083b1:	eb 26                	jmp    4083d9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1b9>
  4083b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	  if (__value < __b2) return __n + 1;
  4083b8:	83 fa 63             	cmp    $0x63,%edx
  4083bb:	0f 86 ef 03 00 00    	jbe    4087b0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x590>
	  if (__value < __b3) return __n + 2;
  4083c1:	81 fa e7 03 00 00    	cmp    $0x3e7,%edx
  4083c7:	0f 86 8b 05 00 00    	jbe    408958 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x738>
	  if (__value < __b4) return __n + 3;
  4083cd:	81 fa 0f 27 00 00    	cmp    $0x270f,%edx
  4083d3:	0f 86 87 05 00 00    	jbe    408960 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x740>
	  __value /= __b4;
  4083d9:	48 89 d0             	mov    %rdx,%rax
  4083dc:	48 89 d7             	mov    %rdx,%rdi
  4083df:	49 f7 e0             	mul    %r8
  4083e2:	89 f0                	mov    %esi,%eax
	  __n += 4;
  4083e4:	83 c6 04             	add    $0x4,%esi
	  __value /= __b4;
  4083e7:	48 c1 ea 0b          	shr    $0xb,%rdx
	  if (__value < (unsigned)__base) return __n;
  4083eb:	48 81 ff 9f 86 01 00 	cmp    $0x1869f,%rdi
  4083f2:	77 c4                	ja     4083b8 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x198>
      { _M_construct(__n, __c); }
  4083f4:	4c 89 ff             	mov    %r15,%rdi
  4083f7:	31 d2                	xor    %edx,%edx
  4083f9:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
	: allocator_type(__a), _M_p(__dat) { }
  4083fe:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  408403:	e8 a8 9e ff ff       	call   4022b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      unsigned __pos = __len - 1;
  408408:	8b 44 24 28          	mov    0x28(%rsp),%eax
      { return _M_dataplus._M_p; }
  40840c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    __to_chars_10_impl(char* __first, unsigned __len, _Tp __val) noexcept
  408411:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      unsigned __pos = __len - 1;
  408416:	8d 70 ff             	lea    -0x1(%rax),%esi
      while (__val >= 100)
  408419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	  auto const __num = (__val % 100) * 2;
  408420:	48 69 d1 1f 85 eb 51 	imul   $0x51eb851f,%rcx,%rdx
  408427:	89 d8                	mov    %ebx,%eax
  408429:	48 c1 ea 25          	shr    $0x25,%rdx
  40842d:	6b ca 64             	imul   $0x64,%edx,%ecx
  408430:	29 c8                	sub    %ecx,%eax
  408432:	89 d9                	mov    %ebx,%ecx
	  __val /= 100;
  408434:	89 d3                	mov    %edx,%ebx
	  __first[__pos] = __digits[__num + 1];
  408436:	89 f2                	mov    %esi,%edx
	  auto const __num = (__val % 100) * 2;
  408438:	01 c0                	add    %eax,%eax
	  __first[__pos] = __digits[__num + 1];
  40843a:	44 8d 40 01          	lea    0x1(%rax),%r8d
	  __first[__pos - 1] = __digits[__num];
  40843e:	0f b6 80 80 96 40 00 	movzbl 0x409680(%rax),%eax
	  __first[__pos] = __digits[__num + 1];
  408445:	45 0f b6 80 80 96 40 	movzbl 0x409680(%r8),%r8d
  40844c:	00 
  40844d:	44 88 04 17          	mov    %r8b,(%rdi,%rdx,1)
	  __first[__pos - 1] = __digits[__num];
  408451:	8d 56 ff             	lea    -0x1(%rsi),%edx
	  __pos -= 2;
  408454:	83 ee 02             	sub    $0x2,%esi
	  __first[__pos - 1] = __digits[__num];
  408457:	88 04 17             	mov    %al,(%rdi,%rdx,1)
      while (__val >= 100)
  40845a:	81 f9 0f 27 00 00    	cmp    $0x270f,%ecx
  408460:	0f 86 72 01 00 00    	jbe    4085d8 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3b8>
  408466:	89 d9                	mov    %ebx,%ecx
  408468:	eb b6                	jmp    408420 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x200>
  40846a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  408470:	45 89 c6             	mov    %r8d,%r14d
  408473:	44 89 c1             	mov    %r8d,%ecx
      unsigned __n = 1;
  408476:	be 01 00 00 00       	mov    $0x1,%esi
	  __value /= __b4;
  40847b:	48 bf 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%rdi
  408482:	c5 6d 34 
  408485:	eb 0b                	jmp    408492 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x272>
  408487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40848e:	00 00 
  408490:	89 d1                	mov    %edx,%ecx
	  if (__value < __b2) return __n + 1;
  408492:	83 f9 63             	cmp    $0x63,%ecx
  408495:	0f 86 55 05 00 00    	jbe    4089f0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7d0>
	  if (__value < __b3) return __n + 2;
  40849b:	81 f9 e7 03 00 00    	cmp    $0x3e7,%ecx
  4084a1:	0f 86 59 05 00 00    	jbe    408a00 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7e0>
	  if (__value < __b4) return __n + 3;
  4084a7:	89 ca                	mov    %ecx,%edx
  4084a9:	81 f9 0f 27 00 00    	cmp    $0x270f,%ecx
  4084af:	0f 86 5b 05 00 00    	jbe    408a10 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7f0>
	  __value /= __b4;
  4084b5:	48 89 d0             	mov    %rdx,%rax
	  __n += 4;
  4084b8:	83 c6 04             	add    $0x4,%esi
	  __value /= __b4;
  4084bb:	48 f7 e7             	mul    %rdi
  4084be:	48 c1 ea 0b          	shr    $0xb,%rdx
	  if (__value < (unsigned)__base) return __n;
  4084c2:	81 f9 9f 86 01 00    	cmp    $0x1869f,%ecx
  4084c8:	77 c6                	ja     408490 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x270>
	: allocator_type(__a), _M_p(__dat) { }
  4084ca:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
      { _M_construct(__n, __c); }
  4084cf:	31 d2                	xor    %edx,%edx
  4084d1:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  4084d6:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
	: allocator_type(__a), _M_p(__dat) { }
  4084db:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      { _M_construct(__n, __c); }
  4084e0:	e8 cb 9d ff ff       	call   4022b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      unsigned __pos = __len - 1;
  4084e5:	8b 44 24 48          	mov    0x48(%rsp),%eax
      while (__val >= 100)
  4084e9:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
      { return _M_dataplus._M_p; }
  4084ee:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
      unsigned __pos = __len - 1;
  4084f3:	8d 70 ff             	lea    -0x1(%rax),%esi
      while (__val >= 100)
  4084f6:	41 83 f8 63          	cmp    $0x63,%r8d
  4084fa:	0f 86 f0 03 00 00    	jbe    4088f0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6d0>
	  auto const __num = (__val % 100) * 2;
  408500:	44 89 f2             	mov    %r14d,%edx
  408503:	44 89 f0             	mov    %r14d,%eax
  408506:	48 69 d2 1f 85 eb 51 	imul   $0x51eb851f,%rdx,%rdx
  40850d:	48 c1 ea 25          	shr    $0x25,%rdx
  408511:	6b fa 64             	imul   $0x64,%edx,%edi
  408514:	29 f8                	sub    %edi,%eax
  408516:	44 89 f7             	mov    %r14d,%edi
	  __val /= 100;
  408519:	41 89 d6             	mov    %edx,%r14d
	  __first[__pos] = __digits[__num + 1];
  40851c:	89 f2                	mov    %esi,%edx
	  auto const __num = (__val % 100) * 2;
  40851e:	01 c0                	add    %eax,%eax
	  __first[__pos] = __digits[__num + 1];
  408520:	44 8d 40 01          	lea    0x1(%rax),%r8d
	  __first[__pos - 1] = __digits[__num];
  408524:	0f b6 80 80 96 40 00 	movzbl 0x409680(%rax),%eax
	  __first[__pos] = __digits[__num + 1];
  40852b:	45 0f b6 80 80 96 40 	movzbl 0x409680(%r8),%r8d
  408532:	00 
  408533:	44 88 04 11          	mov    %r8b,(%rcx,%rdx,1)
	  __first[__pos - 1] = __digits[__num];
  408537:	8d 56 ff             	lea    -0x1(%rsi),%edx
	  __pos -= 2;
  40853a:	83 ee 02             	sub    $0x2,%esi
	  __first[__pos - 1] = __digits[__num];
  40853d:	88 04 11             	mov    %al,(%rcx,%rdx,1)
      while (__val >= 100)
  408540:	81 ff 0f 27 00 00    	cmp    $0x270f,%edi
  408546:	77 b8                	ja     408500 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2e0>
	__first[0] = '0' + __val;
  408548:	41 8d 46 30          	lea    0x30(%r14),%eax
      if (__val >= 10)
  40854c:	81 ff e7 03 00 00    	cmp    $0x3e7,%edi
  408552:	0f 87 98 03 00 00    	ja     4088f0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6d0>
  408558:	88 01                	mov    %al,(%rcx)
  40855a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  40855f:	49 8b 7d 00          	mov    0x0(%r13),%rdi
	if (__str._M_is_local())
  408563:	48 39 e8             	cmp    %rbp,%rax
  408566:	0f 84 b1 03 00 00    	je     40891d <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6fd>
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  40856c:	49 8d 55 10          	lea    0x10(%r13),%rdx
      { return _M_string_length; }
  408570:	f3 0f 6f 44 24 48    	movdqu 0x48(%rsp),%xmm0
	    if (!_M_is_local())
  408576:	48 39 d7             	cmp    %rdx,%rdi
  408579:	0f 84 c1 04 00 00    	je     408a40 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x820>
		    __capacity = _M_allocated_capacity;
  40857f:	49 8b 55 10          	mov    0x10(%r13),%rdx
      { _M_dataplus._M_p = __p; }
  408583:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  408587:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
	    if (__data)
  40858c:	48 85 ff             	test   %rdi,%rdi
  40858f:	0f 84 b4 04 00 00    	je     408a49 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x829>
      { _M_dataplus._M_p = __p; }
  408595:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
      { _M_allocated_capacity = __capacity; }
  40859a:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
      { _M_string_length = __length; }
  40859f:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  4085a6:	00 00 
  4085a8:	c6 07 00             	movb   $0x0,(%rdi)
      { return _M_dataplus._M_p; }
  4085ab:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  4085b0:	48 39 ef             	cmp    %rbp,%rdi
  4085b3:	74 0e                	je     4085c3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3a3>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4085b5:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  4085ba:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4085be:	e8 7d 9c ff ff       	call   402240 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4085c3:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
  4085c8:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
  4085cd:	e9 a1 fd ff ff       	jmp    408373 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x153>
  4085d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4085d8:	81 f9 e7 03 00 00    	cmp    $0x3e7,%ecx
  4085de:	0f 87 ec 01 00 00    	ja     4087d0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x5b0>
	__first[0] = '0' + __val;
  4085e4:	83 c3 30             	add    $0x30,%ebx
  4085e7:	88 1f                	mov    %bl,(%rdi)
	return _M_replace(_M_check(__pos, "basic_string::replace"),
  4085e9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4085ef:	b9 5f 90 40 00       	mov    $0x40905f,%ecx
  4085f4:	31 d2                	xor    %edx,%edx
  4085f6:	31 f6                	xor    %esi,%esi
  4085f8:	4c 89 ff             	mov    %r15,%rdi
  4085fb:	e8 b0 9d ff ff       	call   4023b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  408600:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      { return _M_dataplus._M_p; }
  408605:	48 8b 08             	mov    (%rax),%rcx
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  408608:	48 8d 50 10          	lea    0x10(%rax),%rdx
	if (__str._M_is_local())
  40860c:	48 39 d1             	cmp    %rdx,%rcx
  40860f:	0f 84 8b 02 00 00    	je     4088a0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x680>
      { _M_dataplus._M_p = __p; }
  408615:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
	    _M_capacity(__str._M_allocated_capacity);
  40861a:	48 8b 48 10          	mov    0x10(%rax),%rcx
      { _M_allocated_capacity = __capacity; }
  40861e:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
      { return _M_string_length; }
  408623:	48 8b 48 08          	mov    0x8(%rax),%rcx
      { _M_string_length = __length; }
  408627:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
      { _M_dataplus._M_p = __p; }
  40862c:	48 89 10             	mov    %rdx,(%rax)
  40862f:	c6 40 10 00          	movb   $0x0,0x10(%rax)
      { return _M_dataplus._M_p; }
  408633:	49 8b 3c 24          	mov    (%r12),%rdi
      { _M_string_length = __length; }
  408637:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  40863e:	00 
      { return _M_dataplus._M_p; }
  40863f:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
	if (__str._M_is_local())
  408644:	48 39 e8             	cmp    %rbp,%rax
  408647:	0f 84 63 02 00 00    	je     4088b0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x690>
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  40864d:	49 8d 54 24 10       	lea    0x10(%r12),%rdx
      { return _M_string_length; }
  408652:	f3 0f 6f 44 24 48    	movdqu 0x48(%rsp),%xmm0
	    if (!_M_is_local())
  408658:	48 39 d7             	cmp    %rdx,%rdi
  40865b:	0f 84 0f 03 00 00    	je     408970 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x750>
		    __capacity = _M_allocated_capacity;
  408661:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
      { _M_dataplus._M_p = __p; }
  408666:	49 89 04 24          	mov    %rax,(%r12)
      { _M_string_length = __length; }
  40866a:	41 0f 11 44 24 08    	movups %xmm0,0x8(%r12)
	    if (__data)
  408670:	48 85 ff             	test   %rdi,%rdi
  408673:	0f 84 01 03 00 00    	je     40897a <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x75a>
      { _M_dataplus._M_p = __p; }
  408679:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
      { _M_allocated_capacity = __capacity; }
  40867e:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
      { _M_string_length = __length; }
  408683:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  40868a:	00 00 
  40868c:	c6 07 00             	movb   $0x0,(%rdi)
      { return _M_dataplus._M_p; }
  40868f:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  408694:	48 39 ef             	cmp    %rbp,%rdi
  408697:	74 0e                	je     4086a7 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x487>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  408699:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  40869e:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  4086a2:	e8 99 9b ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4086a7:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4086ac:	4c 39 f7             	cmp    %r14,%rdi
  4086af:	74 0e                	je     4086bf <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x49f>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4086b1:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4086b6:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4086ba:	e8 81 9b ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4086bf:	49 8b 1c 24          	mov    (%r12),%rbx
      { return _M_string_length; }
  4086c3:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  4086c8:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      basic_string<_CharT, _Traits, _Alloc>::
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
	// NB: Not required, but considered best practice.
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
  4086cd:	48 89 d8             	mov    %rbx,%rax
  4086d0:	4c 01 e0             	add    %r12,%rax
  4086d3:	74 09                	je     4086de <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x4be>
  4086d5:	48 85 db             	test   %rbx,%rbx
  4086d8:	0f 84 fa 03 00 00    	je     408ad8 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8b8>
	  std::__throw_logic_error(__N("basic_string::"
				       "_M_construct null not valid"));

	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  4086de:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)

	if (__dnew > size_type(_S_local_capacity))
  4086e3:	49 83 fc 0f          	cmp    $0xf,%r12
  4086e7:	0f 87 33 01 00 00    	ja     408820 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x600>
	if (__n == 1)
  4086ed:	49 83 fc 01          	cmp    $0x1,%r12
  4086f1:	0f 85 f9 00 00 00    	jne    4087f0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x5d0>
  4086f7:	0f b6 03             	movzbl (%rbx),%eax
  4086fa:	88 44 24 50          	mov    %al,0x50(%rsp)
  4086fe:	48 89 e8             	mov    %rbp,%rax
      { _M_string_length = __length; }
  408701:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
  408706:	42 c6 04 20 00       	movb   $0x0,(%rax,%r12,1)
      { return _M_dataplus._M_p; }
  40870b:	4d 8b 65 00          	mov    0x0(%r13),%r12
      { return _M_string_length; }
  40870f:	4d 8b 6d 08          	mov    0x8(%r13),%r13
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  408713:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
  408718:	4c 89 e0             	mov    %r12,%rax
  40871b:	4c 01 e8             	add    %r13,%rax
  40871e:	74 09                	je     408729 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x509>
  408720:	4d 85 e4             	test   %r12,%r12
  408723:	0f 84 b9 03 00 00    	je     408ae2 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8c2>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  408729:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
	if (__dnew > size_type(_S_local_capacity))
  40872e:	49 83 fd 0f          	cmp    $0xf,%r13
  408732:	0f 87 28 01 00 00    	ja     408860 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x640>
	if (__n == 1)
  408738:	49 83 fd 01          	cmp    $0x1,%r13
  40873c:	0f 85 c6 00 00 00    	jne    408808 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x5e8>
  408742:	41 0f b6 04 24       	movzbl (%r12),%eax
  408747:	88 44 24 30          	mov    %al,0x30(%rsp)
  40874b:	4c 89 f0             	mov    %r14,%rax
      { _M_string_length = __length; }
  40874e:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
	string_to_display(fd, sec_string, min_string);
  408753:	8b 7c 24 04          	mov    0x4(%rsp),%edi
  408757:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  40875c:	4c 89 fe             	mov    %r15,%rsi
  40875f:	42 c6 04 28 00       	movb   $0x0,(%rax,%r13,1)
  408764:	e8 a7 f8 ff ff       	call   408010 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_>
      { return _M_dataplus._M_p; }
  408769:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  40876e:	4c 39 f7             	cmp    %r14,%rdi
  408771:	74 0e                	je     408781 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x561>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  408773:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  408778:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40877c:	e8 bf 9a ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  408781:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  408786:	48 39 ef             	cmp    %rbp,%rdi
  408789:	74 0e                	je     408799 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x579>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40878b:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  408790:	48 8d 70 01          	lea    0x1(%rax),%rsi
  408794:	e8 a7 9a ff ff       	call   402240 <_ZdlPvm@plt>
}
  408799:	48 83 c4 68          	add    $0x68,%rsp
  40879d:	5b                   	pop    %rbx
  40879e:	5d                   	pop    %rbp
  40879f:	41 5c                	pop    %r12
  4087a1:	41 5d                	pop    %r13
  4087a3:	41 5e                	pop    %r14
  4087a5:	41 5f                	pop    %r15
  4087a7:	c3                   	ret    
  4087a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4087af:	00 
  }

  inline string
  to_string(unsigned __val)
  {
    string __str(__detail::__to_chars_len(__val), '\0');
  4087b0:	8d 70 05             	lea    0x5(%rax),%esi
      { _M_construct(__n, __c); }
  4087b3:	4c 89 ff             	mov    %r15,%rdi
  4087b6:	31 d2                	xor    %edx,%edx
	: allocator_type(__a), _M_p(__dat) { }
  4087b8:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  4087bd:	e8 ee 9a ff ff       	call   4022b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      { return _M_dataplus._M_p; }
  4087c2:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
      while (__val >= 100)
  4087c7:	83 fb 63             	cmp    $0x63,%ebx
  4087ca:	0f 87 c0 01 00 00    	ja     408990 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x770>
	  auto const __num = __val * 2;
  4087d0:	01 db                	add    %ebx,%ebx
	  __first[1] = __digits[__num + 1];
  4087d2:	8d 43 01             	lea    0x1(%rbx),%eax
	  __first[0] = __digits[__num];
  4087d5:	0f b6 9b 80 96 40 00 	movzbl 0x409680(%rbx),%ebx
	  __first[1] = __digits[__num + 1];
  4087dc:	0f b6 80 80 96 40 00 	movzbl 0x409680(%rax),%eax
  4087e3:	88 47 01             	mov    %al,0x1(%rdi)
  4087e6:	e9 fc fd ff ff       	jmp    4085e7 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3c7>
  4087eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      }

      static _GLIBCXX20_CONSTEXPR char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
      {
	if (__n == 0)
  4087f0:	4d 85 e4             	test   %r12,%r12
  4087f3:	0f 85 fb 02 00 00    	jne    408af4 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8d4>
  4087f9:	48 89 e8             	mov    %rbp,%rax
  4087fc:	e9 00 ff ff ff       	jmp    408701 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x4e1>
  408801:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  408808:	4d 85 ed             	test   %r13,%r13
  40880b:	0f 85 db 02 00 00    	jne    408aec <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8cc>
  408811:	4c 89 f0             	mov    %r14,%rax
  408814:	e9 35 ff ff ff       	jmp    40874e <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x52e>
  408819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
  408820:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  408825:	31 d2                	xor    %edx,%edx
  408827:	4c 89 fe             	mov    %r15,%rsi
  40882a:	e8 71 9c ff ff       	call   4024a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  40882f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  408834:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
  408837:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40883c:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
	  return __s1;
#ifdef __cpp_lib_is_constant_evaluated
	if (std::is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  408841:	4c 89 e2             	mov    %r12,%rdx
  408844:	48 89 de             	mov    %rbx,%rsi
  408847:	e8 84 99 ff ff       	call   4021d0 <memcpy@plt>
	  {
	    _M_dispose();
	    __throw_exception_again;
	  }

	_M_set_length(__dnew);
  40884c:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
      { return _M_dataplus._M_p; }
  408851:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  408856:	e9 a6 fe ff ff       	jmp    408701 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x4e1>
  40885b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    _M_data(_M_create(__dnew, size_type(0)));
  408860:	31 d2                	xor    %edx,%edx
  408862:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  408867:	4c 89 ff             	mov    %r15,%rdi
  40886a:	e8 31 9c ff ff       	call   4024a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  40886f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  408874:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
  408877:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40887c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  408881:	4c 89 ea             	mov    %r13,%rdx
  408884:	4c 89 e6             	mov    %r12,%rsi
  408887:	e8 44 99 ff ff       	call   4021d0 <memcpy@plt>
	_M_set_length(__dnew);
  40888c:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
      { return _M_dataplus._M_p; }
  408891:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  408896:	e9 b3 fe ff ff       	jmp    40874e <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x52e>
  40889b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4088a0:	f3 0f 6f 48 10       	movdqu 0x10(%rax),%xmm1
  4088a5:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
  4088aa:	e9 74 fd ff ff       	jmp    408623 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x403>
  4088af:	90                   	nop
      { return _M_string_length; }
  4088b0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
		if (__str.size())
  4088b5:	48 85 d2             	test   %rdx,%rdx
  4088b8:	74 1b                	je     4088d5 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6b5>
	if (__n == 1)
  4088ba:	48 83 fa 01          	cmp    $0x1,%rdx
  4088be:	0f 84 c1 01 00 00    	je     408a85 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x865>
  4088c4:	48 89 ee             	mov    %rbp,%rsi
  4088c7:	e8 04 99 ff ff       	call   4021d0 <memcpy@plt>
      { return _M_string_length; }
  4088cc:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  4088d1:	49 8b 3c 24          	mov    (%r12),%rdi
      { _M_string_length = __length; }
  4088d5:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
      { __c1 = __c2; }
  4088da:	c6 04 17 00          	movb   $0x0,(%rdi,%rdx,1)
      { return _M_dataplus._M_p; }
  4088de:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
      }
  4088e3:	e9 9b fd ff ff       	jmp    408683 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x463>
  4088e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4088ef:	00 
	  auto const __num = __val * 2;
  4088f0:	45 01 f6             	add    %r14d,%r14d
	  __first[1] = __digits[__num + 1];
  4088f3:	41 8d 46 01          	lea    0x1(%r14),%eax
  4088f7:	0f b6 80 80 96 40 00 	movzbl 0x409680(%rax),%eax
  4088fe:	88 41 01             	mov    %al,0x1(%rcx)
	  __first[0] = __digits[__num];
  408901:	41 0f b6 86 80 96 40 	movzbl 0x409680(%r14),%eax
  408908:	00 
  408909:	88 01                	mov    %al,(%rcx)
      { return _M_dataplus._M_p; }
  40890b:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  408910:	49 8b 7d 00          	mov    0x0(%r13),%rdi
	if (__str._M_is_local())
  408914:	48 39 e8             	cmp    %rbp,%rax
  408917:	0f 85 4f fc ff ff    	jne    40856c <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x34c>
      { return _M_string_length; }
  40891d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
		if (__str.size())
  408922:	48 85 d2             	test   %rdx,%rdx
  408925:	74 1b                	je     408942 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x722>
	if (__n == 1)
  408927:	48 83 fa 01          	cmp    $0x1,%rdx
  40892b:	0f 84 3f 01 00 00    	je     408a70 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x850>
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  408931:	48 89 ee             	mov    %rbp,%rsi
  408934:	e8 97 98 ff ff       	call   4021d0 <memcpy@plt>
      { return _M_string_length; }
  408939:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  40893e:	49 8b 7d 00          	mov    0x0(%r13),%rdi
      { _M_string_length = __length; }
  408942:	49 89 55 08          	mov    %rdx,0x8(%r13)
      { __c1 = __c2; }
  408946:	c6 04 17 00          	movb   $0x0,(%rdi,%rdx,1)
      { return _M_dataplus._M_p; }
  40894a:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
      }
  40894f:	e9 4b fc ff ff       	jmp    40859f <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x37f>
  408954:	0f 1f 40 00          	nopl   0x0(%rax)
    string __str(__detail::__to_chars_len(__val), '\0');
  408958:	8d 70 06             	lea    0x6(%rax),%esi
  40895b:	e9 94 fa ff ff       	jmp    4083f4 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
  408960:	8d 70 07             	lea    0x7(%rax),%esi
  408963:	e9 8c fa ff ff       	jmp    4083f4 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
  408968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40896f:	00 
      { _M_dataplus._M_p = __p; }
  408970:	49 89 04 24          	mov    %rax,(%r12)
      { _M_string_length = __length; }
  408974:	41 0f 11 44 24 08    	movups %xmm0,0x8(%r12)
      { _M_dataplus._M_p = __p; }
  40897a:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
  40897f:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  408984:	48 89 ef             	mov    %rbp,%rdi
  408987:	e9 f7 fc ff ff       	jmp    408683 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x463>
  40898c:	0f 1f 40 00          	nopl   0x0(%rax)
      unsigned __pos = __len - 1;
  408990:	8b 44 24 28          	mov    0x28(%rsp),%eax
  408994:	89 d9                	mov    %ebx,%ecx
  408996:	8d 70 ff             	lea    -0x1(%rax),%esi
  408999:	e9 82 fa ff ff       	jmp    408420 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x200>
  40899e:	66 90                	xchg   %ax,%ax
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  4089a0:	f3 0f 6f 50 10       	movdqu 0x10(%rax),%xmm2
  4089a5:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
  4089aa:	e9 2b f9 ff ff       	jmp    4082da <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0xba>
  4089af:	90                   	nop
      { return _M_string_length; }
  4089b0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
		if (__str.size())
  4089b5:	48 85 d2             	test   %rdx,%rdx
  4089b8:	74 1b                	je     4089d5 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7b5>
	if (__n == 1)
  4089ba:	48 83 fa 01          	cmp    $0x1,%rdx
  4089be:	0f 84 97 00 00 00    	je     408a5b <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x83b>
  4089c4:	48 89 ee             	mov    %rbp,%rsi
  4089c7:	e8 04 98 ff ff       	call   4021d0 <memcpy@plt>
      { return _M_string_length; }
  4089cc:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  4089d1:	49 8b 7d 00          	mov    0x0(%r13),%rdi
      { _M_string_length = __length; }
  4089d5:	49 89 55 08          	mov    %rdx,0x8(%r13)
      { __c1 = __c2; }
  4089d9:	c6 04 17 00          	movb   $0x0,(%rdi,%rdx,1)
      { return _M_dataplus._M_p; }
  4089dd:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
      }
  4089e2:	e9 50 f9 ff ff       	jmp    408337 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x117>
  4089e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4089ee:	00 00 
	  if (__value < __b2) return __n + 1;
  4089f0:	83 c6 01             	add    $0x1,%esi
  4089f3:	e9 d2 fa ff ff       	jmp    4084ca <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2aa>
  4089f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4089ff:	00 
	  if (__value < __b3) return __n + 2;
  408a00:	83 c6 02             	add    $0x2,%esi
  408a03:	e9 c2 fa ff ff       	jmp    4084ca <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2aa>
  408a08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  408a0f:	00 
	  if (__value < __b4) return __n + 3;
  408a10:	83 c6 03             	add    $0x3,%esi
  408a13:	e9 b2 fa ff ff       	jmp    4084ca <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2aa>
  408a18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  408a1f:	00 
      { _M_dataplus._M_p = __p; }
  408a20:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  408a24:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
      { _M_dataplus._M_p = __p; }
  408a29:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
  408a2e:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  408a33:	48 89 ef             	mov    %rbp,%rdi
  408a36:	e9 fc f8 ff ff       	jmp    408337 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x117>
  408a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408a40:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  408a44:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
      { _M_dataplus._M_p = __p; }
  408a49:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
  408a4e:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  408a53:	48 89 ef             	mov    %rbp,%rdi
  408a56:	e9 44 fb ff ff       	jmp    40859f <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x37f>
  408a5b:	0f b6 44 24 50       	movzbl 0x50(%rsp),%eax
  408a60:	88 07                	mov    %al,(%rdi)
      { return _M_string_length; }
  408a62:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  408a67:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  408a6b:	e9 65 ff ff ff       	jmp    4089d5 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7b5>
  408a70:	0f b6 44 24 50       	movzbl 0x50(%rsp),%eax
  408a75:	88 07                	mov    %al,(%rdi)
      { return _M_string_length; }
  408a77:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  408a7c:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  408a80:	e9 bd fe ff ff       	jmp    408942 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x722>
  408a85:	0f b6 44 24 50       	movzbl 0x50(%rsp),%eax
  408a8a:	88 07                	mov    %al,(%rdi)
      { return _M_string_length; }
  408a8c:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  408a91:	49 8b 3c 24          	mov    (%r12),%rdi
  408a95:	e9 3b fe ff ff       	jmp    4088d5 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6b5>
      { _M_construct(__n, __c); }
  408a9a:	4c 89 ff             	mov    %r15,%rdi
  408a9d:	31 d2                	xor    %edx,%edx
  408a9f:	be 01 00 00 00       	mov    $0x1,%esi
	: allocator_type(__a), _M_p(__dat) { }
  408aa4:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  408aa9:	e8 02 98 ff ff       	call   4022b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      { return _M_dataplus._M_p; }
  408aae:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
      while (__val >= 100)
  408ab3:	e9 2c fb ff ff       	jmp    4085e4 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3c4>
	  if (__value < __b2) return __n + 1;
  408ab8:	be 02 00 00 00       	mov    $0x2,%esi
  408abd:	e9 f1 fc ff ff       	jmp    4087b3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x593>
	  if (__value < __b4) return __n + 3;
  408ac2:	be 04 00 00 00       	mov    $0x4,%esi
  408ac7:	e9 28 f9 ff ff       	jmp    4083f4 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
	  if (__value < __b3) return __n + 2;
  408acc:	be 03 00 00 00       	mov    $0x3,%esi
  408ad1:	89 d9                	mov    %ebx,%ecx
  408ad3:	e9 1c f9 ff ff       	jmp    4083f4 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
	  std::__throw_logic_error(__N("basic_string::"
  408ad8:	bf 68 91 40 00       	mov    $0x409168,%edi
  408add:	e8 8e 96 ff ff       	call   402170 <_ZSt19__throw_logic_errorPKc@plt>
  408ae2:	bf 68 91 40 00       	mov    $0x409168,%edi
  408ae7:	e8 84 96 ff ff       	call   402170 <_ZSt19__throw_logic_errorPKc@plt>
  408aec:	4c 89 f7             	mov    %r14,%rdi
  408aef:	e9 8d fd ff ff       	jmp    408881 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x661>
  408af4:	48 89 ef             	mov    %rbp,%rdi
  408af7:	e9 45 fd ff ff       	jmp    408841 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x621>
  408afc:	49 89 c4             	mov    %rax,%r12
  408aff:	e9 bd 9a ff ff       	jmp    4025c1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x18>
  408b04:	49 89 c4             	mov    %rax,%r12
  408b07:	e9 9d 9a ff ff       	jmp    4025a9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold>
  408b0c:	48 89 c5             	mov    %rax,%rbp
  408b0f:	e9 cd 9a ff ff       	jmp    4025e1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x38>
  408b14:	48 89 c5             	mov    %rax,%rbp
  408b17:	e9 c5 9a ff ff       	jmp    4025e1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x38>
  408b1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000408b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
  408b20:	41 55                	push   %r13
  408b22:	41 54                	push   %r12
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
  408b24:	4c 8d 67 10          	lea    0x10(%rdi),%r12
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
  408b28:	55                   	push   %rbp
  408b29:	53                   	push   %rbx
  408b2a:	48 83 ec 18          	sub    $0x18,%rsp
	: allocator_type(__a), _M_p(__dat) { }
  408b2e:	4c 89 27             	mov    %r12,(%rdi)
	const _CharT* __end = __s ? __s + traits_type::length(__s)
  408b31:	48 85 f6             	test   %rsi,%rsi
  408b34:	0f 84 8c 00 00 00    	je     408bc6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0xa6>
  408b3a:	48 89 fb             	mov    %rdi,%rbx
	return __builtin_strlen(__s);
  408b3d:	48 89 f7             	mov    %rsi,%rdi
  408b40:	48 89 f5             	mov    %rsi,%rbp
  408b43:	e8 c8 95 ff ff       	call   402110 <strlen@plt>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  408b48:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  408b4d:	49 89 c5             	mov    %rax,%r13
	if (__dnew > size_type(_S_local_capacity))
  408b50:	48 83 f8 0f          	cmp    $0xf,%rax
  408b54:	77 3a                	ja     408b90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x70>
	if (__n == 1)
  408b56:	48 83 f8 01          	cmp    $0x1,%rax
  408b5a:	75 24                	jne    408b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x60>
      { __c1 = __c2; }
  408b5c:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
  408b60:	88 53 10             	mov    %dl,0x10(%rbx)
      { _M_string_length = __length; }
  408b63:	48 89 43 08          	mov    %rax,0x8(%rbx)
  408b67:	41 c6 04 04 00       	movb   $0x0,(%r12,%rax,1)
      }
  408b6c:	48 83 c4 18          	add    $0x18,%rsp
  408b70:	5b                   	pop    %rbx
  408b71:	5d                   	pop    %rbp
  408b72:	41 5c                	pop    %r12
  408b74:	41 5d                	pop    %r13
  408b76:	c3                   	ret    
  408b77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  408b7e:	00 00 
	if (__n == 0)
  408b80:	48 85 c0             	test   %rax,%rax
  408b83:	74 de                	je     408b63 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x43>
  408b85:	eb 27                	jmp    408bae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x8e>
  408b87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  408b8e:	00 00 
	    _M_data(_M_create(__dnew, size_type(0)));
  408b90:	31 d2                	xor    %edx,%edx
  408b92:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
  408b97:	48 89 df             	mov    %rbx,%rdi
  408b9a:	e8 01 99 ff ff       	call   4024a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  408b9f:	48 89 03             	mov    %rax,(%rbx)
  408ba2:	49 89 c4             	mov    %rax,%r12
      { _M_allocated_capacity = __capacity; }
  408ba5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  408baa:	48 89 43 10          	mov    %rax,0x10(%rbx)
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  408bae:	4c 89 e7             	mov    %r12,%rdi
  408bb1:	4c 89 ea             	mov    %r13,%rdx
  408bb4:	48 89 ee             	mov    %rbp,%rsi
  408bb7:	e8 14 96 ff ff       	call   4021d0 <memcpy@plt>
	_M_set_length(__dnew);
  408bbc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
      { return _M_dataplus._M_p; }
  408bc1:	4c 8b 23             	mov    (%rbx),%r12
  408bc4:	eb 9d                	jmp    408b63 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x43>
	  std::__throw_logic_error(__N("basic_string::"
  408bc6:	bf 68 91 40 00       	mov    $0x409168,%edi
  408bcb:	e8 a0 95 ff ff       	call   402170 <_ZSt19__throw_logic_errorPKc@plt>

0000000000408bd0 <_ZN2sf4TextD1Ev>:
{
////////////////////////////////////////////////////////////
/// \brief Graphical text that can be drawn to a render target
///
////////////////////////////////////////////////////////////
class SFML_GRAPHICS_API Text : public Drawable, public Transformable
  408bd0:	b8 50 bd 40 00       	mov    $0x40bd50,%eax
  408bd5:	53                   	push   %rbx
  408bd6:	48 89 fb             	mov    %rdi,%rbx
{
////////////////////////////////////////////////////////////
/// \brief Define a set of one or more 2D primitives
///
////////////////////////////////////////////////////////////
class SFML_GRAPHICS_API VertexArray : public Drawable
  408bd9:	48 c7 87 28 01 00 00 	movq   $0x40bd98,0x128(%rdi)
  408be0:	98 bd 40 00 
  408be4:	66 48 0f 6e c0       	movq   %rax,%xmm0
  408be9:	0f 16 05 60 0b 00 00 	movhps 0xb60(%rip),%xmm0        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  408bf0:	0f 11 07             	movups %xmm0,(%rdi)
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  408bf3:	48 8b bf 30 01 00 00 	mov    0x130(%rdi),%rdi
	if (__p)
  408bfa:	48 85 ff             	test   %rdi,%rdi
  408bfd:	74 0f                	je     408c0e <_ZN2sf4TextD1Ev+0x3e>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  408bff:	48 8b b3 40 01 00 00 	mov    0x140(%rbx),%rsi
  408c06:	48 29 fe             	sub    %rdi,%rsi
  408c09:	e8 32 96 ff ff       	call   402240 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  408c0e:	48 8b bb 08 01 00 00 	mov    0x108(%rbx),%rdi
  408c15:	48 c7 83 00 01 00 00 	movq   $0x40bd98,0x100(%rbx)
  408c1c:	98 bd 40 00 
	if (__p)
  408c20:	48 85 ff             	test   %rdi,%rdi
  408c23:	74 0f                	je     408c34 <_ZN2sf4TextD1Ev+0x64>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  408c25:	48 8b b3 18 01 00 00 	mov    0x118(%rbx),%rsi
  408c2c:	48 29 fe             	sub    %rdi,%rsi
  408c2f:	e8 0c 96 ff ff       	call   402240 <_ZdlPvm@plt>
  408c34:	48 8b bb b8 00 00 00 	mov    0xb8(%rbx),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  408c3b:	48 8d 83 c8 00 00 00 	lea    0xc8(%rbx),%rax
	if (!_M_is_local())
  408c42:	48 39 c7             	cmp    %rax,%rdi
  408c45:	74 14                	je     408c5b <_ZN2sf4TextD1Ev+0x8b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  408c47:	48 8b 83 c8 00 00 00 	mov    0xc8(%rbx),%rax
  408c4e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  408c55:	00 
  408c56:	e8 e5 95 ff ff       	call   402240 <_ZdlPvm@plt>
  408c5b:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  408c5f:	5b                   	pop    %rbx
  408c60:	e9 bb 94 ff ff       	jmp    402120 <_ZN2sf13TransformableD2Ev@plt>
  408c65:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  408c6c:	00 00 00 00 

0000000000408c70 <_ZThn8_N2sf4TextD1Ev>:
  408c70:	b8 50 bd 40 00       	mov    $0x40bd50,%eax
  408c75:	55                   	push   %rbp
  408c76:	48 89 fd             	mov    %rdi,%rbp
  408c79:	48 c7 87 20 01 00 00 	movq   $0x40bd98,0x120(%rdi)
  408c80:	98 bd 40 00 
  408c84:	66 48 0f 6e c0       	movq   %rax,%xmm0
  408c89:	0f 16 05 c0 0a 00 00 	movhps 0xac0(%rip),%xmm0        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  408c90:	0f 11 47 f8          	movups %xmm0,-0x8(%rdi)
  408c94:	48 8b bf 28 01 00 00 	mov    0x128(%rdi),%rdi
  408c9b:	48 85 ff             	test   %rdi,%rdi
  408c9e:	74 0f                	je     408caf <_ZThn8_N2sf4TextD1Ev+0x3f>
  408ca0:	48 8b b5 38 01 00 00 	mov    0x138(%rbp),%rsi
  408ca7:	48 29 fe             	sub    %rdi,%rsi
  408caa:	e8 91 95 ff ff       	call   402240 <_ZdlPvm@plt>
  408caf:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
  408cb6:	48 c7 85 f8 00 00 00 	movq   $0x40bd98,0xf8(%rbp)
  408cbd:	98 bd 40 00 
  408cc1:	48 85 ff             	test   %rdi,%rdi
  408cc4:	74 0f                	je     408cd5 <_ZThn8_N2sf4TextD1Ev+0x65>
  408cc6:	48 8b b5 10 01 00 00 	mov    0x110(%rbp),%rsi
  408ccd:	48 29 fe             	sub    %rdi,%rsi
  408cd0:	e8 6b 95 ff ff       	call   402240 <_ZdlPvm@plt>
  408cd5:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
  408cdc:	48 8d 85 c0 00 00 00 	lea    0xc0(%rbp),%rax
  408ce3:	48 39 c7             	cmp    %rax,%rdi
  408ce6:	74 14                	je     408cfc <_ZThn8_N2sf4TextD1Ev+0x8c>
  408ce8:	48 8b 85 c0 00 00 00 	mov    0xc0(%rbp),%rax
  408cef:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  408cf6:	00 
  408cf7:	e8 44 95 ff ff       	call   402240 <_ZdlPvm@plt>
  408cfc:	48 89 ef             	mov    %rbp,%rdi
  408cff:	5d                   	pop    %rbp
  408d00:	e9 1b 94 ff ff       	jmp    402120 <_ZN2sf13TransformableD2Ev@plt>
  408d05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  408d0c:	00 00 00 
  408d0f:	90                   	nop

0000000000408d10 <_ZN2sf4TextD0Ev>:
  408d10:	b8 50 bd 40 00       	mov    $0x40bd50,%eax
  408d15:	55                   	push   %rbp
  408d16:	48 89 fd             	mov    %rdi,%rbp
  408d19:	48 c7 87 28 01 00 00 	movq   $0x40bd98,0x128(%rdi)
  408d20:	98 bd 40 00 
  408d24:	66 48 0f 6e c0       	movq   %rax,%xmm0
  408d29:	0f 16 05 20 0a 00 00 	movhps 0xa20(%rip),%xmm0        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  408d30:	0f 11 07             	movups %xmm0,(%rdi)
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  408d33:	48 8b bf 30 01 00 00 	mov    0x130(%rdi),%rdi
	if (__p)
  408d3a:	48 85 ff             	test   %rdi,%rdi
  408d3d:	74 0f                	je     408d4e <_ZN2sf4TextD0Ev+0x3e>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  408d3f:	48 8b b5 40 01 00 00 	mov    0x140(%rbp),%rsi
  408d46:	48 29 fe             	sub    %rdi,%rsi
  408d49:	e8 f2 94 ff ff       	call   402240 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  408d4e:	48 8b bd 08 01 00 00 	mov    0x108(%rbp),%rdi
  408d55:	48 c7 85 00 01 00 00 	movq   $0x40bd98,0x100(%rbp)
  408d5c:	98 bd 40 00 
	if (__p)
  408d60:	48 85 ff             	test   %rdi,%rdi
  408d63:	74 0f                	je     408d74 <_ZN2sf4TextD0Ev+0x64>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  408d65:	48 8b b5 18 01 00 00 	mov    0x118(%rbp),%rsi
  408d6c:	48 29 fe             	sub    %rdi,%rsi
  408d6f:	e8 cc 94 ff ff       	call   402240 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  408d74:	48 8b bd b8 00 00 00 	mov    0xb8(%rbp),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  408d7b:	48 8d 85 c8 00 00 00 	lea    0xc8(%rbp),%rax
	if (!_M_is_local())
  408d82:	48 39 c7             	cmp    %rax,%rdi
  408d85:	74 14                	je     408d9b <_ZN2sf4TextD0Ev+0x8b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  408d87:	48 8b 85 c8 00 00 00 	mov    0xc8(%rbp),%rax
  408d8e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  408d95:	00 
  408d96:	e8 a5 94 ff ff       	call   402240 <_ZdlPvm@plt>
  408d9b:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
  408d9f:	e8 7c 93 ff ff       	call   402120 <_ZN2sf13TransformableD2Ev@plt>
  408da4:	48 89 ef             	mov    %rbp,%rdi
  408da7:	be 70 01 00 00       	mov    $0x170,%esi
  408dac:	5d                   	pop    %rbp
  408dad:	e9 8e 94 ff ff       	jmp    402240 <_ZdlPvm@plt>
  408db2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  408db9:	00 00 00 00 
  408dbd:	0f 1f 00             	nopl   (%rax)

0000000000408dc0 <_ZThn8_N2sf4TextD0Ev>:
  408dc0:	41 54                	push   %r12
  408dc2:	b8 50 bd 40 00       	mov    $0x40bd50,%eax
  408dc7:	4c 8d 67 f8          	lea    -0x8(%rdi),%r12
  408dcb:	55                   	push   %rbp
  408dcc:	66 48 0f 6e c0       	movq   %rax,%xmm0
  408dd1:	48 89 fd             	mov    %rdi,%rbp
  408dd4:	48 83 ec 08          	sub    $0x8,%rsp
  408dd8:	48 c7 87 20 01 00 00 	movq   $0x40bd98,0x120(%rdi)
  408ddf:	98 bd 40 00 
  408de3:	0f 16 05 66 09 00 00 	movhps 0x966(%rip),%xmm0        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  408dea:	0f 11 47 f8          	movups %xmm0,-0x8(%rdi)
  408dee:	48 8b bf 28 01 00 00 	mov    0x128(%rdi),%rdi
  408df5:	48 85 ff             	test   %rdi,%rdi
  408df8:	74 0f                	je     408e09 <_ZThn8_N2sf4TextD0Ev+0x49>
  408dfa:	48 8b b5 38 01 00 00 	mov    0x138(%rbp),%rsi
  408e01:	48 29 fe             	sub    %rdi,%rsi
  408e04:	e8 37 94 ff ff       	call   402240 <_ZdlPvm@plt>
  408e09:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
  408e10:	48 c7 85 f8 00 00 00 	movq   $0x40bd98,0xf8(%rbp)
  408e17:	98 bd 40 00 
  408e1b:	48 85 ff             	test   %rdi,%rdi
  408e1e:	74 0f                	je     408e2f <_ZThn8_N2sf4TextD0Ev+0x6f>
  408e20:	48 8b b5 10 01 00 00 	mov    0x110(%rbp),%rsi
  408e27:	48 29 fe             	sub    %rdi,%rsi
  408e2a:	e8 11 94 ff ff       	call   402240 <_ZdlPvm@plt>
  408e2f:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
  408e36:	48 8d 85 c0 00 00 00 	lea    0xc0(%rbp),%rax
  408e3d:	48 39 c7             	cmp    %rax,%rdi
  408e40:	74 14                	je     408e56 <_ZThn8_N2sf4TextD0Ev+0x96>
  408e42:	48 8b 85 c0 00 00 00 	mov    0xc0(%rbp),%rax
  408e49:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  408e50:	00 
  408e51:	e8 ea 93 ff ff       	call   402240 <_ZdlPvm@plt>
  408e56:	48 89 ef             	mov    %rbp,%rdi
  408e59:	e8 c2 92 ff ff       	call   402120 <_ZN2sf13TransformableD2Ev@plt>
  408e5e:	48 83 c4 08          	add    $0x8,%rsp
  408e62:	4c 89 e7             	mov    %r12,%rdi
  408e65:	be 70 01 00 00       	mov    $0x170,%esi
  408e6a:	5d                   	pop    %rbp
  408e6b:	41 5c                	pop    %r12
  408e6d:	e9 ce 93 ff ff       	jmp    402240 <_ZdlPvm@plt>

Desmontagem da secção .fini:

0000000000408e74 <_fini>:
  408e74:	f3 0f 1e fa          	endbr64 
  408e78:	48 83 ec 08          	sub    $0x8,%rsp
  408e7c:	48 83 c4 08          	add    $0x8,%rsp
  408e80:	c3                   	ret    
