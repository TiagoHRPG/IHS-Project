
app/build/release/app:     formato de ficheiro elf64-x86-64

Secções:
Idx Name          Tam.      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400318  0000000000400318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000040  0000000000400338  0000000000400338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400378  0000000000400378  00000378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  000000000040039c  000000000040039c  0000039c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000044  00000000004003c0  00000000004003c0  000003c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       000007f8  0000000000400408  0000000000400408  00000408  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       00000a52  0000000000400c00  0000000000400c00  00000c00  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  000000aa  0000000000401652  0000000000401652  00001652  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 000000e0  0000000000401700  0000000000401700  00001700  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     000000c0  00000000004017e0  00000000004017e0  000017e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000720  00000000004018a0  00000000004018a0  000018a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000402000  0000000000402000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          000004d0  0000000000402020  0000000000402020  00002020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000065b2  00000000004024f0  00000000004024f0  000024f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         0000000d  0000000000408aa4  0000000000408aa4  00008aa4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       0000076c  0000000000409000  0000000000409000  00009000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 000000c4  000000000040976c  000000000040976c  0000976c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000003b4  0000000000409830  0000000000409830  00009830  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .gcc_except_table 0000046e  0000000000409be4  0000000000409be4  00009be4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .init_array   00000010  000000000040bcc8  000000000040bcc8  0000acc8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .fini_array   00000008  000000000040bcd8  000000000040bcd8  0000acd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data.rel.ro  000000d0  000000000040bce0  000000000040bce0  0000ace0  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 22 .dynamic      00000240  000000000040bdb0  000000000040bdb0  0000adb0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got          00000010  000000000040bff0  000000000040bff0  0000aff0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .got.plt      00000278  000000000040c000  000000000040c000  0000b000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .data         00000004  000000000040c278  000000000040c278  0000b278  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 26 .bss          000001b0  000000000040c280  000000000040c280  0000b27c  2**6
                  ALLOC
 27 .comment      0000002e  0000000000000000  0000000000000000  0000b27c  2**0
                  CONTENTS, READONLY
 28 .gnu.build.attributes 00001cd4  000000000040e430  000000000040e430  0000b2ac  2**2
                  CONTENTS, READONLY, OCTETS
 29 .debug_aranges 00000090  0000000000000000  0000000000000000  0000cf80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_info   0003f937  0000000000000000  0000000000000000  0000d010  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 31 .debug_abbrev 00001320  0000000000000000  0000000000000000  0004c947  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_line   000075c1  0000000000000000  0000000000000000  0004dc67  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 33 .debug_str    00033f4f  0000000000000000  0000000000000000  00055228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 34 .debug_line_str 000007a8  0000000000000000  0000000000000000  00089177  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 35 .debug_loclists 00012177  0000000000000000  0000000000000000  0008991f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 36 .debug_rnglists 00003157  0000000000000000  0000000000000000  0009ba96  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Desmontagem da secção .init:

0000000000402000 <_init>:
  402000:	f3 0f 1e fa          	endbr64 
  402004:	48 83 ec 08          	sub    $0x8,%rsp
  402008:	48 8b 05 e9 9f 00 00 	mov    0x9fe9(%rip),%rax        # 40bff8 <__gmon_start__@Base>
  40200f:	48 85 c0             	test   %rax,%rax
  402012:	74 02                	je     402016 <_init+0x16>
  402014:	ff d0                	call   *%rax
  402016:	48 83 c4 08          	add    $0x8,%rsp
  40201a:	c3                   	ret    

Desmontagem da secção .plt:

0000000000402020 <_ZNSo3putEc@plt-0x10>:
  402020:	ff 35 e2 9f 00 00    	push   0x9fe2(%rip)        # 40c008 <_GLOBAL_OFFSET_TABLE_+0x8>
  402026:	ff 25 e4 9f 00 00    	jmp    *0x9fe4(%rip)        # 40c010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402030 <_ZNSo3putEc@plt>:
  402030:	ff 25 e2 9f 00 00    	jmp    *0x9fe2(%rip)        # 40c018 <_ZNSo3putEc@GLIBCXX_3.4>
  402036:	68 00 00 00 00       	push   $0x0
  40203b:	e9 e0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402040 <printf@plt>:
  402040:	ff 25 da 9f 00 00    	jmp    *0x9fda(%rip)        # 40c020 <printf@GLIBC_2.2.5>
  402046:	68 01 00 00 00       	push   $0x1
  40204b:	e9 d0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402050 <_ZN2sf4TimeC1Ev@plt>:
  402050:	ff 25 d2 9f 00 00    	jmp    *0x9fd2(%rip)        # 40c028 <_ZN2sf4TimeC1Ev@Base>
  402056:	68 02 00 00 00       	push   $0x2
  40205b:	e9 c0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402060 <_ZN2sf5ShapeD2Ev@plt>:
  402060:	ff 25 ca 9f 00 00    	jmp    *0x9fca(%rip)        # 40c030 <_ZN2sf5ShapeD2Ev@Base>
  402066:	68 03 00 00 00       	push   $0x3
  40206b:	e9 b0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402070 <_ZN2sf5MusicC1Ev@plt>:
  402070:	ff 25 c2 9f 00 00    	jmp    *0x9fc2(%rip)        # 40c038 <_ZN2sf5MusicC1Ev@Base>
  402076:	68 04 00 00 00       	push   $0x4
  40207b:	e9 a0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402080 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
  402080:	ff 25 ba 9f 00 00    	jmp    *0x9fba(%rip)        # 40c040 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@Base>
  402086:	68 05 00 00 00       	push   $0x5
  40208b:	e9 90 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
  402090:	ff 25 b2 9f 00 00    	jmp    *0x9fb2(%rip)        # 40c048 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@GLIBCXX_3.4.21>
  402096:	68 06 00 00 00       	push   $0x6
  40209b:	e9 80 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>:
  4020a0:	ff 25 aa 9f 00 00    	jmp    *0x9faa(%rip)        # 40c050 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@Base>
  4020a6:	68 07 00 00 00       	push   $0x7
  4020ab:	e9 70 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020b0 <_ZN2sf4FontC1Ev@plt>:
  4020b0:	ff 25 a2 9f 00 00    	jmp    *0x9fa2(%rip)        # 40c058 <_ZN2sf4FontC1Ev@Base>
  4020b6:	68 08 00 00 00       	push   $0x8
  4020bb:	e9 60 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020c0 <_ZN2sf6StringC1Ej@plt>:
  4020c0:	ff 25 9a 9f 00 00    	jmp    *0x9f9a(%rip)        # 40c060 <_ZN2sf6StringC1Ej@Base>
  4020c6:	68 09 00 00 00       	push   $0x9
  4020cb:	e9 50 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020d0 <_ZN2sfplERKNS_6StringES2_@plt>:
  4020d0:	ff 25 92 9f 00 00    	jmp    *0x9f92(%rip)        # 40c068 <_ZN2sfplERKNS_6StringES2_@Base>
  4020d6:	68 0a 00 00 00       	push   $0xa
  4020db:	e9 40 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020e0 <write@plt>:
  4020e0:	ff 25 8a 9f 00 00    	jmp    *0x9f8a(%rip)        # 40c070 <write@GLIBC_2.2.5>
  4020e6:	68 0b 00 00 00       	push   $0xb
  4020eb:	e9 30 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>:
  4020f0:	ff 25 82 9f 00 00    	jmp    *0x9f82(%rip)        # 40c078 <_ZN2sf6StringC1EPKcRKSt6locale@Base>
  4020f6:	68 0c 00 00 00       	push   $0xc
  4020fb:	e9 20 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402100 <_ZN2sf5ColorC1Ehhhh@plt>:
  402100:	ff 25 7a 9f 00 00    	jmp    *0x9f7a(%rip)        # 40c080 <_ZN2sf5ColorC1Ehhhh@Base>
  402106:	68 0d 00 00 00       	push   $0xd
  40210b:	e9 10 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402110 <strlen@plt>:
  402110:	ff 25 72 9f 00 00    	jmp    *0x9f72(%rip)        # 40c088 <strlen@GLIBC_2.2.5>
  402116:	68 0e 00 00 00       	push   $0xe
  40211b:	e9 00 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402120 <_ZN2sf13TransformableD2Ev@plt>:
  402120:	ff 25 6a 9f 00 00    	jmp    *0x9f6a(%rip)        # 40c090 <_ZN2sf13TransformableD2Ev@Base>
  402126:	68 0f 00 00 00       	push   $0xf
  40212b:	e9 f0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402130 <_ZN2sf13Transformable11setPositionEff@plt>:
  402130:	ff 25 62 9f 00 00    	jmp    *0x9f62(%rip)        # 40c098 <_ZN2sf13Transformable11setPositionEff@Base>
  402136:	68 10 00 00 00       	push   $0x10
  40213b:	e9 e0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402140 <_ZSt24__throw_invalid_argumentPKc@plt>:
  402140:	ff 25 5a 9f 00 00    	jmp    *0x9f5a(%rip)        # 40c0a0 <_ZSt24__throw_invalid_argumentPKc@GLIBCXX_3.4>
  402146:	68 11 00 00 00       	push   $0x11
  40214b:	e9 d0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402150 <_ZN2sf7secondsEf@plt>:
  402150:	ff 25 52 9f 00 00    	jmp    *0x9f52(%rip)        # 40c0a8 <_ZN2sf7secondsEf@Base>
  402156:	68 12 00 00 00       	push   $0x12
  40215b:	e9 c0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402160 <_ZNSo5flushEv@plt>:
  402160:	ff 25 4a 9f 00 00    	jmp    *0x9f4a(%rip)        # 40c0b0 <_ZNSo5flushEv@GLIBCXX_3.4>
  402166:	68 13 00 00 00       	push   $0x13
  40216b:	e9 b0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402170 <_ZSt19__throw_logic_errorPKc@plt>:
  402170:	ff 25 42 9f 00 00    	jmp    *0x9f42(%rip)        # 40c0b8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
  402176:	68 14 00 00 00       	push   $0x14
  40217b:	e9 a0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402180 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@plt>:
  402180:	ff 25 3a 9f 00 00    	jmp    *0x9f3a(%rip)        # 40c0c0 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@Base>
  402186:	68 15 00 00 00       	push   $0x15
  40218b:	e9 90 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402190 <open@plt>:
  402190:	ff 25 32 9f 00 00    	jmp    *0x9f32(%rip)        # 40c0c8 <open@GLIBC_2.2.5>
  402196:	68 16 00 00 00       	push   $0x16
  40219b:	e9 80 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021a0 <_ZN2sf9VideoModeC1Ejjj@plt>:
  4021a0:	ff 25 2a 9f 00 00    	jmp    *0x9f2a(%rip)        # 40c0d0 <_ZN2sf9VideoModeC1Ejjj@Base>
  4021a6:	68 17 00 00 00       	push   $0x17
  4021ab:	e9 70 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021b0 <_ZN2sf6String6insertEmRKS0_@plt>:
  4021b0:	ff 25 22 9f 00 00    	jmp    *0x9f22(%rip)        # 40c0d8 <_ZN2sf6String6insertEmRKS0_@Base>
  4021b6:	68 18 00 00 00       	push   $0x18
  4021bb:	e9 60 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021c0 <_ZN2sf11CircleShapeC1Efm@plt>:
  4021c0:	ff 25 1a 9f 00 00    	jmp    *0x9f1a(%rip)        # 40c0e0 <_ZN2sf11CircleShapeC1Efm@Base>
  4021c6:	68 19 00 00 00       	push   $0x19
  4021cb:	e9 50 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021d0 <memcpy@plt>:
  4021d0:	ff 25 12 9f 00 00    	jmp    *0x9f12(%rip)        # 40c0e8 <memcpy@GLIBC_2.14>
  4021d6:	68 1a 00 00 00       	push   $0x1a
  4021db:	e9 40 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021e0 <_ZN2sf6Window9pollEventERNS_5EventE@plt>:
  4021e0:	ff 25 0a 9f 00 00    	jmp    *0x9f0a(%rip)        # 40c0f0 <_ZN2sf6Window9pollEventERNS_5EventE@Base>
  4021e6:	68 1b 00 00 00       	push   $0x1b
  4021eb:	e9 30 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021f0 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@plt>:
  4021f0:	ff 25 02 9f 00 00    	jmp    *0x9f02(%rip)        # 40c0f8 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@Base>
  4021f6:	68 1c 00 00 00       	push   $0x1c
  4021fb:	e9 20 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402200 <__cxa_atexit@plt>:
  402200:	ff 25 fa 9e 00 00    	jmp    *0x9efa(%rip)        # 40c100 <__cxa_atexit@GLIBC_2.2.5>
  402206:	68 1d 00 00 00       	push   $0x1d
  40220b:	e9 10 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402210 <_ZN2sf4Font12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
  402210:	ff 25 f2 9e 00 00    	jmp    *0x9ef2(%rip)        # 40c108 <_ZN2sf4Font12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@Base>
  402216:	68 1e 00 00 00       	push   $0x1e
  40221b:	e9 00 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402220 <_ZdlPvm@plt>:
  402220:	ff 25 ea 9e 00 00    	jmp    *0x9eea(%rip)        # 40c110 <_ZdlPvm@CXXABI_1.3.9>
  402226:	68 1f 00 00 00       	push   $0x1f
  40222b:	e9 f0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>:
  402230:	ff 25 e2 9e 00 00    	jmp    *0x9ee2(%rip)        # 40c118 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@GLIBCXX_3.4.21>
  402236:	68 20 00 00 00       	push   $0x20
  40223b:	e9 e0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402240 <_ZNK2sf6Window6isOpenEv@plt>:
  402240:	ff 25 da 9e 00 00    	jmp    *0x9eda(%rip)        # 40c120 <_ZNK2sf6Window6isOpenEv@Base>
  402246:	68 21 00 00 00       	push   $0x21
  40224b:	e9 d0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402250 <_ZN2sf4FontD1Ev@plt>:
  402250:	ff 25 d2 9e 00 00    	jmp    *0x9ed2(%rip)        # 40c128 <_ZN2sf4FontD1Ev@Base>
  402256:	68 22 00 00 00       	push   $0x22
  40225b:	e9 c0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
  402260:	ff 25 ca 9e 00 00    	jmp    *0x9eca(%rip)        # 40c130 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@GLIBCXX_3.4.9>
  402266:	68 23 00 00 00       	push   $0x23
  40226b:	e9 b0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402270 <_ZNKSt5ctypeIcE13_M_widen_initEv@plt>:
  402270:	ff 25 c2 9e 00 00    	jmp    *0x9ec2(%rip)        # 40c138 <_ZNKSt5ctypeIcE13_M_widen_initEv@GLIBCXX_3.4.11>
  402276:	68 24 00 00 00       	push   $0x24
  40227b:	e9 a0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402280 <_ZN2sf6StringixEm@plt>:
  402280:	ff 25 ba 9e 00 00    	jmp    *0x9eba(%rip)        # 40c140 <_ZN2sf6StringixEm@Base>
  402286:	68 25 00 00 00       	push   $0x25
  40228b:	e9 90 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>:
  402290:	ff 25 b2 9e 00 00    	jmp    *0x9eb2(%rip)        # 40c148 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@GLIBCXX_3.4.21>
  402296:	68 26 00 00 00       	push   $0x26
  40229b:	e9 80 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022a0 <_ZN2sfgeENS_4TimeES0_@plt>:
  4022a0:	ff 25 aa 9e 00 00    	jmp    *0x9eaa(%rip)        # 40c150 <_ZN2sfgeENS_4TimeES0_@Base>
  4022a6:	68 27 00 00 00       	push   $0x27
  4022ab:	e9 70 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022b0 <_ZN2sf6Window17setFramerateLimitEj@plt>:
  4022b0:	ff 25 a2 9e 00 00    	jmp    *0x9ea2(%rip)        # 40c158 <_ZN2sf6Window17setFramerateLimitEj@Base>
  4022b6:	68 28 00 00 00       	push   $0x28
  4022bb:	e9 60 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022c0 <_ZSt16__throw_bad_castv@plt>:
  4022c0:	ff 25 9a 9e 00 00    	jmp    *0x9e9a(%rip)        # 40c160 <_ZSt16__throw_bad_castv@GLIBCXX_3.4>
  4022c6:	68 29 00 00 00       	push   $0x29
  4022cb:	e9 50 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022d0 <_ZN2sf6Window7displayEv@plt>:
  4022d0:	ff 25 92 9e 00 00    	jmp    *0x9e92(%rip)        # 40c168 <_ZN2sf6Window7displayEv@Base>
  4022d6:	68 2a 00 00 00       	push   $0x2a
  4022db:	e9 40 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022e0 <_ZN2sf5ClockC1Ev@plt>:
  4022e0:	ff 25 8a 9e 00 00    	jmp    *0x9e8a(%rip)        # 40c170 <_ZN2sf5ClockC1Ev@Base>
  4022e6:	68 2b 00 00 00       	push   $0x2b
  4022eb:	e9 30 fd ff ff       	jmp    402020 <_init+0x20>

00000000004022f0 <putchar@plt>:
  4022f0:	ff 25 82 9e 00 00    	jmp    *0x9e82(%rip)        # 40c178 <putchar@GLIBC_2.2.5>
  4022f6:	68 2c 00 00 00       	push   $0x2c
  4022fb:	e9 20 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402300 <ioctl@plt>:
  402300:	ff 25 7a 9e 00 00    	jmp    *0x9e7a(%rip)        # 40c180 <ioctl@GLIBC_2.2.5>
  402306:	68 2d 00 00 00       	push   $0x2d
  40230b:	e9 10 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402310 <_ZNSt6localeD1Ev@plt>:
  402310:	ff 25 72 9e 00 00    	jmp    *0x9e72(%rip)        # 40c188 <_ZNSt6localeD1Ev@GLIBCXX_3.4>
  402316:	68 2e 00 00 00       	push   $0x2e
  40231b:	e9 00 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402320 <fprintf@plt>:
  402320:	ff 25 6a 9e 00 00    	jmp    *0x9e6a(%rip)        # 40c190 <fprintf@GLIBC_2.2.5>
  402326:	68 2f 00 00 00       	push   $0x2f
  40232b:	e9 f0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402330 <read@plt>:
  402330:	ff 25 62 9e 00 00    	jmp    *0x9e62(%rip)        # 40c198 <read@GLIBC_2.2.5>
  402336:	68 30 00 00 00       	push   $0x30
  40233b:	e9 e0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402340 <_ZN2sf5MusicD1Ev@plt>:
  402340:	ff 25 5a 9e 00 00    	jmp    *0x9e5a(%rip)        # 40c1a0 <_ZN2sf5MusicD1Ev@Base>
  402346:	68 31 00 00 00       	push   $0x31
  40234b:	e9 d0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402350 <_ZN2sf12RenderWindowC1ENS_9VideoModeERKNS_6StringEjRKNS_15ContextSettingsE@plt>:
  402350:	ff 25 52 9e 00 00    	jmp    *0x9e52(%rip)        # 40c1a8 <_ZN2sf12RenderWindowC1ENS_9VideoModeERKNS_6StringEjRKNS_15ContextSettingsE@Base>
  402356:	68 32 00 00 00       	push   $0x32
  40235b:	e9 c0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402360 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
  402360:	ff 25 4a 9e 00 00    	jmp    *0x9e4a(%rip)        # 40c1b0 <_ZSt24__throw_out_of_range_fmtPKcz@GLIBCXX_3.4.20>
  402366:	68 33 00 00 00       	push   $0x33
  40236b:	e9 b0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402370 <_ZNK2sf6String7getSizeEv@plt>:
  402370:	ff 25 42 9e 00 00    	jmp    *0x9e42(%rip)        # 40c1b8 <_ZNK2sf6String7getSizeEv@Base>
  402376:	68 34 00 00 00       	push   $0x34
  40237b:	e9 a0 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402380 <_ZNSt8ios_base4InitC1Ev@plt>:
  402380:	ff 25 3a 9e 00 00    	jmp    *0x9e3a(%rip)        # 40c1c0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
  402386:	68 35 00 00 00       	push   $0x35
  40238b:	e9 90 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402390 <puts@plt>:
  402390:	ff 25 32 9e 00 00    	jmp    *0x9e32(%rip)        # 40c1c8 <puts@GLIBC_2.2.5>
  402396:	68 36 00 00 00       	push   $0x36
  40239b:	e9 80 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
  4023a0:	ff 25 2a 9e 00 00    	jmp    *0x9e2a(%rip)        # 40c1d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@GLIBCXX_3.4.21>
  4023a6:	68 37 00 00 00       	push   $0x37
  4023ab:	e9 70 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023b0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>:
  4023b0:	ff 25 22 9e 00 00    	jmp    *0x9e22(%rip)        # 40c1d8 <_ZNK2sf5Clock14getElapsedTimeEv@Base>
  4023b6:	68 38 00 00 00       	push   $0x38
  4023bb:	e9 60 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023c0 <_ZNK2sf4Text9getStringEv@plt>:
  4023c0:	ff 25 1a 9e 00 00    	jmp    *0x9e1a(%rip)        # 40c1e0 <_ZNK2sf4Text9getStringEv@Base>
  4023c6:	68 39 00 00 00       	push   $0x39
  4023cb:	e9 50 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023d0 <_ZN2sfpLERNS_4TimeES0_@plt>:
  4023d0:	ff 25 12 9e 00 00    	jmp    *0x9e12(%rip)        # 40c1e8 <_ZN2sfpLERNS_4TimeES0_@Base>
  4023d6:	68 3a 00 00 00       	push   $0x3a
  4023db:	e9 40 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023e0 <_ZN2sf5Clock7restartEv@plt>:
  4023e0:	ff 25 0a 9e 00 00    	jmp    *0x9e0a(%rip)        # 40c1f0 <_ZN2sf5Clock7restartEv@Base>
  4023e6:	68 3b 00 00 00       	push   $0x3b
  4023eb:	e9 30 fc ff ff       	jmp    402020 <_init+0x20>

00000000004023f0 <_ZN2sf11SoundStream4playEv@plt>:
  4023f0:	ff 25 02 9e 00 00    	jmp    *0x9e02(%rip)        # 40c1f8 <_ZN2sf11SoundStream4playEv@Base>
  4023f6:	68 3c 00 00 00       	push   $0x3c
  4023fb:	e9 20 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>:
  402400:	ff 25 fa 9d 00 00    	jmp    *0x9dfa(%rip)        # 40c200 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@Base>
  402406:	68 3d 00 00 00       	push   $0x3d
  40240b:	e9 10 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402410 <_ZN2sfmIERNS_4TimeES0_@plt>:
  402410:	ff 25 f2 9d 00 00    	jmp    *0x9df2(%rip)        # 40c208 <_ZN2sfmIERNS_4TimeES0_@Base>
  402416:	68 3e 00 00 00       	push   $0x3e
  40241b:	e9 00 fc ff ff       	jmp    402020 <_init+0x20>

0000000000402420 <__gxx_personality_v0@plt>:
  402420:	ff 25 ea 9d 00 00    	jmp    *0x9dea(%rip)        # 40c210 <__gxx_personality_v0@CXXABI_1.3>
  402426:	68 3f 00 00 00       	push   $0x3f
  40242b:	e9 f0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402430 <_ZN2sf6StringaSERKS0_@plt>:
  402430:	ff 25 e2 9d 00 00    	jmp    *0x9de2(%rip)        # 40c218 <_ZN2sf6StringaSERKS0_@Base>
  402436:	68 40 00 00 00       	push   $0x40
  40243b:	e9 e0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402440 <_ZNK2sf4Time9asSecondsEv@plt>:
  402440:	ff 25 da 9d 00 00    	jmp    *0x9dda(%rip)        # 40c220 <_ZNK2sf4Time9asSecondsEv@Base>
  402446:	68 41 00 00 00       	push   $0x41
  40244b:	e9 d0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402450 <_ZN2sf12RenderWindowD1Ev@plt>:
  402450:	ff 25 d2 9d 00 00    	jmp    *0x9dd2(%rip)        # 40c228 <_ZN2sf12RenderWindowD1Ev@Base>
  402456:	68 42 00 00 00       	push   $0x42
  40245b:	e9 c0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402460 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>:
  402460:	ff 25 ca 9d 00 00    	jmp    *0x9dca(%rip)        # 40c230 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@Base>
  402466:	68 43 00 00 00       	push   $0x43
  40246b:	e9 b0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>:
  402470:	ff 25 c2 9d 00 00    	jmp    *0x9dc2(%rip)        # 40c238 <_ZN2sf4Text9setStringERKNS_6StringE@Base>
  402476:	68 44 00 00 00       	push   $0x44
  40247b:	e9 a0 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402480 <_Unwind_Resume@plt>:
  402480:	ff 25 ba 9d 00 00    	jmp    *0x9dba(%rip)        # 40c240 <_Unwind_Resume@GCC_3.0>
  402486:	68 45 00 00 00       	push   $0x45
  40248b:	e9 90 fb ff ff       	jmp    402020 <_init+0x20>

0000000000402490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
  402490:	ff 25 b2 9d 00 00    	jmp    *0x9db2(%rip)        # 40c248 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
  402496:	68 46 00 00 00       	push   $0x46
  40249b:	e9 80 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>:
  4024a0:	ff 25 aa 9d 00 00    	jmp    *0x9daa(%rip)        # 40c250 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@Base>
  4024a6:	68 47 00 00 00       	push   $0x47
  4024ab:	e9 70 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024b0 <_ZN2sf4Text12setFillColorERKNS_5ColorE@plt>:
  4024b0:	ff 25 a2 9d 00 00    	jmp    *0x9da2(%rip)        # 40c258 <_ZN2sf4Text12setFillColorERKNS_5ColorE@Base>
  4024b6:	68 48 00 00 00       	push   $0x48
  4024bb:	e9 60 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024c0 <_ZN2sf6Window5closeEv@plt>:
  4024c0:	ff 25 9a 9d 00 00    	jmp    *0x9d9a(%rip)        # 40c260 <_ZN2sf6Window5closeEv@Base>
  4024c6:	68 49 00 00 00       	push   $0x49
  4024cb:	e9 50 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024d0 <_ZNSt6localeC1Ev@plt>:
  4024d0:	ff 25 92 9d 00 00    	jmp    *0x9d92(%rip)        # 40c268 <_ZNSt6localeC1Ev@GLIBCXX_3.4>
  4024d6:	68 4a 00 00 00       	push   $0x4a
  4024db:	e9 40 fb ff ff       	jmp    402020 <_init+0x20>

00000000004024e0 <_ZNSt8ios_base4InitD1Ev@plt>:
  4024e0:	ff 25 8a 9d 00 00    	jmp    *0x9d8a(%rip)        # 40c270 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
  4024e6:	68 4b 00 00 00       	push   $0x4b
  4024eb:	e9 30 fb ff ff       	jmp    402020 <_init+0x20>

Desmontagem da secção .text:

00000000004024f0 <_Z17char_to_stringbitB5cxx11c.cold>:
      _M_length(size_type __length)
      { _M_string_length = __length; }

      pointer
      _M_data() const
      { return _M_dataplus._M_p; }
  4024f0:	49 8b 3c 24          	mov    (%r12),%rdi
      _M_create(size_type&, size_type);

      void
      _M_dispose()
      {
	if (!_M_is_local())
  4024f4:	48 39 fb             	cmp    %rdi,%rbx
  4024f7:	74 0e                	je     402507 <_Z17char_to_stringbitB5cxx11c.cold+0x17>
	  _M_destroy(_M_allocated_capacity);
      }

      void
      _M_destroy(size_type __size) throw()
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4024f9:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
  4024fe:	48 83 c6 01          	add    $0x1,%rsi
# endif
			      std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	::operator delete(__p
  402502:	e8 19 fd ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402507:	48 89 ef             	mov    %rbp,%rdi
  40250a:	e8 71 ff ff ff       	call   402480 <_Unwind_Resume@plt>

000000000040250f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold>:
      { return _M_dataplus._M_p; }
  40250f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  402514:	4c 39 e7             	cmp    %r12,%rdi
  402517:	74 0e                	je     402527 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402519:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  40251e:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402522:	e8 f9 fc ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402527:	48 8b 3c 24          	mov    (%rsp),%rdi
	if (!_M_is_local())
  40252b:	48 39 df             	cmp    %rbx,%rdi
  40252e:	74 0e                	je     40253e <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x2f>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402530:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  402535:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402539:	e8 e2 fc ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  40253e:	48 89 ef             	mov    %rbp,%rdi
  402541:	e8 3a ff ff ff       	call   402480 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  402546:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  40254b:	4c 39 e7             	cmp    %r12,%rdi
  40254e:	74 d7                	je     402527 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402550:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  402555:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402559:	e8 c2 fc ff ff       	call   402220 <_ZdlPvm@plt>
  40255e:	eb c7                	jmp    402527 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { return _M_dataplus._M_p; }
  402560:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  402565:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  40256a:	48 39 c7             	cmp    %rax,%rdi
  40256d:	74 b8                	je     402527 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40256f:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  402574:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402578:	e8 a3 fc ff ff       	call   402220 <_ZdlPvm@plt>
  40257d:	eb a8                	jmp    402527 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { return _M_dataplus._M_p; }
  40257f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  402584:	4c 39 e7             	cmp    %r12,%rdi
  402587:	74 9e                	je     402527 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402589:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  40258e:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402592:	e8 89 fc ff ff       	call   402220 <_ZdlPvm@plt>
  402597:	eb 8e                	jmp    402527 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>

0000000000402599 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold>:
      { return _M_dataplus._M_p; }
  402599:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  40259e:	4c 39 f7             	cmp    %r14,%rdi
  4025a1:	74 0e                	je     4025b1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x18>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4025a3:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4025a8:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4025ac:	e8 6f fc ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4025b1:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  4025b6:	48 39 ef             	cmp    %rbp,%rdi
  4025b9:	74 0e                	je     4025c9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x30>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4025bb:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  4025c0:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4025c4:	e8 57 fc ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4025c9:	4c 89 e7             	mov    %r12,%rdi
  4025cc:	e8 af fe ff ff       	call   402480 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  4025d1:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4025d6:	4c 39 f7             	cmp    %r14,%rdi
  4025d9:	74 0e                	je     4025e9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x50>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4025db:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4025e0:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  4025e4:	e8 37 fc ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4025e9:	48 89 ef             	mov    %rbp,%rdi
  4025ec:	e8 8f fe ff ff       	call   402480 <_Unwind_Resume@plt>

00000000004025f1 <main.cold>:
      { return _M_dataplus._M_p; }
  4025f1:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4025f8:	48 39 df             	cmp    %rbx,%rdi
  4025fb:	0f 85 3a 06 00 00    	jne    402c3b <main.cold+0x64a>
  402601:	4c 89 eb             	mov    %r13,%rbx
      { return _M_dataplus._M_p; }
  402604:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  40260b:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  402612:	74 10                	je     402624 <main.cold+0x33>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402614:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  40261b:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  40261f:	e8 fc fb ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402624:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  40262b:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  402632:	48 39 c7             	cmp    %rax,%rdi
  402635:	74 10                	je     402647 <main.cold+0x56>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402637:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  40263e:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402642:	e8 d9 fb ff ff       	call   402220 <_ZdlPvm@plt>
				{
					elapsedtime_text -= sf::seconds(.1f);
					if (typedtext.getSize() > 0)
					{
						text.setString(text.getString() + typedtext[0]);
						typedtext = typedtext.toAnsiString().substr(1);
  402647:	4c 89 e7             	mov    %r12,%rdi
  40264a:	e8 c1 fc ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  40264f:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  402656:	e8 b5 fc ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
      { return _M_dataplus._M_p; }
  40265b:	48 8b bd a0 c8 ff ff 	mov    -0x3760(%rbp),%rdi
	if (!_M_is_local())
  402662:	48 8d 85 b0 c8 ff ff 	lea    -0x3750(%rbp),%rax
  402669:	48 39 c7             	cmp    %rax,%rdi
  40266c:	74 10                	je     40267e <main.cold+0x8d>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40266e:	48 8b 85 b0 c8 ff ff 	mov    -0x3750(%rbp),%rax
  402675:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402679:	e8 a2 fb ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40267e:	48 8b bd 80 c8 ff ff 	mov    -0x3780(%rbp),%rdi
	if (!_M_is_local())
  402685:	48 8d 85 90 c8 ff ff 	lea    -0x3770(%rbp),%rax
  40268c:	48 39 c7             	cmp    %rax,%rdi
  40268f:	74 10                	je     4026a1 <main.cold+0xb0>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402691:	48 8b 85 90 c8 ff ff 	mov    -0x3770(%rbp),%rax
  402698:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40269c:	e8 7f fb ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4026a1:	48 8b bd 60 c8 ff ff 	mov    -0x37a0(%rbp),%rdi
	if (!_M_is_local())
  4026a8:	48 8d 85 70 c8 ff ff 	lea    -0x3790(%rbp),%rax
  4026af:	48 39 c7             	cmp    %rax,%rdi
  4026b2:	74 14                	je     4026c8 <main.cold+0xd7>
  4026b4:	48 8b 85 70 c8 ff ff 	mov    -0x3790(%rbp),%rax
  4026bb:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4026c2:	00 
  4026c3:	e8 58 fb ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4026c8:	48 8b bd 40 c8 ff ff 	mov    -0x37c0(%rbp),%rdi
	if (!_M_is_local())
  4026cf:	48 8d 85 50 c8 ff ff 	lea    -0x37b0(%rbp),%rax
  4026d6:	48 39 c7             	cmp    %rax,%rdi
  4026d9:	0f 85 c5 04 00 00    	jne    402ba4 <main.cold+0x5b3>
	}

	

	//close(fd);
}
  4026df:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  4026e6:	e8 55 fc ff ff       	call   402340 <_ZN2sf5MusicD1Ev@plt>
  4026eb:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4026f2:	e8 09 61 00 00       	call   408800 <_ZN2sf4TextD1Ev>
  4026f7:	48 8d bd 70 c9 ff ff 	lea    -0x3690(%rbp),%rdi
  4026fe:	e8 4d fb ff ff       	call   402250 <_ZN2sf4FontD1Ev@plt>
{
////////////////////////////////////////////////////////////
/// \brief Specialized shape representing a circle
///
////////////////////////////////////////////////////////////
class SFML_GRAPHICS_API CircleShape : public Shape
  402703:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  402709:	48 8d bd f0 fa ff ff 	lea    -0x510(%rbp),%rdi
  402710:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  402717:	28 bd 40 00 
  40271b:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402720:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402727:	0f 29 85 f0 fa ff ff 	movaps %xmm0,-0x510(%rbp)
  40272e:	e8 2d f9 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402733:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402738:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  40273f:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402746:	0f 29 85 90 f9 ff ff 	movaps %xmm0,-0x670(%rbp)
  40274d:	e8 0e f9 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402752:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402757:	48 8d bd 30 f8 ff ff 	lea    -0x7d0(%rbp),%rdi
  40275e:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402765:	0f 29 85 30 f8 ff ff 	movaps %xmm0,-0x7d0(%rbp)
  40276c:	e8 ef f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402771:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402776:	48 8d bd d0 f6 ff ff 	lea    -0x930(%rbp),%rdi
  40277d:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402784:	0f 29 85 d0 f6 ff ff 	movaps %xmm0,-0x930(%rbp)
  40278b:	e8 d0 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402790:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402795:	48 8d bd 70 f5 ff ff 	lea    -0xa90(%rbp),%rdi
  40279c:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  4027a3:	0f 29 85 70 f5 ff ff 	movaps %xmm0,-0xa90(%rbp)
  4027aa:	e8 b1 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4027af:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4027b4:	48 8d bd 10 f4 ff ff 	lea    -0xbf0(%rbp),%rdi
  4027bb:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  4027c2:	0f 29 85 10 f4 ff ff 	movaps %xmm0,-0xbf0(%rbp)
  4027c9:	e8 92 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4027ce:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4027d3:	48 8d bd b0 f2 ff ff 	lea    -0xd50(%rbp),%rdi
  4027da:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  4027e1:	0f 29 85 b0 f2 ff ff 	movaps %xmm0,-0xd50(%rbp)
  4027e8:	e8 73 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4027ed:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4027f2:	48 8d bd 50 f1 ff ff 	lea    -0xeb0(%rbp),%rdi
  4027f9:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402800:	0f 29 85 50 f1 ff ff 	movaps %xmm0,-0xeb0(%rbp)
  402807:	e8 54 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40280c:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402811:	48 8d bd f0 ef ff ff 	lea    -0x1010(%rbp),%rdi
  402818:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  40281f:	0f 29 85 f0 ef ff ff 	movaps %xmm0,-0x1010(%rbp)
  402826:	e8 35 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40282b:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402830:	48 8d bd 90 ee ff ff 	lea    -0x1170(%rbp),%rdi
  402837:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  40283e:	0f 29 85 90 ee ff ff 	movaps %xmm0,-0x1170(%rbp)
  402845:	e8 16 f8 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40284a:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40284f:	48 8d bd 30 ed ff ff 	lea    -0x12d0(%rbp),%rdi
  402856:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  40285d:	0f 29 85 30 ed ff ff 	movaps %xmm0,-0x12d0(%rbp)
  402864:	e8 f7 f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402869:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40286e:	48 8d bd d0 eb ff ff 	lea    -0x1430(%rbp),%rdi
  402875:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  40287c:	0f 29 85 d0 eb ff ff 	movaps %xmm0,-0x1430(%rbp)
  402883:	e8 d8 f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402888:	66 49 0f 6e c4       	movq   %r12,%xmm0
  40288d:	48 8d bd 70 ea ff ff 	lea    -0x1590(%rbp),%rdi
  402894:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  40289b:	0f 29 85 70 ea ff ff 	movaps %xmm0,-0x1590(%rbp)
  4028a2:	e8 b9 f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4028a7:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4028ac:	48 8d bd 10 e9 ff ff 	lea    -0x16f0(%rbp),%rdi
  4028b3:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  4028ba:	0f 29 85 10 e9 ff ff 	movaps %xmm0,-0x16f0(%rbp)
  4028c1:	e8 9a f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4028c6:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4028cb:	48 8d bd b0 e7 ff ff 	lea    -0x1850(%rbp),%rdi
  4028d2:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  4028d9:	0f 29 85 b0 e7 ff ff 	movaps %xmm0,-0x1850(%rbp)
  4028e0:	e8 7b f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4028e5:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4028ea:	48 8d bd 50 e6 ff ff 	lea    -0x19b0(%rbp),%rdi
  4028f1:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  4028f8:	0f 29 85 50 e6 ff ff 	movaps %xmm0,-0x19b0(%rbp)
  4028ff:	e8 5c f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402904:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402909:	48 8d bd f0 e4 ff ff 	lea    -0x1b10(%rbp),%rdi
  402910:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402917:	0f 29 85 f0 e4 ff ff 	movaps %xmm0,-0x1b10(%rbp)
  40291e:	e8 3d f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402923:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402928:	48 8d bd 90 e3 ff ff 	lea    -0x1c70(%rbp),%rdi
  40292f:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402936:	0f 29 85 90 e3 ff ff 	movaps %xmm0,-0x1c70(%rbp)
  40293d:	e8 1e f7 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402942:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402947:	48 8d bd 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rdi
  40294e:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402955:	0f 29 85 30 e2 ff ff 	movaps %xmm0,-0x1dd0(%rbp)
  40295c:	e8 ff f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402961:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402966:	48 8d bd d0 e0 ff ff 	lea    -0x1f30(%rbp),%rdi
  40296d:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402974:	0f 29 85 d0 e0 ff ff 	movaps %xmm0,-0x1f30(%rbp)
  40297b:	e8 e0 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402980:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402985:	48 8d bd 70 df ff ff 	lea    -0x2090(%rbp),%rdi
  40298c:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402993:	0f 29 85 70 df ff ff 	movaps %xmm0,-0x2090(%rbp)
  40299a:	e8 c1 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40299f:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4029a4:	48 8d bd 10 de ff ff 	lea    -0x21f0(%rbp),%rdi
  4029ab:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  4029b2:	0f 29 85 10 de ff ff 	movaps %xmm0,-0x21f0(%rbp)
  4029b9:	e8 a2 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4029be:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4029c3:	48 8d bd b0 dc ff ff 	lea    -0x2350(%rbp),%rdi
  4029ca:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  4029d1:	0f 29 85 b0 dc ff ff 	movaps %xmm0,-0x2350(%rbp)
  4029d8:	e8 83 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4029dd:	66 49 0f 6e c4       	movq   %r12,%xmm0
  4029e2:	48 8d bd 50 db ff ff 	lea    -0x24b0(%rbp),%rdi
  4029e9:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  4029f0:	0f 29 85 50 db ff ff 	movaps %xmm0,-0x24b0(%rbp)
  4029f7:	e8 64 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  4029fc:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a01:	48 8d bd f0 d9 ff ff 	lea    -0x2610(%rbp),%rdi
  402a08:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402a0f:	0f 29 85 f0 d9 ff ff 	movaps %xmm0,-0x2610(%rbp)
  402a16:	e8 45 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a1b:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a20:	48 8d bd 90 d8 ff ff 	lea    -0x2770(%rbp),%rdi
  402a27:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402a2e:	0f 29 85 90 d8 ff ff 	movaps %xmm0,-0x2770(%rbp)
  402a35:	e8 26 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a3a:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a3f:	48 8d bd 30 d7 ff ff 	lea    -0x28d0(%rbp),%rdi
  402a46:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402a4d:	0f 29 85 30 d7 ff ff 	movaps %xmm0,-0x28d0(%rbp)
  402a54:	e8 07 f6 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a59:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a5e:	48 8d bd d0 d5 ff ff 	lea    -0x2a30(%rbp),%rdi
  402a65:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402a6c:	0f 29 85 d0 d5 ff ff 	movaps %xmm0,-0x2a30(%rbp)
  402a73:	e8 e8 f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a78:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a7d:	48 8d bd 70 d4 ff ff 	lea    -0x2b90(%rbp),%rdi
  402a84:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402a8b:	0f 29 85 70 d4 ff ff 	movaps %xmm0,-0x2b90(%rbp)
  402a92:	e8 c9 f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402a97:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402a9c:	48 8d bd 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rdi
  402aa3:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402aaa:	0f 29 85 10 d3 ff ff 	movaps %xmm0,-0x2cf0(%rbp)
  402ab1:	e8 aa f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402ab6:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402abb:	48 8d bd b0 d1 ff ff 	lea    -0x2e50(%rbp),%rdi
  402ac2:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402ac9:	0f 29 85 b0 d1 ff ff 	movaps %xmm0,-0x2e50(%rbp)
  402ad0:	e8 8b f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402ad5:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402ada:	48 8d bd 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rdi
  402ae1:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402ae8:	0f 29 85 50 d0 ff ff 	movaps %xmm0,-0x2fb0(%rbp)
  402aef:	e8 6c f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402af4:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402af9:	48 8d bd f0 ce ff ff 	lea    -0x3110(%rbp),%rdi
  402b00:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402b07:	0f 29 85 f0 ce ff ff 	movaps %xmm0,-0x3110(%rbp)
  402b0e:	e8 4d f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402b13:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402b18:	48 8d bd 90 cd ff ff 	lea    -0x3270(%rbp),%rdi
  402b1f:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402b26:	0f 29 85 90 cd ff ff 	movaps %xmm0,-0x3270(%rbp)
  402b2d:	e8 2e f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402b32:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402b37:	48 8d bd 30 cc ff ff 	lea    -0x33d0(%rbp),%rdi
  402b3e:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402b45:	0f 29 85 30 cc ff ff 	movaps %xmm0,-0x33d0(%rbp)
  402b4c:	e8 0f f5 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402b51:	66 49 0f 6e c4       	movq   %r12,%xmm0
  402b56:	48 8d bd d0 ca ff ff 	lea    -0x3530(%rbp),%rdi
  402b5d:	0f 16 85 60 c7 ff ff 	movhps -0x38a0(%rbp),%xmm0
  402b64:	0f 29 85 d0 ca ff ff 	movaps %xmm0,-0x3530(%rbp)
  402b6b:	e8 f0 f4 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  402b70:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  402b77:	e8 d4 f8 ff ff       	call   402450 <_ZN2sf12RenderWindowD1Ev@plt>
  402b7c:	48 89 df             	mov    %rbx,%rdi
  402b7f:	e8 fc f8 ff ff       	call   402480 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  402b84:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402b8b:	48 39 df             	cmp    %rbx,%rdi
  402b8e:	0f 85 72 04 00 00    	jne    403006 <main.cold+0xa15>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402b94:	4c 89 fb             	mov    %r15,%rbx
					typedtext.insert(0, "[root@bois ~] $ Tem alguma coisa piscando\n\n[root@bois ~] $ voce deveria prestar atencao");
  402b97:	4c 89 f7             	mov    %r14,%rdi
  402b9a:	e8 71 f7 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  402b9f:	e9 b7 fa ff ff       	jmp    40265b <main.cold+0x6a>
	::operator delete(__p
  402ba4:	48 8b 85 50 c8 ff ff 	mov    -0x37b0(%rbp),%rax
  402bab:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402bb2:	00 
  402bb3:	e8 68 f6 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402bb8:	e9 22 fb ff ff       	jmp    4026df <main.cold+0xee>
      { return _M_dataplus._M_p; }
  402bbd:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402bc4:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  402bcb:	48 39 c7             	cmp    %rax,%rdi
  402bce:	74 c7                	je     402b97 <main.cold+0x5a6>
  402bd0:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402bd7:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402bde:	00 
  402bdf:	e8 3c f6 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402be4:	eb b1                	jmp    402b97 <main.cold+0x5a6>
      { return _M_dataplus._M_p; }
  402be6:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402bed:	48 39 df             	cmp    %rbx,%rdi
  402bf0:	74 14                	je     402c06 <main.cold+0x615>
  402bf2:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402bf9:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402c00:	00 
  402c01:	e8 1a f6 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402c06:	4c 89 fb             	mov    %r15,%rbx
  402c09:	eb 8c                	jmp    402b97 <main.cold+0x5a6>
      { return _M_dataplus._M_p; }
  402c0b:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402c12:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  402c19:	48 39 c7             	cmp    %rax,%rdi
  402c1c:	0f 84 75 ff ff ff    	je     402b97 <main.cold+0x5a6>
	::operator delete(__p
  402c22:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402c29:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402c30:	00 
  402c31:	e8 ea f5 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402c36:	e9 5c ff ff ff       	jmp    402b97 <main.cold+0x5a6>
  402c3b:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402c42:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402c49:	00 
  402c4a:	e8 d1 f5 ff ff       	call   402220 <_ZdlPvm@plt>
  402c4f:	e9 ad f9 ff ff       	jmp    402601 <main.cold+0x10>
      { return _M_dataplus._M_p; }
  402c54:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
	if (!_M_is_local())
  402c5b:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  402c62:	48 39 c7             	cmp    %rax,%rdi
  402c65:	0f 84 8c fa ff ff    	je     4026f7 <main.cold+0x106>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402c6b:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  402c72:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402c76:	e8 a5 f5 ff ff       	call   402220 <_ZdlPvm@plt>
  402c7b:	e9 77 fa ff ff       	jmp    4026f7 <main.cold+0x106>
      { return _M_dataplus._M_p; }
  402c80:	48 8b bd 00 ca ff ff 	mov    -0x3600(%rbp),%rdi
	if (!_M_is_local())
  402c87:	48 8d 85 10 ca ff ff 	lea    -0x35f0(%rbp),%rax
  402c8e:	48 39 c7             	cmp    %rax,%rdi
  402c91:	74 14                	je     402ca7 <main.cold+0x6b6>
  402c93:	48 8b 85 10 ca ff ff 	mov    -0x35f0(%rbp),%rax
  402c9a:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402ca1:	00 
  402ca2:	e8 79 f5 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402ca7:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  402cae:	e8 5d f6 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  402cb3:	e9 3f fa ff ff       	jmp    4026f7 <main.cold+0x106>
      { return _M_dataplus._M_p; }
  402cb8:	48 8b bd 20 c9 ff ff 	mov    -0x36e0(%rbp),%rdi
	if (!_M_is_local())
  402cbf:	48 8d 85 30 c9 ff ff 	lea    -0x36d0(%rbp),%rax
  402cc6:	48 39 c7             	cmp    %rax,%rdi
  402cc9:	0f 84 10 fa ff ff    	je     4026df <main.cold+0xee>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402ccf:	48 8b 85 30 c9 ff ff 	mov    -0x36d0(%rbp),%rax
  402cd6:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402cda:	e8 41 f5 ff ff       	call   402220 <_ZdlPvm@plt>
  402cdf:	e9 fb f9 ff ff       	jmp    4026df <main.cold+0xee>
      { return _M_dataplus._M_p; }
  402ce4:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402ceb:	48 39 df             	cmp    %rbx,%rdi
  402cee:	0f 85 53 03 00 00    	jne    403047 <main.cold+0xa56>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402cf4:	4c 89 eb             	mov    %r13,%rbx
      { return _M_dataplus._M_p; }
  402cf7:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  402cfe:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  402d05:	74 10                	je     402d17 <main.cold+0x726>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402d07:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  402d0e:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402d12:	e8 09 f5 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402d17:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  402d1e:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  402d25:	48 39 c7             	cmp    %rax,%rdi
  402d28:	0f 84 19 f9 ff ff    	je     402647 <main.cold+0x56>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402d2e:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  402d35:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402d39:	e8 e2 f4 ff ff       	call   402220 <_ZdlPvm@plt>
  402d3e:	e9 04 f9 ff ff       	jmp    402647 <main.cold+0x56>
      { return _M_dataplus._M_p; }
  402d43:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402d4a:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  402d51:	48 39 c7             	cmp    %rax,%rdi
  402d54:	74 14                	je     402d6a <main.cold+0x779>
  402d56:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402d5d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402d64:	00 
  402d65:	e8 b6 f4 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402d6a:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  402d71:	48 8d 85 f0 c8 ff ff 	lea    -0x3710(%rbp),%rax
  402d78:	48 39 c7             	cmp    %rax,%rdi
  402d7b:	0f 84 da f8 ff ff    	je     40265b <main.cold+0x6a>
  402d81:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  402d88:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402d8f:	00 
  402d90:	e8 8b f4 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402d95:	e9 c1 f8 ff ff       	jmp    40265b <main.cold+0x6a>
  402d9a:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  402da1:	e8 6a f5 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  402da6:	e9 1d f9 ff ff       	jmp    4026c8 <main.cold+0xd7>
  402dab:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  402db2:	e8 59 f5 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  402db7:	e9 23 f9 ff ff       	jmp    4026df <main.cold+0xee>
      { return _M_dataplus._M_p; }
  402dbc:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402dc3:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  402dca:	48 39 c7             	cmp    %rax,%rdi
  402dcd:	74 9b                	je     402d6a <main.cold+0x779>
  402dcf:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402dd6:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402ddd:	00 
  402dde:	e8 3d f4 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402de3:	eb 85                	jmp    402d6a <main.cold+0x779>
      { return _M_dataplus._M_p; }
  402de5:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402dec:	48 39 df             	cmp    %rbx,%rdi
  402def:	74 14                	je     402e05 <main.cold+0x814>
  402df1:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402df8:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402dff:	00 
  402e00:	e8 1b f4 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402e05:	4c 89 fb             	mov    %r15,%rbx
  402e08:	e9 8a fd ff ff       	jmp    402b97 <main.cold+0x5a6>
      { return _M_dataplus._M_p; }
  402e0d:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
	if (!_M_is_local())
  402e14:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  402e1b:	48 39 c7             	cmp    %rax,%rdi
  402e1e:	74 14                	je     402e34 <main.cold+0x843>
	::operator delete(__p
  402e20:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  402e27:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402e2e:	00 
  402e2f:	e8 ec f3 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402e34:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  402e3b:	e8 d0 f4 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  402e40:	48 89 df             	mov    %rbx,%rdi
  402e43:	e8 38 f6 ff ff       	call   402480 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
  402e48:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402e4f:	48 39 df             	cmp    %rbx,%rdi
  402e52:	74 14                	je     402e68 <main.cold+0x877>
	::operator delete(__p
  402e54:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402e5b:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402e62:	00 
  402e63:	e8 b8 f3 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402e68:	4c 89 e3             	mov    %r12,%rbx
  402e6b:	e9 df f7 ff ff       	jmp    40264f <main.cold+0x5e>
      { return _M_dataplus._M_p; }
  402e70:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402e77:	48 39 df             	cmp    %rbx,%rdi
  402e7a:	74 14                	je     402e90 <main.cold+0x89f>
	::operator delete(__p
  402e7c:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402e83:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402e8a:	00 
  402e8b:	e8 90 f3 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402e90:	4c 89 eb             	mov    %r13,%rbx
      { return _M_dataplus._M_p; }
  402e93:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  402e9a:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  402ea1:	74 10                	je     402eb3 <main.cold+0x8c2>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402ea3:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  402eaa:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402eae:	e8 6d f3 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402eb3:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  402eba:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  402ec1:	48 39 c7             	cmp    %rax,%rdi
  402ec4:	0f 84 7d f7 ff ff    	je     402647 <main.cold+0x56>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402eca:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  402ed1:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402ed5:	e8 46 f3 ff ff       	call   402220 <_ZdlPvm@plt>
  402eda:	e9 68 f7 ff ff       	jmp    402647 <main.cold+0x56>
      { return _M_dataplus._M_p; }
  402edf:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402ee6:	48 39 df             	cmp    %rbx,%rdi
  402ee9:	74 14                	je     402eff <main.cold+0x90e>
  402eeb:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402ef2:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402ef9:	00 
  402efa:	e8 21 f3 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402eff:	4c 89 fb             	mov    %r15,%rbx
  402f02:	e9 90 fc ff ff       	jmp    402b97 <main.cold+0x5a6>
      { return _M_dataplus._M_p; }
  402f07:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402f0e:	48 39 df             	cmp    %rbx,%rdi
  402f11:	74 14                	je     402f27 <main.cold+0x936>
	::operator delete(__p
  402f13:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402f1a:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402f21:	00 
  402f22:	e8 f9 f2 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  402f27:	4c 89 eb             	mov    %r13,%rbx
      { return _M_dataplus._M_p; }
  402f2a:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  402f31:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  402f38:	74 10                	je     402f4a <main.cold+0x959>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402f3a:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  402f41:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  402f45:	e8 d6 f2 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  402f4a:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  402f51:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  402f58:	48 39 c7             	cmp    %rax,%rdi
  402f5b:	0f 84 e6 f6 ff ff    	je     402647 <main.cold+0x56>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402f61:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  402f68:	48 8d 70 01          	lea    0x1(%rax),%rsi
  402f6c:	e8 af f2 ff ff       	call   402220 <_ZdlPvm@plt>
  402f71:	e9 d1 f6 ff ff       	jmp    402647 <main.cold+0x56>
      { return _M_dataplus._M_p; }
  402f76:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402f7d:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  402f84:	48 39 c7             	cmp    %rax,%rdi
  402f87:	0f 84 dd fd ff ff    	je     402d6a <main.cold+0x779>
  402f8d:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402f94:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402f9b:	00 
  402f9c:	e8 7f f2 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402fa1:	e9 c4 fd ff ff       	jmp    402d6a <main.cold+0x779>
      { return _M_dataplus._M_p; }
  402fa6:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402fad:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  402fb4:	48 39 c7             	cmp    %rax,%rdi
  402fb7:	0f 84 da fb ff ff    	je     402b97 <main.cold+0x5a6>
  402fbd:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402fc4:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402fcb:	00 
  402fcc:	e8 4f f2 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  402fd1:	e9 c1 fb ff ff       	jmp    402b97 <main.cold+0x5a6>
      { return _M_dataplus._M_p; }
  402fd6:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  402fdd:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  402fe4:	48 39 c7             	cmp    %rax,%rdi
  402fe7:	0f 84 62 f6 ff ff    	je     40264f <main.cold+0x5e>
  402fed:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  402ff4:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  402ffb:	00 
  402ffc:	e8 1f f2 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403001:	e9 49 f6 ff ff       	jmp    40264f <main.cold+0x5e>
  403006:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  40300d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403014:	00 
  403015:	e8 06 f2 ff ff       	call   402220 <_ZdlPvm@plt>
  40301a:	e9 75 fb ff ff       	jmp    402b94 <main.cold+0x5a3>
      { return _M_dataplus._M_p; }
  40301f:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  403026:	48 39 df             	cmp    %rbx,%rdi
  403029:	74 14                	je     40303f <main.cold+0xa4e>
  40302b:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  403032:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403039:	00 
  40303a:	e8 e1 f1 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  40303f:	4c 89 fb             	mov    %r15,%rbx
  403042:	e9 50 fb ff ff       	jmp    402b97 <main.cold+0x5a6>
	::operator delete(__p
  403047:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  40304e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403055:	00 
  403056:	e8 c5 f1 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40305b:	e9 94 fc ff ff       	jmp    402cf4 <main.cold+0x703>
      { return _M_dataplus._M_p; }
  403060:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  403067:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  40306e:	48 39 c7             	cmp    %rax,%rdi
  403071:	0f 84 20 fb ff ff    	je     402b97 <main.cold+0x5a6>
  403077:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  40307e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403085:	00 
  403086:	e8 95 f1 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40308b:	e9 07 fb ff ff       	jmp    402b97 <main.cold+0x5a6>
      { return _M_dataplus._M_p; }
  403090:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  403097:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  40309e:	48 39 c7             	cmp    %rax,%rdi
  4030a1:	0f 84 f0 fa ff ff    	je     402b97 <main.cold+0x5a6>
  4030a7:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4030ae:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4030b5:	00 
  4030b6:	e8 65 f1 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4030bb:	e9 d7 fa ff ff       	jmp    402b97 <main.cold+0x5a6>
      { return _M_dataplus._M_p; }
  4030c0:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4030c7:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  4030ce:	48 39 c7             	cmp    %rax,%rdi
  4030d1:	0f 84 78 f5 ff ff    	je     40264f <main.cold+0x5e>
  4030d7:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4030de:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4030e5:	00 
  4030e6:	e8 35 f1 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4030eb:	e9 5f f5 ff ff       	jmp    40264f <main.cold+0x5e>
      { return _M_dataplus._M_p; }
  4030f0:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4030f7:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  4030fe:	48 39 c7             	cmp    %rax,%rdi
  403101:	0f 84 63 fc ff ff    	je     402d6a <main.cold+0x779>
  403107:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  40310e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403115:	00 
  403116:	e8 05 f1 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40311b:	e9 4a fc ff ff       	jmp    402d6a <main.cold+0x779>
      { return _M_dataplus._M_p; }
  403120:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  403127:	48 39 df             	cmp    %rbx,%rdi
  40312a:	74 14                	je     403140 <main.cold+0xb4f>
  40312c:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  403133:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40313a:	00 
  40313b:	e8 e0 f0 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403140:	4c 89 e3             	mov    %r12,%rbx
  403143:	e9 07 f5 ff ff       	jmp    40264f <main.cold+0x5e>
      { return _M_dataplus._M_p; }
  403148:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  40314f:	48 39 df             	cmp    %rbx,%rdi
  403152:	75 7f                	jne    4031d3 <main.cold+0xbe2>
  403154:	4c 89 eb             	mov    %r13,%rbx
      { return _M_dataplus._M_p; }
  403157:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  40315e:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  403165:	74 10                	je     403177 <main.cold+0xb86>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403167:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  40316e:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  403172:	e8 a9 f0 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  403177:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  40317e:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  403185:	48 39 c7             	cmp    %rax,%rdi
  403188:	0f 84 b9 f4 ff ff    	je     402647 <main.cold+0x56>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40318e:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  403195:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403199:	e8 82 f0 ff ff       	call   402220 <_ZdlPvm@plt>
  40319e:	e9 a4 f4 ff ff       	jmp    402647 <main.cold+0x56>
      { return _M_dataplus._M_p; }
  4031a3:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4031aa:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  4031b1:	48 39 c7             	cmp    %rax,%rdi
  4031b4:	0f 84 b0 fb ff ff    	je     402d6a <main.cold+0x779>
  4031ba:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4031c1:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4031c8:	00 
  4031c9:	e8 52 f0 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4031ce:	e9 97 fb ff ff       	jmp    402d6a <main.cold+0x779>
  4031d3:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4031da:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4031e1:	00 
  4031e2:	e8 39 f0 ff ff       	call   402220 <_ZdlPvm@plt>
  4031e7:	e9 68 ff ff ff       	jmp    403154 <main.cold+0xb63>
      { return _M_dataplus._M_p; }
  4031ec:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4031f3:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  4031fa:	48 39 c7             	cmp    %rax,%rdi
  4031fd:	0f 84 67 fb ff ff    	je     402d6a <main.cold+0x779>
  403203:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  40320a:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403211:	00 
  403212:	e8 09 f0 ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403217:	e9 4e fb ff ff       	jmp    402d6a <main.cold+0x779>
      { return _M_dataplus._M_p; }
  40321c:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  403223:	48 39 df             	cmp    %rbx,%rdi
  403226:	0f 85 ee 00 00 00    	jne    40331a <main.cold+0xd29>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  40322c:	4c 89 eb             	mov    %r13,%rbx
      { return _M_dataplus._M_p; }
  40322f:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  403236:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  40323d:	74 10                	je     40324f <main.cold+0xc5e>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  40323f:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  403246:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  40324a:	e8 d1 ef ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40324f:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  403256:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  40325d:	48 39 c7             	cmp    %rax,%rdi
  403260:	0f 84 e1 f3 ff ff    	je     402647 <main.cold+0x56>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403266:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  40326d:	48 8d 70 01          	lea    0x1(%rax),%rsi
  403271:	e8 aa ef ff ff       	call   402220 <_ZdlPvm@plt>
  403276:	e9 cc f3 ff ff       	jmp    402647 <main.cold+0x56>
      { return _M_dataplus._M_p; }
  40327b:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  403282:	48 39 df             	cmp    %rbx,%rdi
  403285:	74 14                	je     40329b <main.cold+0xcaa>
  403287:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  40328e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403295:	00 
  403296:	e8 85 ef ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  40329b:	4c 89 eb             	mov    %r13,%rbx
      { return _M_dataplus._M_p; }
  40329e:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  4032a5:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  4032ac:	74 10                	je     4032be <main.cold+0xccd>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4032ae:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  4032b5:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  4032b9:	e8 62 ef ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4032be:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  4032c5:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  4032cc:	48 39 c7             	cmp    %rax,%rdi
  4032cf:	0f 84 72 f3 ff ff    	je     402647 <main.cold+0x56>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4032d5:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  4032dc:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4032e0:	e8 3b ef ff ff       	call   402220 <_ZdlPvm@plt>
  4032e5:	e9 5d f3 ff ff       	jmp    402647 <main.cold+0x56>
      { return _M_dataplus._M_p; }
  4032ea:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4032f1:	48 8d 85 10 c9 ff ff 	lea    -0x36f0(%rbp),%rax
  4032f8:	48 39 c7             	cmp    %rax,%rdi
  4032fb:	0f 84 69 fa ff ff    	je     402d6a <main.cold+0x779>
  403301:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  403308:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40330f:	00 
  403310:	e8 0b ef ff ff       	call   402220 <_ZdlPvm@plt>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  403315:	e9 50 fa ff ff       	jmp    402d6a <main.cold+0x779>
  40331a:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  403321:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  403328:	00 
  403329:	e8 f2 ee ff ff       	call   402220 <_ZdlPvm@plt>
  40332e:	e9 f9 fe ff ff       	jmp    40322c <main.cold+0xc3b>

0000000000403333 <.annobin_abi_note.c.exit>:
  403333:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40333a:	00 00 00 
  40333d:	0f 1f 00             	nopl   (%rax)

0000000000403340 <_GLOBAL__sub_I__Z17char_to_stringbitB5cxx11c>:
}
  403340:	48 83 ec 08          	sub    $0x8,%rsp
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
  403344:	bf 29 c4 40 00       	mov    $0x40c429,%edi
  403349:	e8 32 f0 ff ff       	call   402380 <_ZNSt8ios_base4InitC1Ev@plt>
  40334e:	ba 08 90 40 00       	mov    $0x409008,%edx
  403353:	be 29 c4 40 00       	mov    $0x40c429,%esi
  403358:	bf e0 24 40 00       	mov    $0x4024e0,%edi
  40335d:	48 83 c4 08          	add    $0x8,%rsp
  403361:	e9 9a ee ff ff       	jmp    402200 <__cxa_atexit@plt>
  403366:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40336d:	00 00 00 

0000000000403370 <main>:
{
  403370:	55                   	push   %rbp
  403371:	48 89 e5             	mov    %rsp,%rbp
  403374:	41 57                	push   %r15
  403376:	41 56                	push   %r14
  403378:	41 55                	push   %r13
  40337a:	41 54                	push   %r12
  40337c:	53                   	push   %rbx
  40337d:	48 89 f3             	mov    %rsi,%rbx
  403380:	48 81 ec b8 38 00 00 	sub    $0x38b8,%rsp
if(argc < 2){
  403387:	83 ff 01             	cmp    $0x1,%edi
  40338a:	0f 8e b8 3a 00 00    	jle    406e48 <main+0x3ad8>
if((fd = open(argv[1], O_RDWR)) < 0){
  403390:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  403394:	31 c0                	xor    %eax,%eax
  403396:	be 02 00 00 00       	mov    $0x2,%esi
  40339b:	e8 f0 ed ff ff       	call   402190 <open@plt>
  4033a0:	41 89 c7             	mov    %eax,%r15d
  4033a3:	85 c0                	test   %eax,%eax
  4033a5:	0f 88 ff 3a 00 00    	js     406eaa <main+0x3b3a>
sf::VideoMode videomode(800, 600);
  4033ab:	ba 58 02 00 00       	mov    $0x258,%edx
  4033b0:	be 20 03 00 00       	mov    $0x320,%esi
  4033b5:	b9 20 00 00 00       	mov    $0x20,%ecx
  4033ba:	48 8d bd f4 c7 ff ff 	lea    -0x380c(%rbp),%rdi
  4033c1:	e8 da ed ff ff       	call   4021a0 <_ZN2sf9VideoModeC1Ejjj@plt>
    /// \param attributes   Attribute flags of the context
    /// \param sRgb         sRGB capable framebuffer
    ///
    ////////////////////////////////////////////////////////////
    explicit ContextSettings(unsigned int depth = 0, unsigned int stencil = 0, unsigned int antialiasing = 0, unsigned int major = 1, unsigned int minor = 1, unsigned int attributes = Default, bool sRgb = false) :
    depthBits        (depth),
  4033c6:	66 0f 6f 05 32 63 00 	movdqa 0x6332(%rip),%xmm0        # 409700 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x100>
  4033cd:	00 
    stencilBits      (stencil),
    antialiasingLevel(antialiasing),
    majorVersion     (major),
    minorVersion     (minor),
  4033ce:	48 8b 05 03 63 00 00 	mov    0x6303(%rip),%rax        # 4096d8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd8>
sf::RenderWindow window(videomode, "Project IHS", sf::Style::Titlebar | sf::Style::Default); //close button and not resizable
  4033d5:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
    attributeFlags   (attributes),
    sRgbCapable      (sRgb)
  4033dc:	c6 85 08 fb ff ff 00 	movb   $0x0,-0x4f8(%rbp)
    minorVersion     (minor),
  4033e3:	48 89 85 00 fb ff ff 	mov    %rax,-0x500(%rbp)
    depthBits        (depth),
  4033ea:	0f 29 85 f0 fa ff ff 	movaps %xmm0,-0x510(%rbp)
  4033f1:	e8 da f0 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  4033f6:	48 8d 95 90 f9 ff ff 	lea    -0x670(%rbp),%rdx
  4033fd:	be 9a 90 40 00       	mov    $0x40909a,%esi
  403402:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  403409:	e8 e2 ec ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  40340e:	48 8b b5 f4 c7 ff ff 	mov    -0x380c(%rbp),%rsi
  403415:	8b 95 fc c7 ff ff    	mov    -0x3804(%rbp),%edx
  40341b:	4c 8d 8d f0 fa ff ff 	lea    -0x510(%rbp),%r9
  403422:	41 b8 07 00 00 00    	mov    $0x7,%r8d
  403428:	48 8d 8d 50 fc ff ff 	lea    -0x3b0(%rbp),%rcx
  40342f:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  403436:	e8 15 ef ff ff       	call   402350 <_ZN2sf12RenderWindowC1ENS_9VideoModeERKNS_6StringEjRKNS_15ContextSettingsE@plt>
      { return _M_dataplus._M_p; }
  40343b:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
	if (!_M_is_local())
  403442:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  403449:	48 39 c7             	cmp    %rax,%rdi
  40344c:	74 14                	je     403462 <main+0xf2>
  40344e:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  403455:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40345c:	00 
  40345d:	e8 be ed ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  403462:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  403469:	e8 a2 ee ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
sf::CircleShape greenSquare1(30, 4);
  40346e:	f3 0f 10 05 ba 62 00 	movss  0x62ba(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403475:	00 
  403476:	be 04 00 00 00       	mov    $0x4,%esi
  40347b:	48 8d bd d0 ca ff ff 	lea    -0x3530(%rbp),%rdi
  403482:	e8 39 ed ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare1.setFillColor(GREEN);
  403487:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  40348d:	b9 99 00 00 00       	mov    $0x99,%ecx
  403492:	ba de 00 00 00       	mov    $0xde,%edx
  403497:	be 6c 00 00 00       	mov    $0x6c,%esi
  40349c:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4034a3:	e8 58 ec ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4034a8:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4034af:	48 8d bd d0 ca ff ff 	lea    -0x3530(%rbp),%rdi
  4034b6:	e8 e5 ef ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare1.setPosition(20.f, 50.f);
  4034bb:	f3 0f 10 0d 71 62 00 	movss  0x6271(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  4034c2:	00 
  4034c3:	f3 0f 10 05 6d 62 00 	movss  0x626d(%rip),%xmm0        # 409738 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  4034ca:	00 
  4034cb:	48 8d bd d8 ca ff ff 	lea    -0x3528(%rbp),%rdi
  4034d2:	e8 59 ec ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare1(30, 4);
  4034d7:	f3 0f 10 05 51 62 00 	movss  0x6251(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4034de:	00 
  4034df:	be 04 00 00 00       	mov    $0x4,%esi
  4034e4:	48 8d bd 30 cc ff ff 	lea    -0x33d0(%rbp),%rdi
  4034eb:	e8 d0 ec ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare1.setFillColor(RED);
  4034f0:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4034f6:	31 c9                	xor    %ecx,%ecx
  4034f8:	31 d2                	xor    %edx,%edx
  4034fa:	be fe 00 00 00       	mov    $0xfe,%esi
  4034ff:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403506:	e8 f5 eb ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40350b:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403512:	48 8d bd 30 cc ff ff 	lea    -0x33d0(%rbp),%rdi
  403519:	e8 82 ef ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare1.setPosition(20.f, 50.f);
  40351e:	f3 0f 10 0d 0e 62 00 	movss  0x620e(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403525:	00 
  403526:	f3 0f 10 05 0a 62 00 	movss  0x620a(%rip),%xmm0        # 409738 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  40352d:	00 
  40352e:	48 8d bd 38 cc ff ff 	lea    -0x33c8(%rbp),%rdi
  403535:	e8 f6 eb ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare2(30, 4);
  40353a:	f3 0f 10 05 ee 61 00 	movss  0x61ee(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403541:	00 
  403542:	be 04 00 00 00       	mov    $0x4,%esi
  403547:	48 8d bd 90 cd ff ff 	lea    -0x3270(%rbp),%rdi
  40354e:	e8 6d ec ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare2.setFillColor(GREEN);
  403553:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403559:	b9 99 00 00 00       	mov    $0x99,%ecx
  40355e:	ba de 00 00 00       	mov    $0xde,%edx
  403563:	be 6c 00 00 00       	mov    $0x6c,%esi
  403568:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40356f:	e8 8c eb ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403574:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40357b:	48 8d bd 90 cd ff ff 	lea    -0x3270(%rbp),%rdi
  403582:	e8 19 ef ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare2.setPosition(100.f, 50.f);
  403587:	f3 0f 10 0d a5 61 00 	movss  0x61a5(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  40358e:	00 
  40358f:	f3 0f 10 05 a5 61 00 	movss  0x61a5(%rip),%xmm0        # 40973c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403596:	00 
  403597:	48 8d bd 98 cd ff ff 	lea    -0x3268(%rbp),%rdi
  40359e:	e8 8d eb ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare2(30, 4);
  4035a3:	f3 0f 10 05 85 61 00 	movss  0x6185(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4035aa:	00 
  4035ab:	be 04 00 00 00       	mov    $0x4,%esi
  4035b0:	48 8d bd f0 ce ff ff 	lea    -0x3110(%rbp),%rdi
  4035b7:	e8 04 ec ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare2.setFillColor(RED);
  4035bc:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4035c2:	31 c9                	xor    %ecx,%ecx
  4035c4:	31 d2                	xor    %edx,%edx
  4035c6:	be fe 00 00 00       	mov    $0xfe,%esi
  4035cb:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4035d2:	e8 29 eb ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4035d7:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4035de:	48 8d bd f0 ce ff ff 	lea    -0x3110(%rbp),%rdi
  4035e5:	e8 b6 ee ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare2.setPosition(100.f, 50.f);
  4035ea:	f3 0f 10 0d 42 61 00 	movss  0x6142(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  4035f1:	00 
  4035f2:	f3 0f 10 05 42 61 00 	movss  0x6142(%rip),%xmm0        # 40973c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  4035f9:	00 
  4035fa:	48 8d bd f8 ce ff ff 	lea    -0x3108(%rbp),%rdi
  403601:	e8 2a eb ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare3(30, 4);
  403606:	f3 0f 10 05 22 61 00 	movss  0x6122(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  40360d:	00 
  40360e:	be 04 00 00 00       	mov    $0x4,%esi
  403613:	48 8d bd 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rdi
  40361a:	e8 a1 eb ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare3.setFillColor(GREEN);
  40361f:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403625:	b9 99 00 00 00       	mov    $0x99,%ecx
  40362a:	ba de 00 00 00       	mov    $0xde,%edx
  40362f:	be 6c 00 00 00       	mov    $0x6c,%esi
  403634:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40363b:	e8 c0 ea ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403640:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403647:	48 8d bd 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rdi
  40364e:	e8 4d ee ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare3.setPosition(180.f, 50.f);
  403653:	f3 0f 10 0d d9 60 00 	movss  0x60d9(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  40365a:	00 
  40365b:	f3 0f 10 05 dd 60 00 	movss  0x60dd(%rip),%xmm0        # 409740 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  403662:	00 
  403663:	48 8d bd 58 d0 ff ff 	lea    -0x2fa8(%rbp),%rdi
  40366a:	e8 c1 ea ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare3(30, 4);
  40366f:	f3 0f 10 05 b9 60 00 	movss  0x60b9(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403676:	00 
  403677:	be 04 00 00 00       	mov    $0x4,%esi
  40367c:	48 8d bd b0 d1 ff ff 	lea    -0x2e50(%rbp),%rdi
  403683:	e8 38 eb ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare3.setFillColor(RED);
  403688:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  40368e:	31 c9                	xor    %ecx,%ecx
  403690:	31 d2                	xor    %edx,%edx
  403692:	be fe 00 00 00       	mov    $0xfe,%esi
  403697:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40369e:	e8 5d ea ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4036a3:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4036aa:	48 8d bd b0 d1 ff ff 	lea    -0x2e50(%rbp),%rdi
  4036b1:	e8 ea ed ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare3.setPosition(180.f, 50.f);
  4036b6:	f3 0f 10 0d 76 60 00 	movss  0x6076(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  4036bd:	00 
  4036be:	f3 0f 10 05 7a 60 00 	movss  0x607a(%rip),%xmm0        # 409740 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  4036c5:	00 
  4036c6:	48 8d bd b8 d1 ff ff 	lea    -0x2e48(%rbp),%rdi
  4036cd:	e8 5e ea ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare4(30, 4);
  4036d2:	f3 0f 10 05 56 60 00 	movss  0x6056(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4036d9:	00 
  4036da:	be 04 00 00 00       	mov    $0x4,%esi
  4036df:	48 8d bd 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rdi
  4036e6:	e8 d5 ea ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare4.setFillColor(GREEN);
  4036eb:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4036f1:	b9 99 00 00 00       	mov    $0x99,%ecx
  4036f6:	ba de 00 00 00       	mov    $0xde,%edx
  4036fb:	be 6c 00 00 00       	mov    $0x6c,%esi
  403700:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403707:	e8 f4 e9 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40370c:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403713:	48 8d bd 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rdi
  40371a:	e8 81 ed ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare4.setPosition(260.f, 50.f);
  40371f:	f3 0f 10 0d 0d 60 00 	movss  0x600d(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403726:	00 
  403727:	f3 0f 10 05 15 60 00 	movss  0x6015(%rip),%xmm0        # 409744 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  40372e:	00 
  40372f:	48 8d bd 18 d3 ff ff 	lea    -0x2ce8(%rbp),%rdi
  403736:	e8 f5 e9 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare4(30, 4);
  40373b:	f3 0f 10 05 ed 5f 00 	movss  0x5fed(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403742:	00 
  403743:	be 04 00 00 00       	mov    $0x4,%esi
  403748:	48 8d bd 70 d4 ff ff 	lea    -0x2b90(%rbp),%rdi
  40374f:	e8 6c ea ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare4.setFillColor(RED);
  403754:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  40375a:	31 c9                	xor    %ecx,%ecx
  40375c:	31 d2                	xor    %edx,%edx
  40375e:	be fe 00 00 00       	mov    $0xfe,%esi
  403763:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40376a:	e8 91 e9 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40376f:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403776:	48 8d bd 70 d4 ff ff 	lea    -0x2b90(%rbp),%rdi
  40377d:	e8 1e ed ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare4.setPosition(260.f, 50.f);
  403782:	f3 0f 10 0d aa 5f 00 	movss  0x5faa(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403789:	00 
  40378a:	f3 0f 10 05 b2 5f 00 	movss  0x5fb2(%rip),%xmm0        # 409744 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  403791:	00 
  403792:	48 8d bd 78 d4 ff ff 	lea    -0x2b88(%rbp),%rdi
  403799:	e8 92 e9 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare5(30, 4);
  40379e:	f3 0f 10 05 8a 5f 00 	movss  0x5f8a(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4037a5:	00 
  4037a6:	be 04 00 00 00       	mov    $0x4,%esi
  4037ab:	48 8d bd d0 d5 ff ff 	lea    -0x2a30(%rbp),%rdi
  4037b2:	e8 09 ea ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare5.setFillColor(GREEN);
  4037b7:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4037bd:	b9 99 00 00 00       	mov    $0x99,%ecx
  4037c2:	ba de 00 00 00       	mov    $0xde,%edx
  4037c7:	be 6c 00 00 00       	mov    $0x6c,%esi
  4037cc:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4037d3:	e8 28 e9 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4037d8:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4037df:	48 8d bd d0 d5 ff ff 	lea    -0x2a30(%rbp),%rdi
  4037e6:	e8 b5 ec ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare5.setPosition(340.f, 50.f);
  4037eb:	f3 0f 10 0d 41 5f 00 	movss  0x5f41(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  4037f2:	00 
  4037f3:	f3 0f 10 05 4d 5f 00 	movss  0x5f4d(%rip),%xmm0        # 409748 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  4037fa:	00 
  4037fb:	48 8d bd d8 d5 ff ff 	lea    -0x2a28(%rbp),%rdi
  403802:	e8 29 e9 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare5(30, 4);
  403807:	f3 0f 10 05 21 5f 00 	movss  0x5f21(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  40380e:	00 
  40380f:	be 04 00 00 00       	mov    $0x4,%esi
  403814:	48 8d bd 30 d7 ff ff 	lea    -0x28d0(%rbp),%rdi
  40381b:	e8 a0 e9 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare5.setFillColor(RED);
  403820:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403826:	31 c9                	xor    %ecx,%ecx
  403828:	31 d2                	xor    %edx,%edx
  40382a:	be fe 00 00 00       	mov    $0xfe,%esi
  40382f:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403836:	e8 c5 e8 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40383b:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403842:	48 8d bd 30 d7 ff ff 	lea    -0x28d0(%rbp),%rdi
  403849:	e8 52 ec ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare5.setPosition(340.f, 50.f);
  40384e:	f3 0f 10 0d de 5e 00 	movss  0x5ede(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403855:	00 
  403856:	f3 0f 10 05 ea 5e 00 	movss  0x5eea(%rip),%xmm0        # 409748 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  40385d:	00 
  40385e:	48 8d bd 38 d7 ff ff 	lea    -0x28c8(%rbp),%rdi
  403865:	e8 c6 e8 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare6(30, 4);
  40386a:	f3 0f 10 05 be 5e 00 	movss  0x5ebe(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403871:	00 
  403872:	be 04 00 00 00       	mov    $0x4,%esi
  403877:	48 8d bd 90 d8 ff ff 	lea    -0x2770(%rbp),%rdi
  40387e:	e8 3d e9 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare6.setFillColor(GREEN);
  403883:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403889:	b9 99 00 00 00       	mov    $0x99,%ecx
  40388e:	ba de 00 00 00       	mov    $0xde,%edx
  403893:	be 6c 00 00 00       	mov    $0x6c,%esi
  403898:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40389f:	e8 5c e8 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4038a4:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4038ab:	48 8d bd 90 d8 ff ff 	lea    -0x2770(%rbp),%rdi
  4038b2:	e8 e9 eb ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare6.setPosition(420.f, 50.f);
  4038b7:	f3 0f 10 0d 75 5e 00 	movss  0x5e75(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  4038be:	00 
  4038bf:	f3 0f 10 05 85 5e 00 	movss  0x5e85(%rip),%xmm0        # 40974c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  4038c6:	00 
  4038c7:	48 8d bd 98 d8 ff ff 	lea    -0x2768(%rbp),%rdi
  4038ce:	e8 5d e8 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare6(30, 4);
  4038d3:	f3 0f 10 05 55 5e 00 	movss  0x5e55(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4038da:	00 
  4038db:	be 04 00 00 00       	mov    $0x4,%esi
  4038e0:	48 8d bd f0 d9 ff ff 	lea    -0x2610(%rbp),%rdi
  4038e7:	e8 d4 e8 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare6.setFillColor(RED);
  4038ec:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4038f2:	31 c9                	xor    %ecx,%ecx
  4038f4:	31 d2                	xor    %edx,%edx
  4038f6:	be fe 00 00 00       	mov    $0xfe,%esi
  4038fb:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403902:	e8 f9 e7 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403907:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40390e:	48 8d bd f0 d9 ff ff 	lea    -0x2610(%rbp),%rdi
  403915:	e8 86 eb ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare6.setPosition(420.f, 50.f);
  40391a:	f3 0f 10 0d 12 5e 00 	movss  0x5e12(%rip),%xmm1        # 409734 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x134>
  403921:	00 
  403922:	f3 0f 10 05 22 5e 00 	movss  0x5e22(%rip),%xmm0        # 40974c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  403929:	00 
  40392a:	48 8d bd f8 d9 ff ff 	lea    -0x2608(%rbp),%rdi
  403931:	e8 fa e7 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare7(30, 4);
  403936:	f3 0f 10 05 f2 5d 00 	movss  0x5df2(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  40393d:	00 
  40393e:	be 04 00 00 00       	mov    $0x4,%esi
  403943:	48 8d bd 50 db ff ff 	lea    -0x24b0(%rbp),%rdi
  40394a:	e8 71 e8 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare7.setFillColor(GREEN);
  40394f:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403955:	b9 99 00 00 00       	mov    $0x99,%ecx
  40395a:	ba de 00 00 00       	mov    $0xde,%edx
  40395f:	be 6c 00 00 00       	mov    $0x6c,%esi
  403964:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40396b:	e8 90 e7 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403970:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403977:	48 8d bd 50 db ff ff 	lea    -0x24b0(%rbp),%rdi
  40397e:	e8 1d eb ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare7.setPosition(20.f, 190.f);
  403983:	f3 0f 10 0d c5 5d 00 	movss  0x5dc5(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  40398a:	00 
  40398b:	f3 0f 10 05 a5 5d 00 	movss  0x5da5(%rip),%xmm0        # 409738 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  403992:	00 
  403993:	48 8d bd 58 db ff ff 	lea    -0x24a8(%rbp),%rdi
  40399a:	e8 91 e7 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare7(30, 4);
  40399f:	f3 0f 10 05 89 5d 00 	movss  0x5d89(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4039a6:	00 
  4039a7:	be 04 00 00 00       	mov    $0x4,%esi
  4039ac:	48 8d bd b0 dc ff ff 	lea    -0x2350(%rbp),%rdi
  4039b3:	e8 08 e8 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare7.setFillColor(RED);
  4039b8:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4039be:	31 c9                	xor    %ecx,%ecx
  4039c0:	31 d2                	xor    %edx,%edx
  4039c2:	be fe 00 00 00       	mov    $0xfe,%esi
  4039c7:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4039ce:	e8 2d e7 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4039d3:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4039da:	48 8d bd b0 dc ff ff 	lea    -0x2350(%rbp),%rdi
  4039e1:	e8 ba ea ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare7.setPosition(20.f, 190.f);
  4039e6:	f3 0f 10 0d 62 5d 00 	movss  0x5d62(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  4039ed:	00 
  4039ee:	f3 0f 10 05 42 5d 00 	movss  0x5d42(%rip),%xmm0        # 409738 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  4039f5:	00 
  4039f6:	48 8d bd b8 dc ff ff 	lea    -0x2348(%rbp),%rdi
  4039fd:	e8 2e e7 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare8(30, 4);
  403a02:	f3 0f 10 05 26 5d 00 	movss  0x5d26(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403a09:	00 
  403a0a:	be 04 00 00 00       	mov    $0x4,%esi
  403a0f:	48 8d bd 10 de ff ff 	lea    -0x21f0(%rbp),%rdi
  403a16:	e8 a5 e7 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare8.setFillColor(GREEN);
  403a1b:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403a21:	b9 99 00 00 00       	mov    $0x99,%ecx
  403a26:	ba de 00 00 00       	mov    $0xde,%edx
  403a2b:	be 6c 00 00 00       	mov    $0x6c,%esi
  403a30:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403a37:	e8 c4 e6 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403a3c:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403a43:	48 8d bd 10 de ff ff 	lea    -0x21f0(%rbp),%rdi
  403a4a:	e8 51 ea ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare8.setPosition(100.f, 190.f);
  403a4f:	f3 0f 10 0d f9 5c 00 	movss  0x5cf9(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403a56:	00 
  403a57:	f3 0f 10 05 dd 5c 00 	movss  0x5cdd(%rip),%xmm0        # 40973c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403a5e:	00 
  403a5f:	48 8d bd 18 de ff ff 	lea    -0x21e8(%rbp),%rdi
  403a66:	e8 c5 e6 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape	redSquare8(30, 4);
  403a6b:	f3 0f 10 05 bd 5c 00 	movss  0x5cbd(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403a72:	00 
  403a73:	be 04 00 00 00       	mov    $0x4,%esi
  403a78:	48 8d bd 70 df ff ff 	lea    -0x2090(%rbp),%rdi
  403a7f:	e8 3c e7 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare8.setFillColor(RED);
  403a84:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403a8a:	31 c9                	xor    %ecx,%ecx
  403a8c:	31 d2                	xor    %edx,%edx
  403a8e:	be fe 00 00 00       	mov    $0xfe,%esi
  403a93:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403a9a:	e8 61 e6 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403a9f:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403aa6:	48 8d bd 70 df ff ff 	lea    -0x2090(%rbp),%rdi
  403aad:	e8 ee e9 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare8.setPosition(100.f, 190.f);
  403ab2:	f3 0f 10 0d 96 5c 00 	movss  0x5c96(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403ab9:	00 
  403aba:	f3 0f 10 05 7a 5c 00 	movss  0x5c7a(%rip),%xmm0        # 40973c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403ac1:	00 
  403ac2:	48 8d bd 78 df ff ff 	lea    -0x2088(%rbp),%rdi
  403ac9:	e8 62 e6 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare9(30, 4);
  403ace:	f3 0f 10 05 5a 5c 00 	movss  0x5c5a(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403ad5:	00 
  403ad6:	be 04 00 00 00       	mov    $0x4,%esi
  403adb:	48 8d bd d0 e0 ff ff 	lea    -0x1f30(%rbp),%rdi
  403ae2:	e8 d9 e6 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare9.setFillColor(GREEN);
  403ae7:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403aed:	b9 99 00 00 00       	mov    $0x99,%ecx
  403af2:	ba de 00 00 00       	mov    $0xde,%edx
  403af7:	be 6c 00 00 00       	mov    $0x6c,%esi
  403afc:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403b03:	e8 f8 e5 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403b08:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403b0f:	48 8d bd d0 e0 ff ff 	lea    -0x1f30(%rbp),%rdi
  403b16:	e8 85 e9 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare9.setPosition(180.f, 190.f);
  403b1b:	f3 0f 10 0d 2d 5c 00 	movss  0x5c2d(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403b22:	00 
  403b23:	f3 0f 10 05 15 5c 00 	movss  0x5c15(%rip),%xmm0        # 409740 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  403b2a:	00 
  403b2b:	48 8d bd d8 e0 ff ff 	lea    -0x1f28(%rbp),%rdi
  403b32:	e8 f9 e5 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare9(30, 4);
  403b37:	f3 0f 10 05 f1 5b 00 	movss  0x5bf1(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403b3e:	00 
  403b3f:	be 04 00 00 00       	mov    $0x4,%esi
  403b44:	48 8d bd 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rdi
  403b4b:	e8 70 e6 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare9.setFillColor(RED);
  403b50:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403b56:	31 c9                	xor    %ecx,%ecx
  403b58:	31 d2                	xor    %edx,%edx
  403b5a:	be fe 00 00 00       	mov    $0xfe,%esi
  403b5f:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403b66:	e8 95 e5 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403b6b:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403b72:	48 8d bd 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rdi
  403b79:	e8 22 e9 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare9.setPosition(180.f, 190.f);
  403b7e:	f3 0f 10 0d ca 5b 00 	movss  0x5bca(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403b85:	00 
  403b86:	f3 0f 10 05 b2 5b 00 	movss  0x5bb2(%rip),%xmm0        # 409740 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  403b8d:	00 
  403b8e:	48 8d bd 38 e2 ff ff 	lea    -0x1dc8(%rbp),%rdi
  403b95:	e8 96 e5 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare10(30, 4);
  403b9a:	f3 0f 10 05 8e 5b 00 	movss  0x5b8e(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403ba1:	00 
  403ba2:	be 04 00 00 00       	mov    $0x4,%esi
  403ba7:	48 8d bd 90 e3 ff ff 	lea    -0x1c70(%rbp),%rdi
  403bae:	e8 0d e6 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare10.setFillColor(GREEN);
  403bb3:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403bb9:	b9 99 00 00 00       	mov    $0x99,%ecx
  403bbe:	ba de 00 00 00       	mov    $0xde,%edx
  403bc3:	be 6c 00 00 00       	mov    $0x6c,%esi
  403bc8:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403bcf:	e8 2c e5 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403bd4:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403bdb:	48 8d bd 90 e3 ff ff 	lea    -0x1c70(%rbp),%rdi
  403be2:	e8 b9 e8 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare10.setPosition(260.f, 190.f);
  403be7:	f3 0f 10 0d 61 5b 00 	movss  0x5b61(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403bee:	00 
  403bef:	f3 0f 10 05 4d 5b 00 	movss  0x5b4d(%rip),%xmm0        # 409744 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  403bf6:	00 
  403bf7:	48 8d bd 98 e3 ff ff 	lea    -0x1c68(%rbp),%rdi
  403bfe:	e8 2d e5 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare10(30, 4);
  403c03:	f3 0f 10 05 25 5b 00 	movss  0x5b25(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403c0a:	00 
  403c0b:	be 04 00 00 00       	mov    $0x4,%esi
  403c10:	48 8d bd f0 e4 ff ff 	lea    -0x1b10(%rbp),%rdi
  403c17:	e8 a4 e5 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare10.setFillColor(RED);
  403c1c:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403c22:	31 c9                	xor    %ecx,%ecx
  403c24:	31 d2                	xor    %edx,%edx
  403c26:	be fe 00 00 00       	mov    $0xfe,%esi
  403c2b:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403c32:	e8 c9 e4 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403c37:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403c3e:	48 8d bd f0 e4 ff ff 	lea    -0x1b10(%rbp),%rdi
  403c45:	e8 56 e8 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare10.setPosition(260.f, 190.f);
  403c4a:	f3 0f 10 0d fe 5a 00 	movss  0x5afe(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403c51:	00 
  403c52:	f3 0f 10 05 ea 5a 00 	movss  0x5aea(%rip),%xmm0        # 409744 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  403c59:	00 
  403c5a:	48 8d bd f8 e4 ff ff 	lea    -0x1b08(%rbp),%rdi
  403c61:	e8 ca e4 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare11(30, 4);
  403c66:	f3 0f 10 05 c2 5a 00 	movss  0x5ac2(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403c6d:	00 
  403c6e:	be 04 00 00 00       	mov    $0x4,%esi
  403c73:	48 8d bd 50 e6 ff ff 	lea    -0x19b0(%rbp),%rdi
  403c7a:	e8 41 e5 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare11.setFillColor(GREEN);
  403c7f:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403c85:	b9 99 00 00 00       	mov    $0x99,%ecx
  403c8a:	ba de 00 00 00       	mov    $0xde,%edx
  403c8f:	be 6c 00 00 00       	mov    $0x6c,%esi
  403c94:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403c9b:	e8 60 e4 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403ca0:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403ca7:	48 8d bd 50 e6 ff ff 	lea    -0x19b0(%rbp),%rdi
  403cae:	e8 ed e7 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare11.setPosition(340.f, 190.f);
  403cb3:	f3 0f 10 0d 95 5a 00 	movss  0x5a95(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403cba:	00 
  403cbb:	f3 0f 10 05 85 5a 00 	movss  0x5a85(%rip),%xmm0        # 409748 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  403cc2:	00 
  403cc3:	48 8d bd 58 e6 ff ff 	lea    -0x19a8(%rbp),%rdi
  403cca:	e8 61 e4 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare11(30, 4);
  403ccf:	f3 0f 10 05 59 5a 00 	movss  0x5a59(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403cd6:	00 
  403cd7:	be 04 00 00 00       	mov    $0x4,%esi
  403cdc:	48 8d bd b0 e7 ff ff 	lea    -0x1850(%rbp),%rdi
  403ce3:	e8 d8 e4 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare11.setFillColor(RED);
  403ce8:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403cee:	31 c9                	xor    %ecx,%ecx
  403cf0:	31 d2                	xor    %edx,%edx
  403cf2:	be fe 00 00 00       	mov    $0xfe,%esi
  403cf7:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403cfe:	e8 fd e3 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403d03:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403d0a:	48 8d bd b0 e7 ff ff 	lea    -0x1850(%rbp),%rdi
  403d11:	e8 8a e7 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare11.setPosition(340.f, 190.f);
  403d16:	f3 0f 10 0d 32 5a 00 	movss  0x5a32(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403d1d:	00 
  403d1e:	f3 0f 10 05 22 5a 00 	movss  0x5a22(%rip),%xmm0        # 409748 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  403d25:	00 
  403d26:	48 8d bd b8 e7 ff ff 	lea    -0x1848(%rbp),%rdi
  403d2d:	e8 fe e3 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare12(30, 4);
  403d32:	f3 0f 10 05 f6 59 00 	movss  0x59f6(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403d39:	00 
  403d3a:	be 04 00 00 00       	mov    $0x4,%esi
  403d3f:	48 8d bd 10 e9 ff ff 	lea    -0x16f0(%rbp),%rdi
  403d46:	e8 75 e4 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare12.setFillColor(GREEN);
  403d4b:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403d51:	b9 99 00 00 00       	mov    $0x99,%ecx
  403d56:	ba de 00 00 00       	mov    $0xde,%edx
  403d5b:	be 6c 00 00 00       	mov    $0x6c,%esi
  403d60:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403d67:	e8 94 e3 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403d6c:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403d73:	48 8d bd 10 e9 ff ff 	lea    -0x16f0(%rbp),%rdi
  403d7a:	e8 21 e7 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare12.setPosition(420.f, 190.f);
  403d7f:	f3 0f 10 0d c9 59 00 	movss  0x59c9(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403d86:	00 
  403d87:	f3 0f 10 05 bd 59 00 	movss  0x59bd(%rip),%xmm0        # 40974c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  403d8e:	00 
  403d8f:	48 8d bd 18 e9 ff ff 	lea    -0x16e8(%rbp),%rdi
  403d96:	e8 95 e3 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare12(30, 4);
  403d9b:	f3 0f 10 05 8d 59 00 	movss  0x598d(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403da2:	00 
  403da3:	be 04 00 00 00       	mov    $0x4,%esi
  403da8:	48 8d bd 70 ea ff ff 	lea    -0x1590(%rbp),%rdi
  403daf:	e8 0c e4 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare12.setFillColor(RED);
  403db4:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403dba:	31 c9                	xor    %ecx,%ecx
  403dbc:	31 d2                	xor    %edx,%edx
  403dbe:	be fe 00 00 00       	mov    $0xfe,%esi
  403dc3:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403dca:	e8 31 e3 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403dcf:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403dd6:	48 8d bd 70 ea ff ff 	lea    -0x1590(%rbp),%rdi
  403ddd:	e8 be e6 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare12.setPosition(420.f, 190.f);
  403de2:	f3 0f 10 0d 66 59 00 	movss  0x5966(%rip),%xmm1        # 409750 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x150>
  403de9:	00 
  403dea:	f3 0f 10 05 5a 59 00 	movss  0x595a(%rip),%xmm0        # 40974c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  403df1:	00 
  403df2:	48 8d bd 78 ea ff ff 	lea    -0x1588(%rbp),%rdi
  403df9:	e8 32 e3 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare13(30, 4);
  403dfe:	f3 0f 10 05 2a 59 00 	movss  0x592a(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403e05:	00 
  403e06:	be 04 00 00 00       	mov    $0x4,%esi
  403e0b:	48 8d bd d0 eb ff ff 	lea    -0x1430(%rbp),%rdi
  403e12:	e8 a9 e3 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare13.setFillColor(GREEN);
  403e17:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403e1d:	b9 99 00 00 00       	mov    $0x99,%ecx
  403e22:	ba de 00 00 00       	mov    $0xde,%edx
  403e27:	be 6c 00 00 00       	mov    $0x6c,%esi
  403e2c:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403e33:	e8 c8 e2 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403e38:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403e3f:	48 8d bd d0 eb ff ff 	lea    -0x1430(%rbp),%rdi
  403e46:	e8 55 e6 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare13.setPosition(20.f, 330.f);
  403e4b:	f3 0f 10 0d 01 59 00 	movss  0x5901(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  403e52:	00 
  403e53:	f3 0f 10 05 dd 58 00 	movss  0x58dd(%rip),%xmm0        # 409738 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  403e5a:	00 
  403e5b:	48 8d bd d8 eb ff ff 	lea    -0x1428(%rbp),%rdi
  403e62:	e8 c9 e2 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare13(30, 4);
  403e67:	f3 0f 10 05 c1 58 00 	movss  0x58c1(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403e6e:	00 
  403e6f:	be 04 00 00 00       	mov    $0x4,%esi
  403e74:	48 8d bd 30 ed ff ff 	lea    -0x12d0(%rbp),%rdi
  403e7b:	e8 40 e3 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare13.setFillColor(RED);
  403e80:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403e86:	31 c9                	xor    %ecx,%ecx
  403e88:	31 d2                	xor    %edx,%edx
  403e8a:	be fe 00 00 00       	mov    $0xfe,%esi
  403e8f:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403e96:	e8 65 e2 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403e9b:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403ea2:	48 8d bd 30 ed ff ff 	lea    -0x12d0(%rbp),%rdi
  403ea9:	e8 f2 e5 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare13.setPosition(20.f, 330.f);
  403eae:	f3 0f 10 0d 9e 58 00 	movss  0x589e(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  403eb5:	00 
  403eb6:	f3 0f 10 05 7a 58 00 	movss  0x587a(%rip),%xmm0        # 409738 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x138>
  403ebd:	00 
  403ebe:	48 8d bd 38 ed ff ff 	lea    -0x12c8(%rbp),%rdi
  403ec5:	e8 66 e2 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare14(30, 4);
  403eca:	f3 0f 10 05 5e 58 00 	movss  0x585e(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403ed1:	00 
  403ed2:	be 04 00 00 00       	mov    $0x4,%esi
  403ed7:	48 8d bd 90 ee ff ff 	lea    -0x1170(%rbp),%rdi
  403ede:	e8 dd e2 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare14.setFillColor(GREEN);
  403ee3:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403ee9:	b9 99 00 00 00       	mov    $0x99,%ecx
  403eee:	ba de 00 00 00       	mov    $0xde,%edx
  403ef3:	be 6c 00 00 00       	mov    $0x6c,%esi
  403ef8:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403eff:	e8 fc e1 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403f04:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403f0b:	48 8d bd 90 ee ff ff 	lea    -0x1170(%rbp),%rdi
  403f12:	e8 89 e5 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare14.setPosition(100.f, 330.f);
  403f17:	f3 0f 10 0d 35 58 00 	movss  0x5835(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  403f1e:	00 
  403f1f:	f3 0f 10 05 15 58 00 	movss  0x5815(%rip),%xmm0        # 40973c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403f26:	00 
  403f27:	48 8d bd 98 ee ff ff 	lea    -0x1168(%rbp),%rdi
  403f2e:	e8 fd e1 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare14(30, 4);
  403f33:	f3 0f 10 05 f5 57 00 	movss  0x57f5(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403f3a:	00 
  403f3b:	be 04 00 00 00       	mov    $0x4,%esi
  403f40:	48 8d bd f0 ef ff ff 	lea    -0x1010(%rbp),%rdi
  403f47:	e8 74 e2 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare14.setFillColor(RED);
  403f4c:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403f52:	31 c9                	xor    %ecx,%ecx
  403f54:	31 d2                	xor    %edx,%edx
  403f56:	be fe 00 00 00       	mov    $0xfe,%esi
  403f5b:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403f62:	e8 99 e1 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403f67:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403f6e:	48 8d bd f0 ef ff ff 	lea    -0x1010(%rbp),%rdi
  403f75:	e8 26 e5 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare14.setPosition(100.f, 330.f);
  403f7a:	f3 0f 10 0d d2 57 00 	movss  0x57d2(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  403f81:	00 
  403f82:	f3 0f 10 05 b2 57 00 	movss  0x57b2(%rip),%xmm0        # 40973c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x13c>
  403f89:	00 
  403f8a:	48 8d bd f8 ef ff ff 	lea    -0x1008(%rbp),%rdi
  403f91:	e8 9a e1 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare15(30, 4);
  403f96:	f3 0f 10 05 92 57 00 	movss  0x5792(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  403f9d:	00 
  403f9e:	be 04 00 00 00       	mov    $0x4,%esi
  403fa3:	48 8d bd 50 f1 ff ff 	lea    -0xeb0(%rbp),%rdi
  403faa:	e8 11 e2 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare15.setFillColor(GREEN);
  403faf:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  403fb5:	b9 99 00 00 00       	mov    $0x99,%ecx
  403fba:	ba de 00 00 00       	mov    $0xde,%edx
  403fbf:	be 6c 00 00 00       	mov    $0x6c,%esi
  403fc4:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  403fcb:	e8 30 e1 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  403fd0:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  403fd7:	48 8d bd 50 f1 ff ff 	lea    -0xeb0(%rbp),%rdi
  403fde:	e8 bd e4 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare15.setPosition(180.f, 330.f);
  403fe3:	f3 0f 10 0d 69 57 00 	movss  0x5769(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  403fea:	00 
  403feb:	f3 0f 10 05 4d 57 00 	movss  0x574d(%rip),%xmm0        # 409740 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  403ff2:	00 
  403ff3:	48 8d bd 58 f1 ff ff 	lea    -0xea8(%rbp),%rdi
  403ffa:	e8 31 e1 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare15(30, 4);
  403fff:	f3 0f 10 05 29 57 00 	movss  0x5729(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404006:	00 
  404007:	be 04 00 00 00       	mov    $0x4,%esi
  40400c:	48 8d bd b0 f2 ff ff 	lea    -0xd50(%rbp),%rdi
  404013:	e8 a8 e1 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare15.setFillColor(RED);
  404018:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  40401e:	31 c9                	xor    %ecx,%ecx
  404020:	31 d2                	xor    %edx,%edx
  404022:	be fe 00 00 00       	mov    $0xfe,%esi
  404027:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40402e:	e8 cd e0 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  404033:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40403a:	48 8d bd b0 f2 ff ff 	lea    -0xd50(%rbp),%rdi
  404041:	e8 5a e4 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare15.setPosition(180.f, 330.f);
  404046:	f3 0f 10 0d 06 57 00 	movss  0x5706(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  40404d:	00 
  40404e:	f3 0f 10 05 ea 56 00 	movss  0x56ea(%rip),%xmm0        # 409740 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x140>
  404055:	00 
  404056:	48 8d bd b8 f2 ff ff 	lea    -0xd48(%rbp),%rdi
  40405d:	e8 ce e0 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare16(30, 4);
  404062:	f3 0f 10 05 c6 56 00 	movss  0x56c6(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404069:	00 
  40406a:	be 04 00 00 00       	mov    $0x4,%esi
  40406f:	48 8d bd 10 f4 ff ff 	lea    -0xbf0(%rbp),%rdi
  404076:	e8 45 e1 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare16.setFillColor(GREEN);
  40407b:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  404081:	b9 99 00 00 00       	mov    $0x99,%ecx
  404086:	ba de 00 00 00       	mov    $0xde,%edx
  40408b:	be 6c 00 00 00       	mov    $0x6c,%esi
  404090:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  404097:	e8 64 e0 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  40409c:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4040a3:	48 8d bd 10 f4 ff ff 	lea    -0xbf0(%rbp),%rdi
  4040aa:	e8 f1 e3 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare16.setPosition(260.f, 330.f);
  4040af:	f3 0f 10 0d 9d 56 00 	movss  0x569d(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  4040b6:	00 
  4040b7:	f3 0f 10 05 85 56 00 	movss  0x5685(%rip),%xmm0        # 409744 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  4040be:	00 
  4040bf:	48 8d bd 18 f4 ff ff 	lea    -0xbe8(%rbp),%rdi
  4040c6:	e8 65 e0 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare16(30, 4);
  4040cb:	f3 0f 10 05 5d 56 00 	movss  0x565d(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  4040d2:	00 
  4040d3:	be 04 00 00 00       	mov    $0x4,%esi
  4040d8:	48 8d bd 70 f5 ff ff 	lea    -0xa90(%rbp),%rdi
  4040df:	e8 dc e0 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare16.setFillColor(RED);
  4040e4:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4040ea:	31 c9                	xor    %ecx,%ecx
  4040ec:	31 d2                	xor    %edx,%edx
  4040ee:	be fe 00 00 00       	mov    $0xfe,%esi
  4040f3:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4040fa:	e8 01 e0 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4040ff:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  404106:	48 8d bd 70 f5 ff ff 	lea    -0xa90(%rbp),%rdi
  40410d:	e8 8e e3 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare16.setPosition(260.f, 330.f);
  404112:	f3 0f 10 0d 3a 56 00 	movss  0x563a(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  404119:	00 
  40411a:	f3 0f 10 05 22 56 00 	movss  0x5622(%rip),%xmm0        # 409744 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x144>
  404121:	00 
  404122:	48 8d bd 78 f5 ff ff 	lea    -0xa88(%rbp),%rdi
  404129:	e8 02 e0 ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare17(30, 4);
  40412e:	f3 0f 10 05 fa 55 00 	movss  0x55fa(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404135:	00 
  404136:	be 04 00 00 00       	mov    $0x4,%esi
  40413b:	48 8d bd d0 f6 ff ff 	lea    -0x930(%rbp),%rdi
  404142:	e8 79 e0 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare17.setFillColor(GREEN);
  404147:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  40414d:	b9 99 00 00 00       	mov    $0x99,%ecx
  404152:	ba de 00 00 00       	mov    $0xde,%edx
  404157:	be 6c 00 00 00       	mov    $0x6c,%esi
  40415c:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  404163:	e8 98 df ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  404168:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40416f:	48 8d bd d0 f6 ff ff 	lea    -0x930(%rbp),%rdi
  404176:	e8 25 e3 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare17.setPosition(340.f, 330.f);
  40417b:	f3 0f 10 0d d1 55 00 	movss  0x55d1(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  404182:	00 
  404183:	f3 0f 10 05 bd 55 00 	movss  0x55bd(%rip),%xmm0        # 409748 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  40418a:	00 
  40418b:	48 8d bd d8 f6 ff ff 	lea    -0x928(%rbp),%rdi
  404192:	e8 99 df ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare17(30, 4);
  404197:	f3 0f 10 05 91 55 00 	movss  0x5591(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  40419e:	00 
  40419f:	be 04 00 00 00       	mov    $0x4,%esi
  4041a4:	48 8d bd 30 f8 ff ff 	lea    -0x7d0(%rbp),%rdi
  4041ab:	e8 10 e0 ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare17.setFillColor(RED);
  4041b0:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4041b6:	31 c9                	xor    %ecx,%ecx
  4041b8:	31 d2                	xor    %edx,%edx
  4041ba:	be fe 00 00 00       	mov    $0xfe,%esi
  4041bf:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4041c6:	e8 35 df ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4041cb:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4041d2:	48 8d bd 30 f8 ff ff 	lea    -0x7d0(%rbp),%rdi
  4041d9:	e8 c2 e2 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare17.setPosition(340.f, 330.f);
  4041de:	f3 0f 10 0d 6e 55 00 	movss  0x556e(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  4041e5:	00 
  4041e6:	f3 0f 10 05 5a 55 00 	movss  0x555a(%rip),%xmm0        # 409748 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x148>
  4041ed:	00 
  4041ee:	48 8d bd 38 f8 ff ff 	lea    -0x7c8(%rbp),%rdi
  4041f5:	e8 36 df ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape greenSquare18(30, 4);
  4041fa:	f3 0f 10 05 2e 55 00 	movss  0x552e(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  404201:	00 
  404202:	be 04 00 00 00       	mov    $0x4,%esi
  404207:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  40420e:	e8 ad df ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
greenSquare18.setFillColor(GREEN);
  404213:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  404219:	b9 99 00 00 00       	mov    $0x99,%ecx
  40421e:	ba de 00 00 00       	mov    $0xde,%edx
  404223:	be 6c 00 00 00       	mov    $0x6c,%esi
  404228:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40422f:	e8 cc de ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  404234:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40423b:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  404242:	e8 59 e2 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
greenSquare18.setPosition(420.f, 330.f);
  404247:	f3 0f 10 0d 05 55 00 	movss  0x5505(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  40424e:	00 
  40424f:	f3 0f 10 05 f5 54 00 	movss  0x54f5(%rip),%xmm0        # 40974c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  404256:	00 
  404257:	48 8d bd 98 f9 ff ff 	lea    -0x668(%rbp),%rdi
  40425e:	e8 cd de ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
sf::CircleShape redSquare18(30, 4);
  404263:	f3 0f 10 05 c5 54 00 	movss  0x54c5(%rip),%xmm0        # 409730 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x130>
  40426a:	00 
  40426b:	be 04 00 00 00       	mov    $0x4,%esi
  404270:	48 8d bd f0 fa ff ff 	lea    -0x510(%rbp),%rdi
  404277:	e8 44 df ff ff       	call   4021c0 <_ZN2sf11CircleShapeC1Efm@plt>
redSquare18.setFillColor(RED);
  40427c:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  404282:	31 c9                	xor    %ecx,%ecx
  404284:	31 d2                	xor    %edx,%edx
  404286:	be fe 00 00 00       	mov    $0xfe,%esi
  40428b:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  404292:	e8 69 de ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  404297:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40429e:	48 8d bd f0 fa ff ff 	lea    -0x510(%rbp),%rdi
  4042a5:	e8 f6 e1 ff ff       	call   4024a0 <_ZN2sf5Shape12setFillColorERKNS_5ColorE@plt>
redSquare18.setPosition(420.f, 330.f);
  4042aa:	f3 0f 10 0d a2 54 00 	movss  0x54a2(%rip),%xmm1        # 409754 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x154>
  4042b1:	00 
  4042b2:	f3 0f 10 05 92 54 00 	movss  0x5492(%rip),%xmm0        # 40974c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x14c>
  4042b9:	00 
  4042ba:	48 8d bd f8 fa ff ff 	lea    -0x508(%rbp),%rdi
  4042c1:	e8 6a de ff ff       	call   402130 <_ZN2sf13Transformable11setPositionEff@plt>
	window.setFramerateLimit(12);
  4042c6:	be 0c 00 00 00       	mov    $0xc,%esi
  4042cb:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  4042d2:	e8 d9 df ff ff       	call   4022b0 <_ZN2sf6Window17setFramerateLimitEj@plt>
	sf::Font font;
  4042d7:	48 8d bd 70 c9 ff ff 	lea    -0x3690(%rbp),%rdi
  4042de:	e8 cd dd ff ff       	call   4020b0 <_ZN2sf4FontC1Ev@plt>
	font.loadFromFile("/home/de2i-150/Desktop/Projeto-IHS/IHS-Project/ihs-project-layout/app/fonts/cour.ttf");
  4042e3:	48 8d 95 00 ca ff ff 	lea    -0x3600(%rbp),%rdx
  4042ea:	be c8 91 40 00       	mov    $0x4091c8,%esi
  4042ef:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4042f6:	e8 55 44 00 00       	call   408750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
  4042fb:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  404302:	48 8d bd 70 c9 ff ff 	lea    -0x3690(%rbp),%rdi
  404309:	e8 02 df ff ff       	call   402210 <_ZN2sf4Font12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
      { return _M_dataplus._M_p; }
  40430e:	48 8b bd 50 fc ff ff 	mov    -0x3b0(%rbp),%rdi
	if (!_M_is_local())
  404315:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
  40431c:	48 39 c7             	cmp    %rax,%rdi
  40431f:	74 10                	je     404331 <main+0xfc1>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404321:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
  404328:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  40432c:	e8 ef de ff ff       	call   402220 <_ZdlPvm@plt>
	sf::Text text("", font, 20);
  404331:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  404338:	e8 93 e1 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  40433d:	48 8d 95 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdx
  404344:	be d9 90 40 00       	mov    $0x4090d9,%esi
  404349:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  404350:	e8 9b dd ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404355:	b9 14 00 00 00       	mov    $0x14,%ecx
  40435a:	48 8d 95 70 c9 ff ff 	lea    -0x3690(%rbp),%rdx
  404361:	48 8d b5 00 ca ff ff 	lea    -0x3600(%rbp),%rsi
  404368:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  40436f:	e8 7c de ff ff       	call   4021f0 <_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@plt>
      { return _M_dataplus._M_p; }
  404374:	48 8b bd 00 ca ff ff 	mov    -0x3600(%rbp),%rdi
	if (!_M_is_local())
  40437b:	48 8d 85 10 ca ff ff 	lea    -0x35f0(%rbp),%rax
  404382:	48 39 c7             	cmp    %rax,%rdi
  404385:	74 14                	je     40439b <main+0x102b>
  404387:	48 8b 85 10 ca ff ff 	mov    -0x35f0(%rbp),%rax
  40438e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404395:	00 
  404396:	e8 85 de ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  40439b:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  4043a2:	e8 69 df ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
	text.setFillColor(sf::Color(39, 225, 122));
  4043a7:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4043ad:	b9 7a 00 00 00       	mov    $0x7a,%ecx
  4043b2:	ba e1 00 00 00       	mov    $0xe1,%edx
  4043b7:	be 27 00 00 00       	mov    $0x27,%esi
  4043bc:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  4043c3:	e8 38 dd ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4043c8:	48 8d b5 00 ca ff ff 	lea    -0x3600(%rbp),%rsi
  4043cf:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4043d6:	e8 d5 e0 ff ff       	call   4024b0 <_ZN2sf4Text12setFillColorERKNS_5ColorE@plt>
	sf::Music typing;
  4043db:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  4043e2:	e8 89 dc ff ff       	call   402070 <_ZN2sf5MusicC1Ev@plt>
	if (!typing.openFromFile("/home/de2i-150/Desktop/Projeto-IHS/IHS-Project/ihs-project-layout/app/assets/sounds/typing.ogg"))
  4043e7:	48 8d 95 00 c9 ff ff 	lea    -0x3700(%rbp),%rdx
  4043ee:	be 20 92 40 00       	mov    $0x409220,%esi
  4043f3:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  4043fa:	e8 51 43 00 00       	call   408750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
  4043ff:	48 8d b5 20 c9 ff ff 	lea    -0x36e0(%rbp),%rsi
  404406:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  40440d:	e8 6e dc ff ff       	call   402080 <_ZN2sf5Music12openFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
      { return _M_dataplus._M_p; }
  404412:	48 8b bd 20 c9 ff ff 	mov    -0x36e0(%rbp),%rdi
  404419:	89 c3                	mov    %eax,%ebx
	if (!_M_is_local())
  40441b:	48 8d 85 30 c9 ff ff 	lea    -0x36d0(%rbp),%rax
  404422:	48 39 c7             	cmp    %rax,%rdi
  404425:	74 10                	je     404437 <main+0x10c7>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  404427:	48 8b 85 30 c9 ff ff 	mov    -0x36d0(%rbp),%rax
  40442e:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  404432:	e8 e9 dd ff ff       	call   402220 <_ZdlPvm@plt>
  404437:	84 db                	test   %bl,%bl
  404439:	0f 84 72 1c 00 00    	je     4060b1 <main+0x2d41>
	sf::String typedtext = "[root@bois ~] $ Ola, vejo que voce encontrou minha caixa...\n\n[root@bois ~] $ Espero (ou nao) que voce consiga completar\nos desafios que preparei para hoje.\n\n[root@bois ~] $ Mas cuidado com o tempo e tente nao perder\na cabeca!!\n\n[root@bois ~] $ ASS ?";
  40443f:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  404446:	e8 85 e0 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  40444b:	48 8d 95 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdx
  404452:	be a0 92 40 00       	mov    $0x4092a0,%esi
  404457:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  40445e:	e8 8d dc ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404463:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  40446a:	e8 a1 de ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
	sf::String challenge1_string = "[root@bois ~] $ Voce deveria saber matematica";
  40446f:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  404476:	e8 55 e0 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  40447b:	48 8d 95 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdx
  404482:	be a0 93 40 00       	mov    $0x4093a0,%esi
  404487:	48 8d bd 60 c8 ff ff 	lea    -0x37a0(%rbp),%rdi
  40448e:	e8 5d dc ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404493:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
  40449a:	e8 71 de ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
	sf::Clock clock_text;
  40449f:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  4044a6:	e8 35 de ff ff       	call   4022e0 <_ZN2sf5ClockC1Ev@plt>
	sf::Time elapsedtime_text;
  4044ab:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  4044b2:	e8 99 db ff ff       	call   402050 <_ZN2sf4TimeC1Ev@plt>
	sf::Clock temp_clock;
  4044b7:	48 8d bd c0 c7 ff ff 	lea    -0x3840(%rbp),%rdi
  4044be:	e8 1d de ff ff       	call   4022e0 <_ZN2sf5ClockC1Ev@plt>
	sf::Time temp_time;
  4044c3:	48 8d bd c8 c7 ff ff 	lea    -0x3838(%rbp),%rdi
  4044ca:	e8 81 db ff ff       	call   402050 <_ZN2sf4TimeC1Ev@plt>
	sf::Clock clock_bomb;
  4044cf:	48 8d bd d0 c7 ff ff 	lea    -0x3830(%rbp),%rdi
  4044d6:	e8 05 de ff ff       	call   4022e0 <_ZN2sf5ClockC1Ev@plt>
	sf::Time time_bomb;
  4044db:	48 8d bd d8 c7 ff ff 	lea    -0x3828(%rbp),%rdi
  4044e2:	e8 69 db ff ff       	call   402050 <_ZN2sf4TimeC1Ev@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  4044e7:	48 8d 85 90 c8 ff ff 	lea    -0x3770(%rbp),%rax
	int currMatrix[18] = {0};
  4044ee:	b9 12 00 00 00       	mov    $0x12,%ecx
  4044f3:	48 8d bd 20 c9 ff ff 	lea    -0x36e0(%rbp),%rdi
      { _M_string_length = __length; }
  4044fa:	48 c7 85 88 c8 ff ff 	movq   $0x0,-0x3778(%rbp)
  404501:	00 00 00 00 
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  404505:	48 89 85 80 c8 ff ff 	mov    %rax,-0x3780(%rbp)
  40450c:	48 8d 85 b0 c8 ff ff 	lea    -0x3750(%rbp),%rax
  404513:	48 89 85 a0 c8 ff ff 	mov    %rax,-0x3760(%rbp)
  40451a:	31 c0                	xor    %eax,%eax
  40451c:	f3 ab                	rep stos %eax,%es:(%rdi)
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { __c1 = __c2; }
  40451e:	c6 85 90 c8 ff ff 00 	movb   $0x0,-0x3770(%rbp)
      { _M_string_length = __length; }
  404525:	48 c7 85 a8 c8 ff ff 	movq   $0x0,-0x3758(%rbp)
  40452c:	00 00 00 00 
  404530:	c6 85 b0 c8 ff ff 00 	movb   $0x0,-0x3750(%rbp)
	int flag_correct = 1;
  404537:	c7 85 2c c7 ff ff 01 	movl   $0x1,-0x38d4(%rbp)
  40453e:	00 00 00 
	int flag = 1;
  404541:	c7 85 40 c7 ff ff 01 	movl   $0x1,-0x38c0(%rbp)
  404548:	00 00 00 
	int old_button = 0xF;
  40454b:	c7 85 30 c7 ff ff 0f 	movl   $0xf,-0x38d0(%rbp)
  404552:	00 00 00 
	unsigned int redLeds = 0x00000;
  404555:	c7 85 44 c7 ff ff 00 	movl   $0x0,-0x38bc(%rbp)
  40455c:	00 00 00 
	unsigned int switches = 0x00000;
  40455f:	c7 85 50 c7 ff ff 00 	movl   $0x0,-0x38b0(%rbp)
  404566:	00 00 00 
	int screen = 0;
  404569:	c7 85 54 c7 ff ff 00 	movl   $0x0,-0x38ac(%rbp)
  404570:	00 00 00 
  404573:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	while (window.isOpen())
  404578:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  40457f:	e8 bc dc ff ff       	call   402240 <_ZNK2sf6Window6isOpenEv@plt>
  404584:	84 c0                	test   %al,%al
  404586:	75 16                	jne    40459e <main+0x122e>
  404588:	e9 6b 16 00 00       	jmp    405bf8 <main+0x2888>
  40458d:	0f 1f 00             	nopl   (%rax)
			if (event.type == sf::Event::Closed)
  404590:	8b b5 00 c8 ff ff    	mov    -0x3800(%rbp),%esi
  404596:	85 f6                	test   %esi,%esi
  404598:	0f 84 b2 0f 00 00    	je     405550 <main+0x21e0>
		while (window.pollEvent(event))
  40459e:	48 8d b5 00 c8 ff ff 	lea    -0x3800(%rbp),%rsi
  4045a5:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  4045ac:	e8 2f dc ff ff       	call   4021e0 <_ZN2sf6Window9pollEventERNS_5EventE@plt>
  4045b1:	84 c0                	test   %al,%al
  4045b3:	75 db                	jne    404590 <main+0x1220>
		window.clear(sf::Color(48, 49, 52));
  4045b5:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4045bb:	b9 34 00 00 00       	mov    $0x34,%ecx
  4045c0:	ba 31 00 00 00       	mov    $0x31,%edx
  4045c5:	be 30 00 00 00       	mov    $0x30,%esi
  4045ca:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4045d1:	e8 2a db ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  4045d6:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4045dd:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4045e4:	e8 97 db ff ff       	call   402180 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@plt>
		if(screen == 0){
  4045e9:	8b 85 54 c7 ff ff    	mov    -0x38ac(%rbp),%eax
  4045ef:	85 c0                	test   %eax,%eax
  4045f1:	0f 84 71 0f 00 00    	je     405568 <main+0x21f8>
		if (screen != 1 && screen != 6)
  4045f7:	83 f8 01             	cmp    $0x1,%eax
  4045fa:	74 54                	je     404650 <main+0x12e0>
  4045fc:	83 f8 06             	cmp    $0x6,%eax
  4045ff:	74 4f                	je     404650 <main+0x12e0>
			time_bomb = clock_bomb.getElapsedTime();
  404601:	48 8d bd d0 c7 ff ff 	lea    -0x3830(%rbp),%rdi
  404608:	e8 a3 dd ff ff       	call   4023b0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>
			seconds = 300 - time_bomb.asSeconds();
  40460d:	48 8d bd d8 c7 ff ff 	lea    -0x3828(%rbp),%rdi
			time_bomb = clock_bomb.getElapsedTime();
  404614:	48 89 85 d8 c7 ff ff 	mov    %rax,-0x3828(%rbp)
			seconds = 300 - time_bomb.asSeconds();
  40461b:	e8 20 de ff ff       	call   402440 <_ZNK2sf4Time9asSecondsEv@plt>
  404620:	0f 28 c8             	movaps %xmm0,%xmm1
  404623:	f3 0f 10 05 2d 51 00 	movss  0x512d(%rip),%xmm0        # 409758 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x158>
  40462a:	00 
			int_to_string(fd, seconds, min_string, sec_string);		
  40462b:	48 8d 8d 80 c8 ff ff 	lea    -0x3780(%rbp),%rcx
  404632:	44 89 ff             	mov    %r15d,%edi
  404635:	48 8d 95 a0 c8 ff ff 	lea    -0x3760(%rbp),%rdx
			seconds = 300 - time_bomb.asSeconds();
  40463c:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  404640:	f3 48 0f 2c d8       	cvttss2si %xmm0,%rbx
  404645:	89 de                	mov    %ebx,%esi
			int_to_string(fd, seconds, min_string, sec_string);		
  404647:	e8 04 38 00 00       	call   407e50 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_>
			if (seconds <= 0)
  40464c:	85 db                	test   %ebx,%ebx
  40464e:	74 0d                	je     40465d <main+0x12ed>
		switch (screen) {
  404650:	8b 85 54 c7 ff ff    	mov    -0x38ac(%rbp),%eax
  404656:	ff 24 c5 38 91 40 00 	jmp    *0x409138(,%rax,8)
				text.setString("");
  40465d:	4c 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%r14
  404664:	4c 89 f7             	mov    %r14,%rdi
  404667:	e8 64 de ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  40466c:	4c 89 f2             	mov    %r14,%rdx
  40466f:	be d9 90 40 00       	mov    $0x4090d9,%esi
  404674:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40467b:	e8 70 da ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404680:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  404687:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  40468e:	e8 dd dd ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  404693:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  40469a:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  4046a1:	48 39 df             	cmp    %rbx,%rdi
  4046a4:	74 14                	je     4046ba <main+0x134a>
  4046a6:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4046ad:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4046b4:	00 
  4046b5:	e8 66 db ff ff       	call   402220 <_ZdlPvm@plt>
  4046ba:	4c 89 f7             	mov    %r14,%rdi
  4046bd:	e8 4e dc ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
				typedtext.insert(0, "BOOM!!!");
  4046c2:	4c 89 f7             	mov    %r14,%rdi
  4046c5:	e8 06 de ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  4046ca:	4c 89 f2             	mov    %r14,%rdx
  4046cd:	be a6 90 40 00       	mov    $0x4090a6,%esi
  4046d2:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4046d9:	e8 12 da ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4046de:	48 8d 95 00 c9 ff ff 	lea    -0x3700(%rbp),%rdx
  4046e5:	31 f6                	xor    %esi,%esi
  4046e7:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  4046ee:	e8 bd da ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  4046f3:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4046fa:	48 39 df             	cmp    %rbx,%rdi
  4046fd:	74 14                	je     404713 <main+0x13a3>
  4046ff:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  404706:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40470d:	00 
  40470e:	e8 0d db ff ff       	call   402220 <_ZdlPvm@plt>
  404713:	4c 89 f7             	mov    %r14,%rdi
  404716:	e8 f5 db ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
				clock_text.restart();
  40471b:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  404722:	e8 b9 dc ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
				elapsedtime_text += clock_text.restart();
  404727:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  40472e:	e8 ad dc ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  404733:	48 89 c6             	mov    %rax,%rsi
  404736:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  40473d:	e8 8e dc ff ff       	call   4023d0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404742:	44 8b 35 1b 50 00 00 	mov    0x501b(%rip),%r14d        # 409764 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x164>
  404749:	eb 33                	jmp    40477e <main+0x140e>
  40474b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
					elapsedtime_text -= sf::seconds(.1f);
  404750:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  404755:	e8 f6 d9 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  40475a:	48 89 c6             	mov    %rax,%rsi
  40475d:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  404764:	e8 a7 dc ff ff       	call   402410 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404769:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  404770:	e8 fb db ff ff       	call   402370 <_ZNK2sf6String7getSizeEv@plt>
  404775:	48 85 c0             	test   %rax,%rax
  404778:	0f 85 80 12 00 00    	jne    4059fe <main+0x268e>
				while (elapsedtime_text >= sf::seconds(.1f))
  40477e:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  404783:	e8 c8 d9 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404788:	48 8b bd b8 c7 ff ff 	mov    -0x3848(%rbp),%rdi
  40478f:	48 89 c6             	mov    %rax,%rsi
  404792:	e8 09 db ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  404797:	84 c0                	test   %al,%al
  404799:	75 b5                	jne    404750 <main+0x13e0>
				window.draw(text);
  40479b:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4047a0:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  4047a7:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4047ae:	e8 4d dc ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  4047b3:	c7 85 54 c7 ff ff 06 	movl   $0x6,-0x38ac(%rbp)
  4047ba:	00 00 00 
  4047bd:	0f 1f 00             	nopl   (%rax)
		window.display();
  4047c0:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  4047c7:	e8 04 db ff ff       	call   4022d0 <_ZN2sf6Window7displayEv@plt>
  4047cc:	e9 a7 fd ff ff       	jmp    404578 <main+0x1208>
				elapsedtime_text += clock_text.restart();
  4047d1:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  4047d8:	e8 03 dc ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  4047dd:	48 89 c6             	mov    %rax,%rsi
  4047e0:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  4047e7:	e8 e4 db ff ff       	call   4023d0 <_ZN2sfpLERNS_4TimeES0_@plt>
  4047ec:	44 8b 35 71 4f 00 00 	mov    0x4f71(%rip),%r14d        # 409764 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x164>
  4047f3:	eb 31                	jmp    404826 <main+0x14b6>
  4047f5:	0f 1f 00             	nopl   (%rax)
					elapsedtime_text -= sf::seconds(.1f);
  4047f8:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  4047fd:	e8 4e d9 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404802:	48 89 c6             	mov    %rax,%rsi
  404805:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  40480c:	e8 ff db ff ff       	call   402410 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404811:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  404818:	e8 53 db ff ff       	call   402370 <_ZNK2sf6String7getSizeEv@plt>
  40481d:	48 85 c0             	test   %rax,%rax
  404820:	0f 85 4f 24 00 00    	jne    406c75 <main+0x3905>
				while (elapsedtime_text >= sf::seconds(.1f))
  404826:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  40482b:	e8 20 d9 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404830:	48 8b bd b8 c7 ff ff 	mov    -0x3848(%rbp),%rdi
  404837:	48 89 c6             	mov    %rax,%rsi
  40483a:	e8 61 da ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  40483f:	84 c0                	test   %al,%al
  404841:	75 b5                	jne    4047f8 <main+0x1488>
				window.draw(text);
  404843:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404848:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  40484f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404856:	e8 a5 db ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare1);
  40485b:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404860:	48 8d b5 d0 ca ff ff 	lea    -0x3530(%rbp),%rsi
  404867:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40486e:	e8 8d db ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare2);
  404873:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404878:	48 8d b5 90 cd ff ff 	lea    -0x3270(%rbp),%rsi
  40487f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404886:	e8 75 db ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare3);
  40488b:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404890:	48 8d b5 b0 d1 ff ff 	lea    -0x2e50(%rbp),%rsi
  404897:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40489e:	e8 5d db ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare4);
  4048a3:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4048a8:	48 8d b5 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rsi
  4048af:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4048b6:	e8 45 db ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare5);
  4048bb:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4048c0:	48 8d b5 30 d7 ff ff 	lea    -0x28d0(%rbp),%rsi
  4048c7:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4048ce:	e8 2d db ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare6);
  4048d3:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4048d8:	48 8d b5 90 d8 ff ff 	lea    -0x2770(%rbp),%rsi
  4048df:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4048e6:	e8 15 db ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare7);
  4048eb:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4048f0:	48 8d b5 b0 dc ff ff 	lea    -0x2350(%rbp),%rsi
  4048f7:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4048fe:	e8 fd da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare8);
  404903:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404908:	48 8d b5 10 de ff ff 	lea    -0x21f0(%rbp),%rsi
  40490f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404916:	e8 e5 da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare9);
  40491b:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404920:	48 8d b5 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rsi
  404927:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40492e:	e8 cd da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare10);
  404933:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404938:	48 8d b5 90 e3 ff ff 	lea    -0x1c70(%rbp),%rsi
  40493f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404946:	e8 b5 da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare11);
  40494b:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404950:	48 8d b5 50 e6 ff ff 	lea    -0x19b0(%rbp),%rsi
  404957:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40495e:	e8 9d da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare12);
  404963:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404968:	48 8d b5 10 e9 ff ff 	lea    -0x16f0(%rbp),%rsi
  40496f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404976:	e8 85 da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare13);
  40497b:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404980:	48 8d b5 d0 eb ff ff 	lea    -0x1430(%rbp),%rsi
  404987:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40498e:	e8 6d da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare14);
  404993:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404998:	48 8d b5 f0 ef ff ff 	lea    -0x1010(%rbp),%rsi
  40499f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4049a6:	e8 55 da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare15);
  4049ab:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4049b0:	48 8d b5 50 f1 ff ff 	lea    -0xeb0(%rbp),%rsi
  4049b7:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4049be:	e8 3d da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare16);
  4049c3:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4049c8:	48 8d b5 70 f5 ff ff 	lea    -0xa90(%rbp),%rsi
  4049cf:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4049d6:	e8 25 da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(greenSquare17);
  4049db:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4049e0:	48 8d b5 d0 f6 ff ff 	lea    -0x930(%rbp),%rsi
  4049e7:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4049ee:	e8 0d da ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				window.draw(redSquare18);
  4049f3:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4049f8:	48 8d b5 f0 fa ff ff 	lea    -0x510(%rbp),%rsi
  4049ff:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404a06:	e8 f5 d9 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				switches = readSwitch(fd, switches);
  404a0b:	8b 85 50 c7 ff ff    	mov    -0x38b0(%rbp),%eax
	ioctl(fd, RD_SWITCHES);
  404a11:	be 61 61 00 00       	mov    $0x6161,%esi
  404a16:	44 89 ff             	mov    %r15d,%edi
  404a19:	89 85 9c c7 ff ff    	mov    %eax,-0x3864(%rbp)
  404a1f:	31 c0                	xor    %eax,%eax
  404a21:	e8 da d8 ff ff       	call   402300 <ioctl@plt>
	read(fd, &data, 3);
  404a26:	ba 03 00 00 00       	mov    $0x3,%edx
  404a2b:	48 8d b5 9c c7 ff ff 	lea    -0x3864(%rbp),%rsi
  404a32:	44 89 ff             	mov    %r15d,%edi
  404a35:	e8 f6 d8 ff ff       	call   402330 <read@plt>
	return data;
  404a3a:	8b 9d 9c c7 ff ff    	mov    -0x3864(%rbp),%ebx
	ioctl(fd, WR_RED_LEDS);
  404a40:	be 65 61 00 00       	mov    $0x6165,%esi
  404a45:	44 89 ff             	mov    %r15d,%edi
  404a48:	31 c0                	xor    %eax,%eax
	return data;
  404a4a:	89 9d 50 c7 ff ff    	mov    %ebx,-0x38b0(%rbp)
				writeRedLed(fd, switches);
  404a50:	89 9d a0 c7 ff ff    	mov    %ebx,-0x3860(%rbp)
	ioctl(fd, WR_RED_LEDS);
  404a56:	e8 a5 d8 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  404a5b:	ba 04 00 00 00       	mov    $0x4,%edx
  404a60:	48 8d b5 a0 c7 ff ff 	lea    -0x3860(%rbp),%rsi
  404a67:	44 89 ff             	mov    %r15d,%edi
  404a6a:	e8 71 d6 ff ff       	call   4020e0 <write@plt>
				if(switches == 0x0AA15){
  404a6f:	81 fb 15 aa 00 00    	cmp    $0xaa15,%ebx
  404a75:	0f 85 45 fd ff ff    	jne    4047c0 <main+0x1450>
					text.setString("");
  404a7b:	4c 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%r14
  404a82:	4c 89 f7             	mov    %r14,%rdi
  404a85:	e8 46 da ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  404a8a:	4c 89 f2             	mov    %r14,%rdx
  404a8d:	be d9 90 40 00       	mov    $0x4090d9,%esi
  404a92:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  404a99:	e8 52 d6 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404a9e:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  404aa5:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  404aac:	e8 bf d9 ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  404ab1:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  404ab8:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  404abf:	48 39 df             	cmp    %rbx,%rdi
  404ac2:	74 14                	je     404ad8 <main+0x1768>
  404ac4:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  404acb:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404ad2:	00 
  404ad3:	e8 48 d7 ff ff       	call   402220 <_ZdlPvm@plt>
  404ad8:	4c 89 f7             	mov    %r14,%rdi
  404adb:	e8 30 d8 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
					typedtext.insert(0, "[root@bois ~] $ Sobrecarga no sistema pode ate ser boa");
  404ae0:	4c 89 f7             	mov    %r14,%rdi
  404ae3:	e8 e8 d9 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  404ae8:	4c 89 f2             	mov    %r14,%rdx
  404aeb:	be 68 94 40 00       	mov    $0x409468,%esi
  404af0:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  404af7:	e8 f4 d5 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404afc:	48 8d 95 00 c9 ff ff 	lea    -0x3700(%rbp),%rdx
  404b03:	31 f6                	xor    %esi,%esi
  404b05:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  404b0c:	e8 9f d6 ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  404b11:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  404b18:	48 39 df             	cmp    %rbx,%rdi
  404b1b:	74 14                	je     404b31 <main+0x17c1>
  404b1d:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  404b24:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404b2b:	00 
  404b2c:	e8 ef d6 ff ff       	call   402220 <_ZdlPvm@plt>
  404b31:	4c 89 f7             	mov    %r14,%rdi
  404b34:	e8 d7 d7 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
					temp_clock.restart();
  404b39:	48 8d bd c0 c7 ff ff 	lea    -0x3840(%rbp),%rdi
  404b40:	e8 9b d8 ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
	ioctl(fd, WR_RED_LEDS);
  404b45:	be 65 61 00 00       	mov    $0x6165,%esi
  404b4a:	44 89 ff             	mov    %r15d,%edi
  404b4d:	31 c0                	xor    %eax,%eax
  404b4f:	c7 85 a4 c7 ff ff 00 	movl   $0x0,-0x385c(%rbp)
  404b56:	00 00 00 
  404b59:	e8 a2 d7 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  404b5e:	ba 04 00 00 00       	mov    $0x4,%edx
  404b63:	48 8d b5 a4 c7 ff ff 	lea    -0x385c(%rbp),%rsi
  404b6a:	44 89 ff             	mov    %r15d,%edi
  404b6d:	e8 6e d5 ff ff       	call   4020e0 <write@plt>
					screen = 4;
  404b72:	c7 85 54 c7 ff ff 04 	movl   $0x4,-0x38ac(%rbp)
  404b79:	00 00 00 
  404b7c:	e9 3f fc ff ff       	jmp    4047c0 <main+0x1450>
				elapsedtime_text += clock_text.restart();
  404b81:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  404b88:	e8 53 d8 ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  404b8d:	48 89 c6             	mov    %rax,%rsi
  404b90:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  404b97:	e8 34 d8 ff ff       	call   4023d0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404b9c:	44 8b 35 c1 4b 00 00 	mov    0x4bc1(%rip),%r14d        # 409764 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x164>
  404ba3:	eb 31                	jmp    404bd6 <main+0x1866>
  404ba5:	0f 1f 00             	nopl   (%rax)
					elapsedtime_text -= sf::seconds(.1f);
  404ba8:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  404bad:	e8 9e d5 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404bb2:	48 89 c6             	mov    %rax,%rsi
  404bb5:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  404bbc:	e8 4f d8 ff ff       	call   402410 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404bc1:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  404bc8:	e8 a3 d7 ff ff       	call   402370 <_ZNK2sf6String7getSizeEv@plt>
  404bcd:	48 85 c0             	test   %rax,%rax
  404bd0:	0f 85 f7 1e 00 00    	jne    406acd <main+0x375d>
				while (elapsedtime_text >= sf::seconds(.1f))
  404bd6:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  404bdb:	e8 70 d5 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404be0:	48 8b bd b8 c7 ff ff 	mov    -0x3848(%rbp),%rdi
  404be7:	48 89 c6             	mov    %rax,%rsi
  404bea:	e8 b1 d6 ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  404bef:	84 c0                	test   %al,%al
  404bf1:	75 b5                	jne    404ba8 <main+0x1838>
				window.draw(text);
  404bf3:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404bf8:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  404bff:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404c06:	e8 f5 d7 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
	ioctl(fd, WR_R_DISPLAY);
  404c0b:	be 64 61 00 00       	mov    $0x6164,%esi
  404c10:	44 89 ff             	mov    %r15d,%edi
  404c13:	31 c0                	xor    %eax,%eax
  404c15:	c7 85 90 c7 ff ff a4 	movl   $0x90f999a4,-0x3870(%rbp)
  404c1c:	99 f9 90 
  404c1f:	e8 dc d6 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  404c24:	ba 04 00 00 00       	mov    $0x4,%edx
  404c29:	48 8d b5 90 c7 ff ff 	lea    -0x3870(%rbp),%rsi
  404c30:	44 89 ff             	mov    %r15d,%edi
  404c33:	e8 a8 d4 ff ff       	call   4020e0 <write@plt>
				switches = readSwitch(fd, switches);
  404c38:	8b 85 50 c7 ff ff    	mov    -0x38b0(%rbp),%eax
	ioctl(fd, RD_SWITCHES);
  404c3e:	be 61 61 00 00       	mov    $0x6161,%esi
  404c43:	44 89 ff             	mov    %r15d,%edi
  404c46:	89 85 94 c7 ff ff    	mov    %eax,-0x386c(%rbp)
  404c4c:	31 c0                	xor    %eax,%eax
  404c4e:	e8 ad d6 ff ff       	call   402300 <ioctl@plt>
	read(fd, &data, 3);
  404c53:	ba 03 00 00 00       	mov    $0x3,%edx
  404c58:	48 8d b5 94 c7 ff ff 	lea    -0x386c(%rbp),%rsi
  404c5f:	44 89 ff             	mov    %r15d,%edi
  404c62:	e8 c9 d6 ff ff       	call   402330 <read@plt>
	return data;
  404c67:	8b 85 94 c7 ff ff    	mov    -0x386c(%rbp),%eax
  404c6d:	89 85 50 c7 ff ff    	mov    %eax,-0x38b0(%rbp)
				if (switches == 0x23B6) // 9142 em hexa
  404c73:	3d b6 23 00 00       	cmp    $0x23b6,%eax
  404c78:	0f 85 42 fb ff ff    	jne    4047c0 <main+0x1450>
	ioctl(fd, WR_R_DISPLAY);
  404c7e:	be 64 61 00 00       	mov    $0x6164,%esi
  404c83:	44 89 ff             	mov    %r15d,%edi
  404c86:	31 c0                	xor    %eax,%eax
  404c88:	c7 85 98 c7 ff ff 00 	movl   $0x0,-0x3868(%rbp)
  404c8f:	00 00 00 
  404c92:	e8 69 d6 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  404c97:	ba 04 00 00 00       	mov    $0x4,%edx
  404c9c:	48 8d b5 98 c7 ff ff 	lea    -0x3868(%rbp),%rsi
  404ca3:	44 89 ff             	mov    %r15d,%edi
  404ca6:	e8 35 d4 ff ff       	call   4020e0 <write@plt>
					text.setString("");
  404cab:	4c 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%r14
  404cb2:	4c 89 f7             	mov    %r14,%rdi
  404cb5:	e8 16 d8 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  404cba:	4c 89 f2             	mov    %r14,%rdx
  404cbd:	be d9 90 40 00       	mov    $0x4090d9,%esi
  404cc2:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  404cc9:	e8 22 d4 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404cce:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  404cd5:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  404cdc:	e8 8f d7 ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  404ce1:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  404ce8:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  404cef:	48 39 df             	cmp    %rbx,%rdi
  404cf2:	74 14                	je     404d08 <main+0x1998>
  404cf4:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  404cfb:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404d02:	00 
  404d03:	e8 18 d5 ff ff       	call   402220 <_ZdlPvm@plt>
  404d08:	4c 89 f7             	mov    %r14,%rdi
  404d0b:	e8 00 d6 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
					typedtext.insert(0, "[root@bois ~] $ Isso faz algum sentido?");
  404d10:	4c 89 f7             	mov    %r14,%rdi
  404d13:	e8 b8 d7 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  404d18:	4c 89 f2             	mov    %r14,%rdx
  404d1b:	be 40 94 40 00       	mov    $0x409440,%esi
  404d20:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  404d27:	e8 c4 d3 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  404d2c:	48 8d 95 00 c9 ff ff 	lea    -0x3700(%rbp),%rdx
  404d33:	31 f6                	xor    %esi,%esi
  404d35:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  404d3c:	e8 6f d4 ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  404d41:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  404d48:	48 39 df             	cmp    %rbx,%rdi
  404d4b:	74 14                	je     404d61 <main+0x19f1>
  404d4d:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  404d54:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  404d5b:	00 
  404d5c:	e8 bf d4 ff ff       	call   402220 <_ZdlPvm@plt>
  404d61:	4c 89 f7             	mov    %r14,%rdi
  404d64:	e8 a7 d5 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
					window.clear();
  404d69:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  404d6f:	31 c9                	xor    %ecx,%ecx
  404d71:	31 d2                	xor    %edx,%edx
  404d73:	31 f6                	xor    %esi,%esi
  404d75:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  404d7c:	e8 7f d3 ff ff       	call   402100 <_ZN2sf5ColorC1Ehhhh@plt>
  404d81:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  404d88:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404d8f:	e8 ec d3 ff ff       	call   402180 <_ZN2sf12RenderTarget5clearERKNS_5ColorE@plt>
					screen = 3;
  404d94:	c7 85 54 c7 ff ff 03 	movl   $0x3,-0x38ac(%rbp)
  404d9b:	00 00 00 
  404d9e:	e9 1d fa ff ff       	jmp    4047c0 <main+0x1450>
				elapsedtime_text += clock_text.restart();
  404da3:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  404daa:	e8 31 d6 ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  404daf:	48 89 c6             	mov    %rax,%rsi
  404db2:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  404db9:	e8 12 d6 ff ff       	call   4023d0 <_ZN2sfpLERNS_4TimeES0_@plt>
  404dbe:	44 8b 35 9f 49 00 00 	mov    0x499f(%rip),%r14d        # 409764 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x164>
  404dc5:	eb 37                	jmp    404dfe <main+0x1a8e>
  404dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  404dce:	00 00 
					elapsedtime_text -= sf::seconds(.1f);
  404dd0:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  404dd5:	e8 76 d3 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404dda:	48 89 c6             	mov    %rax,%rsi
  404ddd:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  404de4:	e8 27 d6 ff ff       	call   402410 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  404de9:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  404df0:	e8 7b d5 ff ff       	call   402370 <_ZNK2sf6String7getSizeEv@plt>
  404df5:	48 85 c0             	test   %rax,%rax
  404df8:	0f 85 27 1b 00 00    	jne    406925 <main+0x35b5>
				while (elapsedtime_text >= sf::seconds(.1f))
  404dfe:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  404e03:	e8 48 d3 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404e08:	48 8b bd b8 c7 ff ff 	mov    -0x3848(%rbp),%rdi
  404e0f:	48 89 c6             	mov    %rax,%rsi
  404e12:	e8 89 d4 ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  404e17:	84 c0                	test   %al,%al
  404e19:	75 b5                	jne    404dd0 <main+0x1a60>
				window.draw(text);
  404e1b:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  404e20:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  404e27:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  404e2e:	e8 cd d5 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				int seqGreenLeds[BUTTON_AMOUNT] = {48, 12, 192, 48, 3, 48}; // 2^4+2^5, 2^2+2^3, 2^6+2^7, 2^0+2^1
  404e33:	66 0f 6f 25 d5 48 00 	movdqa 0x48d5(%rip),%xmm4        # 409710 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x110>
  404e3a:	00 
  404e3b:	48 8b 05 a6 48 00 00 	mov    0x48a6(%rip),%rax        # 4096e8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe8>
				temp_time = temp_clock.getElapsedTime();
  404e42:	48 8d bd c0 c7 ff ff 	lea    -0x3840(%rbp),%rdi
				int seqGreenLeds[BUTTON_AMOUNT] = {48, 12, 192, 48, 3, 48}; // 2^4+2^5, 2^2+2^3, 2^6+2^7, 2^0+2^1
  404e49:	48 89 85 d0 c8 ff ff 	mov    %rax,-0x3730(%rbp)
  404e50:	0f 29 a5 c0 c8 ff ff 	movaps %xmm4,-0x3740(%rbp)
				temp_time = temp_clock.getElapsedTime();
  404e57:	e8 54 d5 ff ff       	call   4023b0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>
				if(temp_time >= sf::seconds(3.0f) && i < BUTTON_AMOUNT && flag){
  404e5c:	f3 0f 10 05 04 49 00 	movss  0x4904(%rip),%xmm0        # 409768 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x168>
  404e63:	00 
				temp_time = temp_clock.getElapsedTime();
  404e64:	48 89 85 c8 c7 ff ff 	mov    %rax,-0x3838(%rbp)
				if(temp_time >= sf::seconds(3.0f) && i < BUTTON_AMOUNT && flag){
  404e6b:	e8 e0 d2 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  404e70:	48 8b bd c8 c7 ff ff 	mov    -0x3838(%rbp),%rdi
  404e77:	48 89 c6             	mov    %rax,%rsi
  404e7a:	e8 21 d4 ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  404e7f:	0f b6 95 40 c7 ff ff 	movzbl -0x38c0(%rbp),%edx
  404e86:	84 c0                	test   %al,%al
  404e88:	0f 84 69 12 00 00    	je     4060f7 <main+0x2d87>
  404e8e:	83 bd 3c c7 ff ff 05 	cmpl   $0x5,-0x38c4(%rbp)
  404e95:	0f 8f 69 12 00 00    	jg     406104 <main+0x2d94>
  404e9b:	84 d2                	test   %dl,%dl
  404e9d:	0f 84 54 12 00 00    	je     4060f7 <main+0x2d87>
					temp_clock.restart();
  404ea3:	48 8d bd c0 c7 ff ff 	lea    -0x3840(%rbp),%rdi
  404eaa:	e8 31 d5 ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
					writeGreenLed(fd, seqGreenLeds[i]);
  404eaf:	48 63 85 3c c7 ff ff 	movslq -0x38c4(%rbp),%rax
	ioctl(fd, WR_GREEN_LEDS);
  404eb6:	be 66 61 00 00       	mov    $0x6166,%esi
  404ebb:	44 89 ff             	mov    %r15d,%edi
					writeGreenLed(fd, seqGreenLeds[i]);
  404ebe:	48 89 c3             	mov    %rax,%rbx
  404ec1:	8b 84 85 c0 c8 ff ff 	mov    -0x3740(%rbp,%rax,4),%eax
  404ec8:	89 85 e0 c7 ff ff    	mov    %eax,-0x3820(%rbp)
	ioctl(fd, WR_GREEN_LEDS);
  404ece:	31 c0                	xor    %eax,%eax
  404ed0:	e8 2b d4 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  404ed5:	ba 04 00 00 00       	mov    $0x4,%edx
  404eda:	48 8d b5 e0 c7 ff ff 	lea    -0x3820(%rbp),%rsi
  404ee1:	44 89 ff             	mov    %r15d,%edi
  404ee4:	e8 f7 d1 ff ff       	call   4020e0 <write@plt>
					i++;
  404ee9:	83 c3 01             	add    $0x1,%ebx
  404eec:	89 9d 3c c7 ff ff    	mov    %ebx,-0x38c4(%rbp)
				int answer[BUTTON_AMOUNT] = {11, 13, 7, 11, 14, 11}; // 0xB, 0xD, 0x7, 0xE
  404ef2:	48 8b 05 f7 47 00 00 	mov    0x47f7(%rip),%rax        # 4096f0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xf0>
  404ef9:	66 0f 6f 2d 1f 48 00 	movdqa 0x481f(%rip),%xmm5        # 409720 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x120>
  404f00:	00 
	ioctl(fd, RD_PBUTTONS);
  404f01:	be 62 61 00 00       	mov    $0x6162,%esi
  404f06:	44 89 ff             	mov    %r15d,%edi
				int answer[BUTTON_AMOUNT] = {11, 13, 7, 11, 14, 11}; // 0xB, 0xD, 0x7, 0xE
  404f09:	48 89 85 f0 c8 ff ff 	mov    %rax,-0x3710(%rbp)
				int button = readButton(fd, button);
  404f10:	8b 85 34 c7 ff ff    	mov    -0x38cc(%rbp),%eax
				int answer[BUTTON_AMOUNT] = {11, 13, 7, 11, 14, 11}; // 0xB, 0xD, 0x7, 0xE
  404f16:	0f 29 ad e0 c8 ff ff 	movaps %xmm5,-0x3720(%rbp)
  404f1d:	89 85 e8 c7 ff ff    	mov    %eax,-0x3818(%rbp)
	ioctl(fd, RD_PBUTTONS);
  404f23:	31 c0                	xor    %eax,%eax
  404f25:	e8 d6 d3 ff ff       	call   402300 <ioctl@plt>
	read(fd, &data, 1);
  404f2a:	48 8d 85 e8 c7 ff ff 	lea    -0x3818(%rbp),%rax
  404f31:	ba 01 00 00 00       	mov    $0x1,%edx
  404f36:	44 89 ff             	mov    %r15d,%edi
  404f39:	48 89 c6             	mov    %rax,%rsi
  404f3c:	48 89 85 60 c7 ff ff 	mov    %rax,-0x38a0(%rbp)
  404f43:	e8 e8 d3 ff ff       	call   402330 <read@plt>
	return data;
  404f48:	8b 8d e8 c7 ff ff    	mov    -0x3818(%rbp),%ecx
  404f4e:	89 8d 34 c7 ff ff    	mov    %ecx,-0x38cc(%rbp)
				if(button != 0xF && button != old_button && j < BUTTON_AMOUNT){
  404f54:	83 f9 0f             	cmp    $0xf,%ecx
  404f57:	0f 84 d9 1e 00 00    	je     406e36 <main+0x3ac6>
  404f5d:	39 8d 30 c7 ff ff    	cmp    %ecx,-0x38d0(%rbp)
  404f63:	0f 84 cd 1e 00 00    	je     406e36 <main+0x3ac6>
  404f69:	8b 9d 38 c7 ff ff    	mov    -0x38c8(%rbp),%ebx
  404f6f:	83 fb 06             	cmp    $0x6,%ebx
  404f72:	0f 85 a5 1e 00 00    	jne    406e1d <main+0x3aad>
					printf("%d %d %d %d %d %d\n", input[0], input[1], input[2], input[3], input[4], input[5]);
  404f78:	8b 85 34 c8 ff ff    	mov    -0x37cc(%rbp),%eax
  404f7e:	51                   	push   %rcx
  404f7f:	bf c7 90 40 00       	mov    $0x4090c7,%edi
  404f84:	44 8b 8d 30 c8 ff ff 	mov    -0x37d0(%rbp),%r9d
  404f8b:	44 8b 85 2c c8 ff ff 	mov    -0x37d4(%rbp),%r8d
  404f92:	8b 8d 28 c8 ff ff    	mov    -0x37d8(%rbp),%ecx
  404f98:	8b 95 24 c8 ff ff    	mov    -0x37dc(%rbp),%edx
  404f9e:	50                   	push   %rax
  404f9f:	31 c0                	xor    %eax,%eax
  404fa1:	8b b5 20 c8 ff ff    	mov    -0x37e0(%rbp),%esi
  404fa7:	e8 94 d0 ff ff       	call   402040 <printf@plt>
  404fac:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  404fb3:	58                   	pop    %rax
  404fb4:	4c 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%r14
  404fbb:	31 c0                	xor    %eax,%eax
  404fbd:	5a                   	pop    %rdx
						if(answer[k] != input[k]){
  404fbe:	41 8b 34 06          	mov    (%r14,%rax,1),%esi
  404fc2:	8b 94 05 20 c8 ff ff 	mov    -0x37e0(%rbp,%rax,1),%edx
  404fc9:	39 d6                	cmp    %edx,%esi
  404fcb:	0f 85 b6 21 00 00    	jne    407187 <main+0x3e17>
					for (int k = 0; k < BUTTON_AMOUNT; k++){
  404fd1:	48 83 c0 04          	add    $0x4,%rax
  404fd5:	48 83 f8 18          	cmp    $0x18,%rax
  404fd9:	75 e3                	jne    404fbe <main+0x1c4e>
					if(flag_correct){
  404fdb:	83 bd 2c c7 ff ff 00 	cmpl   $0x0,-0x38d4(%rbp)
  404fe2:	48 89 bd 60 c7 ff ff 	mov    %rdi,-0x38a0(%rbp)
  404fe9:	c7 85 38 c7 ff ff 06 	movl   $0x6,-0x38c8(%rbp)
  404ff0:	00 00 00 
  404ff3:	0f 84 c7 f7 ff ff    	je     4047c0 <main+0x1450>
						text.setString("");
  404ff9:	48 89 fb             	mov    %rdi,%rbx
  404ffc:	e8 cf d4 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  405001:	48 89 da             	mov    %rbx,%rdx
  405004:	be d9 90 40 00       	mov    $0x4090d9,%esi
  405009:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  405010:	e8 db d0 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  405015:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40501c:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405023:	e8 48 d4 ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405028:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  40502f:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  405036:	48 39 df             	cmp    %rbx,%rdi
  405039:	74 14                	je     40504f <main+0x1cdf>
  40503b:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  405042:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405049:	00 
  40504a:	e8 d1 d1 ff ff       	call   402220 <_ZdlPvm@plt>
  40504f:	4c 8b b5 60 c7 ff ff 	mov    -0x38a0(%rbp),%r14
  405056:	4c 89 f7             	mov    %r14,%rdi
  405059:	e8 b2 d2 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
						typedtext.insert(0, "[root@bois ~] $ Parabens, dessa vez nada foi pelos ares, quem sabe na proxima :(");
  40505e:	4c 89 f7             	mov    %r14,%rdi
  405061:	e8 6a d4 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  405066:	4c 89 f2             	mov    %r14,%rdx
  405069:	be a8 95 40 00       	mov    $0x4095a8,%esi
  40506e:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  405075:	e8 76 d0 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  40507a:	48 8d 95 00 c9 ff ff 	lea    -0x3700(%rbp),%rdx
  405081:	31 f6                	xor    %esi,%esi
  405083:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  40508a:	e8 21 d1 ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  40508f:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  405096:	48 39 df             	cmp    %rbx,%rdi
  405099:	74 14                	je     4050af <main+0x1d3f>
  40509b:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4050a2:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4050a9:	00 
  4050aa:	e8 71 d1 ff ff       	call   402220 <_ZdlPvm@plt>
  4050af:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  4050b6:	e8 55 d2 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
						clock_text.restart();
  4050bb:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  4050c2:	e8 19 d3 ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  4050c7:	c7 85 38 c7 ff ff 06 	movl   $0x6,-0x38c8(%rbp)
  4050ce:	00 00 00 
						screen = 7;
  4050d1:	c7 85 54 c7 ff ff 07 	movl   $0x7,-0x38ac(%rbp)
  4050d8:	00 00 00 
  4050db:	e9 e0 f6 ff ff       	jmp    4047c0 <main+0x1450>
				elapsedtime_text += clock_text.restart();
  4050e0:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  4050e7:	e8 f4 d2 ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  4050ec:	48 89 c6             	mov    %rax,%rsi
  4050ef:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  4050f6:	e8 d5 d2 ff ff       	call   4023d0 <_ZN2sfpLERNS_4TimeES0_@plt>
  4050fb:	44 8b 35 62 46 00 00 	mov    0x4662(%rip),%r14d        # 409764 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x164>
  405102:	eb 32                	jmp    405136 <main+0x1dc6>
  405104:	0f 1f 40 00          	nopl   0x0(%rax)
					elapsedtime_text -= sf::seconds(.1f);
  405108:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  40510d:	e8 3e d0 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  405112:	48 89 c6             	mov    %rax,%rsi
  405115:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  40511c:	e8 ef d2 ff ff       	call   402410 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  405121:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  405128:	e8 43 d2 ff ff       	call   402370 <_ZNK2sf6String7getSizeEv@plt>
  40512d:	48 85 c0             	test   %rax,%rax
  405130:	0f 85 47 16 00 00    	jne    40677d <main+0x340d>
				while (elapsedtime_text >= sf::seconds(.1f))
  405136:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  40513b:	e8 10 d0 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  405140:	48 8b bd b8 c7 ff ff 	mov    -0x3848(%rbp),%rdi
  405147:	48 89 c6             	mov    %rax,%rsi
  40514a:	e8 51 d1 ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  40514f:	84 c0                	test   %al,%al
  405151:	75 b5                	jne    405108 <main+0x1d98>
				window.draw(text);
  405153:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  405158:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  40515f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405166:	e8 95 d2 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40516b:	e9 50 f6 ff ff       	jmp    4047c0 <main+0x1450>
				elapsedtime_text += clock_text.restart();
  405170:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  405177:	e8 64 d2 ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  40517c:	48 89 c6             	mov    %rax,%rsi
  40517f:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  405186:	e8 45 d2 ff ff       	call   4023d0 <_ZN2sfpLERNS_4TimeES0_@plt>
  40518b:	44 8b 35 d2 45 00 00 	mov    0x45d2(%rip),%r14d        # 409764 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x164>
  405192:	eb 32                	jmp    4051c6 <main+0x1e56>
  405194:	0f 1f 40 00          	nopl   0x0(%rax)
					elapsedtime_text -= sf::seconds(.1f);
  405198:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  40519d:	e8 ae cf ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  4051a2:	48 89 c6             	mov    %rax,%rsi
  4051a5:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  4051ac:	e8 5f d2 ff ff       	call   402410 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0){
  4051b1:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  4051b8:	e8 b3 d1 ff ff       	call   402370 <_ZNK2sf6String7getSizeEv@plt>
  4051bd:	48 85 c0             	test   %rax,%rax
  4051c0:	0f 85 0f 14 00 00    	jne    4065d5 <main+0x3265>
				while (elapsedtime_text >= sf::seconds(.1f)){
  4051c6:	66 41 0f 6e c6       	movd   %r14d,%xmm0
  4051cb:	e8 80 cf ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  4051d0:	48 8b bd b8 c7 ff ff 	mov    -0x3848(%rbp),%rdi
  4051d7:	48 89 c6             	mov    %rax,%rsi
  4051da:	e8 c1 d0 ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  4051df:	84 c0                	test   %al,%al
  4051e1:	75 b5                	jne    405198 <main+0x1e28>
				window.draw(text);
  4051e3:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4051e8:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
  4051ef:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4051f6:	e8 05 d2 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				switches = readSwitch(fd, switches);
  4051fb:	8b 9d 50 c7 ff ff    	mov    -0x38b0(%rbp),%ebx
	ioctl(fd, RD_SWITCHES);
  405201:	be 61 61 00 00       	mov    $0x6161,%esi
  405206:	44 89 ff             	mov    %r15d,%edi
  405209:	31 c0                	xor    %eax,%eax
  40520b:	89 9d a8 c7 ff ff    	mov    %ebx,-0x3858(%rbp)
  405211:	e8 ea d0 ff ff       	call   402300 <ioctl@plt>
	read(fd, &data, 3);
  405216:	ba 03 00 00 00       	mov    $0x3,%edx
  40521b:	48 8d b5 a8 c7 ff ff 	lea    -0x3858(%rbp),%rsi
  405222:	44 89 ff             	mov    %r15d,%edi
  405225:	e8 06 d1 ff ff       	call   402330 <read@plt>
	return data;
  40522a:	8b 85 a8 c7 ff ff    	mov    -0x3858(%rbp),%eax
  405230:	89 85 60 c7 ff ff    	mov    %eax,-0x38a0(%rbp)
				if(mask != 0){
  405236:	39 c3                	cmp    %eax,%ebx
  405238:	0f 85 45 0f 00 00    	jne    406183 <main+0x2e13>
				if(currMatrix[0] == 1) window.draw(greenSquare1);
  40523e:	83 bd 20 c9 ff ff 01 	cmpl   $0x1,-0x36e0(%rbp)
  405245:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  40524a:	0f 84 11 1c 00 00    	je     406e61 <main+0x3af1>
				else window.draw(redSquare1);
  405250:	48 8d b5 30 cc ff ff 	lea    -0x33d0(%rbp),%rsi
  405257:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40525e:	e8 9d d1 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[3] == 1) window.draw(greenSquare2);
  405263:	83 bd 2c c9 ff ff 01 	cmpl   $0x1,-0x36d4(%rbp)
  40526a:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  40526f:	0f 84 d6 1d 00 00    	je     40704b <main+0x3cdb>
				else window.draw(redSquare2);
  405275:	48 8d b5 f0 ce ff ff 	lea    -0x3110(%rbp),%rsi
  40527c:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405283:	e8 78 d1 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[6] == 1) window.draw(greenSquare3);
  405288:	83 bd 38 c9 ff ff 01 	cmpl   $0x1,-0x36c8(%rbp)
  40528f:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  405294:	0f 84 99 1d 00 00    	je     407033 <main+0x3cc3>
				else window.draw(redSquare3);
  40529a:	48 8d b5 b0 d1 ff ff 	lea    -0x2e50(%rbp),%rsi
  4052a1:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4052a8:	e8 53 d1 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[9] == 1) window.draw(greenSquare4);
  4052ad:	83 bd 44 c9 ff ff 01 	cmpl   $0x1,-0x36bc(%rbp)
  4052b4:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4052b9:	0f 84 5c 1d 00 00    	je     40701b <main+0x3cab>
				else window.draw(redSquare4);
  4052bf:	48 8d b5 70 d4 ff ff 	lea    -0x2b90(%rbp),%rsi
  4052c6:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4052cd:	e8 2e d1 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[12] == 1) window.draw(greenSquare5);
  4052d2:	83 bd 50 c9 ff ff 01 	cmpl   $0x1,-0x36b0(%rbp)
  4052d9:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4052de:	0f 84 1f 1d 00 00    	je     407003 <main+0x3c93>
				else window.draw(redSquare5);
  4052e4:	48 8d b5 30 d7 ff ff 	lea    -0x28d0(%rbp),%rsi
  4052eb:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4052f2:	e8 09 d1 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[15] == 1) window.draw(greenSquare6);
  4052f7:	83 bd 5c c9 ff ff 01 	cmpl   $0x1,-0x36a4(%rbp)
  4052fe:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  405303:	0f 84 e2 1c 00 00    	je     406feb <main+0x3c7b>
				else window.draw(redSquare6);
  405309:	48 8d b5 f0 d9 ff ff 	lea    -0x2610(%rbp),%rsi
  405310:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405317:	e8 e4 d0 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[1] == 1) window.draw(greenSquare7);
  40531c:	83 bd 24 c9 ff ff 01 	cmpl   $0x1,-0x36dc(%rbp)
  405323:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  405328:	0f 84 a5 1c 00 00    	je     406fd3 <main+0x3c63>
				else window.draw(redSquare7);
  40532e:	48 8d b5 b0 dc ff ff 	lea    -0x2350(%rbp),%rsi
  405335:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40533c:	e8 bf d0 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[4] == 1) window.draw(greenSquare8);
  405341:	83 bd 30 c9 ff ff 01 	cmpl   $0x1,-0x36d0(%rbp)
  405348:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  40534d:	0f 84 68 1c 00 00    	je     406fbb <main+0x3c4b>
				else window.draw(redSquare8);
  405353:	48 8d b5 70 df ff ff 	lea    -0x2090(%rbp),%rsi
  40535a:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405361:	e8 9a d0 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[7] == 1) window.draw(greenSquare9);
  405366:	83 bd 3c c9 ff ff 01 	cmpl   $0x1,-0x36c4(%rbp)
  40536d:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  405372:	0f 84 2b 1c 00 00    	je     406fa3 <main+0x3c33>
				else window.draw(redSquare9);
  405378:	48 8d b5 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rsi
  40537f:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405386:	e8 75 d0 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[10] == 1) window.draw(greenSquare10);
  40538b:	83 bd 48 c9 ff ff 01 	cmpl   $0x1,-0x36b8(%rbp)
  405392:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  405397:	0f 84 ee 1b 00 00    	je     406f8b <main+0x3c1b>
				else window.draw(redSquare10);
  40539d:	48 8d b5 f0 e4 ff ff 	lea    -0x1b10(%rbp),%rsi
  4053a4:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4053ab:	e8 50 d0 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[13] == 1) window.draw(greenSquare11);
  4053b0:	83 bd 54 c9 ff ff 01 	cmpl   $0x1,-0x36ac(%rbp)
  4053b7:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4053bc:	0f 84 b1 1b 00 00    	je     406f73 <main+0x3c03>
				else window.draw(redSquare11);
  4053c2:	48 8d b5 b0 e7 ff ff 	lea    -0x1850(%rbp),%rsi
  4053c9:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4053d0:	e8 2b d0 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[16] == 1) window.draw(greenSquare12);
  4053d5:	83 bd 60 c9 ff ff 01 	cmpl   $0x1,-0x36a0(%rbp)
  4053dc:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4053e1:	0f 84 74 1b 00 00    	je     406f5b <main+0x3beb>
				else window.draw(redSquare12);
  4053e7:	48 8d b5 70 ea ff ff 	lea    -0x1590(%rbp),%rsi
  4053ee:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4053f5:	e8 06 d0 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[2] == 1) window.draw(greenSquare13);
  4053fa:	83 bd 28 c9 ff ff 01 	cmpl   $0x1,-0x36d8(%rbp)
  405401:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  405406:	0f 84 37 1b 00 00    	je     406f43 <main+0x3bd3>
				else window.draw(redSquare13);
  40540c:	48 8d b5 30 ed ff ff 	lea    -0x12d0(%rbp),%rsi
  405413:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40541a:	e8 e1 cf ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[5] == 1) window.draw(greenSquare14);
  40541f:	83 bd 34 c9 ff ff 01 	cmpl   $0x1,-0x36cc(%rbp)
  405426:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  40542b:	0f 84 fa 1a 00 00    	je     406f2b <main+0x3bbb>
				else window.draw(redSquare14);
  405431:	48 8d b5 f0 ef ff ff 	lea    -0x1010(%rbp),%rsi
  405438:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  40543f:	e8 bc cf ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[8] == 1) window.draw(greenSquare15);
  405444:	83 bd 40 c9 ff ff 01 	cmpl   $0x1,-0x36c0(%rbp)
  40544b:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  405450:	0f 84 bd 1a 00 00    	je     406f13 <main+0x3ba3>
				else window.draw(redSquare15);
  405456:	48 8d b5 b0 f2 ff ff 	lea    -0xd50(%rbp),%rsi
  40545d:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405464:	e8 97 cf ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[11] == 1) window.draw(greenSquare16);
  405469:	83 bd 4c c9 ff ff 01 	cmpl   $0x1,-0x36b4(%rbp)
  405470:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  405475:	0f 84 80 1a 00 00    	je     406efb <main+0x3b8b>
				else window.draw(redSquare16);
  40547b:	48 8d b5 70 f5 ff ff 	lea    -0xa90(%rbp),%rsi
  405482:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  405489:	e8 72 cf ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[14] == 1) window.draw(greenSquare17);
  40548e:	83 bd 58 c9 ff ff 01 	cmpl   $0x1,-0x36a8(%rbp)
  405495:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  40549a:	0f 84 43 1a 00 00    	je     406ee3 <main+0x3b73>
				else window.draw(redSquare17);
  4054a0:	48 8d b5 30 f8 ff ff 	lea    -0x7d0(%rbp),%rsi
  4054a7:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4054ae:	e8 4d cf ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				if(currMatrix[17] == 1) window.draw(greenSquare18);
  4054b3:	83 bd 64 c9 ff ff 01 	cmpl   $0x1,-0x369c(%rbp)
  4054ba:	ba 80 c2 40 00       	mov    $0x40c280,%edx
  4054bf:	0f 84 06 1a 00 00    	je     406ecb <main+0x3b5b>
				else window.draw(redSquare18);
  4054c5:	48 8d b5 f0 fa ff ff 	lea    -0x510(%rbp),%rsi
  4054cc:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  4054d3:	e8 28 cf ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
				redLeds %= 0x40000;
  4054d8:	81 a5 44 c7 ff ff ff 	andl   $0x3ffff,-0x38bc(%rbp)
  4054df:	ff 03 00 
  4054e2:	8b 85 44 c7 ff ff    	mov    -0x38bc(%rbp),%eax
				if (redLeds == 0x3FFFF){ // All on
  4054e8:	3d ff ff 03 00       	cmp    $0x3ffff,%eax
  4054ed:	0f 84 70 1b 00 00    	je     407063 <main+0x3cf3>
				for(int i = 0; i < 6; i++){
  4054f3:	4c 8d a5 2c c9 ff ff 	lea    -0x36d4(%rbp),%r12
  4054fa:	4c 8d ad 74 c9 ff ff 	lea    -0x368c(%rbp),%r13
  405501:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
					for(int j = 0; j < 3; j++){
  405508:	49 8d 5c 24 f4       	lea    -0xc(%r12),%rbx
						printf("%d ", currMatrix[3*i + j]);
  40550d:	8b 33                	mov    (%rbx),%esi
  40550f:	bf c3 90 40 00       	mov    $0x4090c3,%edi
  405514:	31 c0                	xor    %eax,%eax
  405516:	e8 25 cb ff ff       	call   402040 <printf@plt>
					for(int j = 0; j < 3; j++){
  40551b:	48 83 c3 04          	add    $0x4,%rbx
  40551f:	49 39 dc             	cmp    %rbx,%r12
  405522:	75 e9                	jne    40550d <main+0x219d>
					printf("\n");
  405524:	bf 0a 00 00 00       	mov    $0xa,%edi
  405529:	e8 c2 cd ff ff       	call   4022f0 <putchar@plt>
				for(int i = 0; i < 6; i++){
  40552e:	49 83 c4 0c          	add    $0xc,%r12
  405532:	4d 39 e5             	cmp    %r12,%r13
  405535:	75 d1                	jne    405508 <main+0x2198>
	return data;
  405537:	8b 85 60 c7 ff ff    	mov    -0x38a0(%rbp),%eax
  40553d:	89 85 50 c7 ff ff    	mov    %eax,-0x38b0(%rbp)
  405543:	e9 78 f2 ff ff       	jmp    4047c0 <main+0x1450>
  405548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40554f:	00 
				window.close();
  405550:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  405557:	e8 64 cf ff ff       	call   4024c0 <_ZN2sf6Window5closeEv@plt>
  40555c:	e9 3d f0 ff ff       	jmp    40459e <main+0x122e>
  405561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
			typing.play();
  405568:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  40556f:	e8 7c ce ff ff       	call   4023f0 <_ZN2sf11SoundStream4playEv@plt>
	ioctl(fd, WR_L_DISPLAY);
  405574:	be 63 61 00 00       	mov    $0x6163,%esi
  405579:	44 89 ff             	mov    %r15d,%edi
  40557c:	31 c0                	xor    %eax,%eax
  40557e:	c7 85 7c c7 ff ff 00 	movl   $0x0,-0x3884(%rbp)
  405585:	00 00 00 
  405588:	e8 73 cd ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  40558d:	ba 04 00 00 00       	mov    $0x4,%edx
  405592:	48 8d b5 7c c7 ff ff 	lea    -0x3884(%rbp),%rsi
  405599:	44 89 ff             	mov    %r15d,%edi
  40559c:	e8 3f cb ff ff       	call   4020e0 <write@plt>
	ioctl(fd, WR_R_DISPLAY);
  4055a1:	be 64 61 00 00       	mov    $0x6164,%esi
  4055a6:	44 89 ff             	mov    %r15d,%edi
  4055a9:	31 c0                	xor    %eax,%eax
  4055ab:	c7 85 80 c7 ff ff 00 	movl   $0x0,-0x3880(%rbp)
  4055b2:	00 00 00 
  4055b5:	e8 46 cd ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  4055ba:	ba 04 00 00 00       	mov    $0x4,%edx
  4055bf:	48 8d b5 80 c7 ff ff 	lea    -0x3880(%rbp),%rsi
  4055c6:	44 89 ff             	mov    %r15d,%edi
  4055c9:	e8 12 cb ff ff       	call   4020e0 <write@plt>
	ioctl(fd, WR_GREEN_LEDS);
  4055ce:	be 66 61 00 00       	mov    $0x6166,%esi
  4055d3:	44 89 ff             	mov    %r15d,%edi
  4055d6:	31 c0                	xor    %eax,%eax
  4055d8:	c7 85 84 c7 ff ff 00 	movl   $0x0,-0x387c(%rbp)
  4055df:	00 00 00 
  4055e2:	e8 19 cd ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  4055e7:	ba 04 00 00 00       	mov    $0x4,%edx
  4055ec:	48 8d b5 84 c7 ff ff 	lea    -0x387c(%rbp),%rsi
  4055f3:	44 89 ff             	mov    %r15d,%edi
  4055f6:	e8 e5 ca ff ff       	call   4020e0 <write@plt>
	ioctl(fd, WR_RED_LEDS);
  4055fb:	be 65 61 00 00       	mov    $0x6165,%esi
  405600:	44 89 ff             	mov    %r15d,%edi
  405603:	31 c0                	xor    %eax,%eax
  405605:	c7 85 88 c7 ff ff 00 	movl   $0x0,-0x3878(%rbp)
  40560c:	00 00 00 
  40560f:	e8 ec cc ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  405614:	ba 04 00 00 00       	mov    $0x4,%edx
  405619:	48 8d b5 88 c7 ff ff 	lea    -0x3878(%rbp),%rsi
  405620:	44 89 ff             	mov    %r15d,%edi
  405623:	e8 b8 ca ff ff       	call   4020e0 <write@plt>
				elapsedtime_text += clock_text.restart();
  405628:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  40562f:	e8 ac cd ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  405634:	48 89 c6             	mov    %rax,%rsi
  405637:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  40563e:	e8 8d cd ff ff       	call   4023d0 <_ZN2sfpLERNS_4TimeES0_@plt>
  405643:	c7 85 54 c7 ff ff 01 	movl   $0x1,-0x38ac(%rbp)
  40564a:	00 00 00 
  40564d:	0f 1f 00             	nopl   (%rax)
				while (elapsedtime_text >= sf::seconds(.001f))
  405650:	f3 0f 10 05 04 41 00 	movss  0x4104(%rip),%xmm0        # 40975c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x15c>
  405657:	00 
  405658:	e8 f3 ca ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  40565d:	48 8b bd b8 c7 ff ff 	mov    -0x3848(%rbp),%rdi
  405664:	48 89 c6             	mov    %rax,%rsi
  405667:	e8 34 cc ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  40566c:	84 c0                	test   %al,%al
  40566e:	0f 84 df fa ff ff    	je     405153 <main+0x1de3>
					elapsedtime_text -= sf::seconds(.001f);
  405674:	f3 0f 10 05 e0 40 00 	movss  0x40e0(%rip),%xmm0        # 40975c <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x15c>
  40567b:	00 
  40567c:	e8 cf ca ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  405681:	48 89 c6             	mov    %rax,%rsi
  405684:	48 8d bd b8 c7 ff ff 	lea    -0x3848(%rbp),%rdi
  40568b:	e8 80 cd ff ff       	call   402410 <_ZN2sfmIERNS_4TimeES0_@plt>
					if (typedtext.getSize() > 0)
  405690:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  405697:	e8 d4 cc ff ff       	call   402370 <_ZNK2sf6String7getSizeEv@plt>
  40569c:	48 85 c0             	test   %rax,%rax
  40569f:	0f 84 fb 01 00 00    	je     4058a0 <main+0x2530>
						text.setString(text.getString() + typedtext[0]);
  4056a5:	31 f6                	xor    %esi,%esi
  4056a7:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  4056ae:	e8 cd cb ff ff       	call   402280 <_ZN2sf6StringixEm@plt>
  4056b3:	4c 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%r14
  4056ba:	8b 30                	mov    (%rax),%esi
  4056bc:	4c 89 f7             	mov    %r14,%rdi
  4056bf:	e8 fc c9 ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  4056c4:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4056cb:	e8 f0 cc ff ff       	call   4023c0 <_ZNK2sf4Text9getStringEv@plt>
  4056d0:	48 89 c6             	mov    %rax,%rsi
  4056d3:	4c 89 f2             	mov    %r14,%rdx
  4056d6:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4056dd:	e8 ee c9 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  4056e2:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4056e9:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4056f0:	e8 7b cd ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  4056f5:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4056fc:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  405703:	48 39 df             	cmp    %rbx,%rdi
  405706:	74 14                	je     40571c <main+0x23ac>
  405708:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  40570f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405716:	00 
  405717:	e8 04 cb ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40571c:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  405723:	48 8d 85 f0 c8 ff ff 	lea    -0x3710(%rbp),%rax
  40572a:	48 89 85 58 c7 ff ff 	mov    %rax,-0x38a8(%rbp)
  405731:	48 39 c7             	cmp    %rax,%rdi
  405734:	74 14                	je     40574a <main+0x23da>
  405736:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  40573d:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405744:	00 
  405745:	e8 d6 ca ff ff       	call   402220 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  40574a:	48 8d 85 e8 c7 ff ff 	lea    -0x3818(%rbp),%rax
  405751:	4c 8d a5 e0 c7 ff ff 	lea    -0x3820(%rbp),%r12
  405758:	48 89 c7             	mov    %rax,%rdi
  40575b:	48 89 85 60 c7 ff ff 	mov    %rax,-0x38a0(%rbp)
  405762:	e8 69 cd ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  405767:	4c 89 e7             	mov    %r12,%rdi
  40576a:	e8 61 cd ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  40576f:	4c 89 e2             	mov    %r12,%rdx
  405772:	48 8d b5 40 c8 ff ff 	lea    -0x37c0(%rbp),%rsi
  405779:	48 8d bd c0 c8 ff ff 	lea    -0x3740(%rbp),%rdi
  405780:	e8 db cc ff ff       	call   402460 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
      // Capacity:
      ///  Returns the number of characters in the string, not including any
      ///  null-termination.
      size_type
      size() const _GLIBCXX_NOEXCEPT
      { return _M_string_length; }
  405785:	4c 8b ad c8 c8 ff ff 	mov    -0x3738(%rbp),%r13
	if (__pos > this->size())
  40578c:	4d 85 ed             	test   %r13,%r13
  40578f:	0f 84 14 1b 00 00    	je     4072a9 <main+0x3f39>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  405795:	48 8b 85 58 c7 ff ff 	mov    -0x38a8(%rbp),%rax
               random_access_iterator_tag)
    {
      // concept requirements
      __glibcxx_function_requires(_RandomAccessIteratorConcept<
				  _RandomAccessIterator>)
      return __last - __first;
  40579c:	49 83 ed 01          	sub    $0x1,%r13
	// NB: Not required, but considered best practice.
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	  std::__throw_logic_error(__N("basic_string::"
				       "_M_construct null not valid"));

	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  4057a0:	4c 89 ad 00 c9 ff ff 	mov    %r13,-0x3700(%rbp)
  4057a7:	48 89 85 e0 c8 ff ff 	mov    %rax,-0x3720(%rbp)
      { return _M_dataplus._M_p; }
  4057ae:	48 8b 85 c0 c8 ff ff 	mov    -0x3740(%rbp),%rax
  4057b5:	48 89 85 48 c7 ff ff 	mov    %rax,-0x38b8(%rbp)

	if (__dnew > size_type(_S_local_capacity))
  4057bc:	49 83 fd 0f          	cmp    $0xf,%r13
  4057c0:	0f 87 e3 03 00 00    	ja     405ba9 <main+0x2839>
	if (__n == 1)
  4057c6:	49 83 fd 01          	cmp    $0x1,%r13
  4057ca:	0f 85 19 02 00 00    	jne    4059e9 <main+0x2679>
  4057d0:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  4057d4:	88 85 f0 c8 ff ff    	mov    %al,-0x3710(%rbp)
  4057da:	48 8b 85 58 c7 ff ff 	mov    -0x38a8(%rbp),%rax
      { _M_string_length = __length; }
  4057e1:	4c 89 ad e8 c8 ff ff 	mov    %r13,-0x3718(%rbp)
  4057e8:	48 8b 95 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdx
  4057ef:	4c 89 f6             	mov    %r14,%rsi
  4057f2:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4057f9:	42 c6 04 28 00       	movb   $0x0,(%rax,%r13,1)
  4057fe:	e8 9d c8 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405803:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40580a:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  405811:	e8 1a cc ff ff       	call   402430 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405816:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  40581d:	48 39 df             	cmp    %rbx,%rdi
  405820:	74 14                	je     405836 <main+0x24c6>
  405822:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  405829:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405830:	00 
  405831:	e8 ea c9 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405836:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  40583d:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  405844:	74 10                	je     405856 <main+0x24e6>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405846:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  40584d:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405851:	e8 ca c9 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405856:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  40585d:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  405864:	48 39 c7             	cmp    %rax,%rdi
  405867:	74 10                	je     405879 <main+0x2509>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405869:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  405870:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405874:	e8 a7 c9 ff ff       	call   402220 <_ZdlPvm@plt>
  405879:	4c 89 e7             	mov    %r12,%rdi
  40587c:	e8 8f ca ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  405881:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  405888:	e8 83 ca ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
						temp_clock.restart();
  40588d:	48 8d bd c0 c7 ff ff 	lea    -0x3840(%rbp),%rdi
  405894:	e8 47 cb ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  405899:	e9 b2 fd ff ff       	jmp    405650 <main+0x22e0>
  40589e:	66 90                	xchg   %ax,%ax
						temp_time = temp_clock.getElapsedTime();
  4058a0:	48 8d bd c0 c7 ff ff 	lea    -0x3840(%rbp),%rdi
  4058a7:	e8 04 cb ff ff       	call   4023b0 <_ZNK2sf5Clock14getElapsedTimeEv@plt>
						if (temp_time >= sf::seconds(5.0f))
  4058ac:	f3 0f 10 05 ac 3e 00 	movss  0x3eac(%rip),%xmm0        # 409760 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x160>
  4058b3:	00 
						temp_time = temp_clock.getElapsedTime();
  4058b4:	48 89 85 c8 c7 ff ff 	mov    %rax,-0x3838(%rbp)
						if (temp_time >= sf::seconds(5.0f))
  4058bb:	e8 90 c8 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  4058c0:	48 8b bd c8 c7 ff ff 	mov    -0x3838(%rbp),%rdi
  4058c7:	48 89 c6             	mov    %rax,%rsi
  4058ca:	e8 d1 c9 ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  4058cf:	84 c0                	test   %al,%al
  4058d1:	0f 84 79 fd ff ff    	je     405650 <main+0x22e0>
	ioctl(fd, WR_R_DISPLAY);
  4058d7:	be 64 61 00 00       	mov    $0x6164,%esi
  4058dc:	44 89 ff             	mov    %r15d,%edi
  4058df:	31 c0                	xor    %eax,%eax
  4058e1:	c7 85 8c c7 ff ff ff 	movl   $0xffffffff,-0x3874(%rbp)
  4058e8:	ff ff ff 
  4058eb:	e8 10 ca ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  4058f0:	ba 04 00 00 00       	mov    $0x4,%edx
  4058f5:	48 8d b5 8c c7 ff ff 	lea    -0x3874(%rbp),%rsi
  4058fc:	44 89 ff             	mov    %r15d,%edi
  4058ff:	e8 dc c7 ff ff       	call   4020e0 <write@plt>
							text.setString("");
  405904:	4c 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%r14
  40590b:	4c 89 f7             	mov    %r14,%rdi
  40590e:	e8 bd cb ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  405913:	4c 89 f2             	mov    %r14,%rdx
  405916:	be d9 90 40 00       	mov    $0x4090d9,%esi
  40591b:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  405922:	e8 c9 c7 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  405927:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40592e:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405935:	e8 36 cb ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  40593a:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  405941:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  405948:	48 39 df             	cmp    %rbx,%rdi
  40594b:	74 14                	je     405961 <main+0x25f1>
  40594d:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  405954:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40595b:	00 
  40595c:	e8 bf c8 ff ff       	call   402220 <_ZdlPvm@plt>
  405961:	4c 89 f7             	mov    %r14,%rdi
  405964:	e8 a7 c9 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
							typedtext.insert(0, "[root@bois ~] $ Voce deveria saber matematica...");
  405969:	4c 89 f7             	mov    %r14,%rdi
  40596c:	e8 5f cb ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  405971:	4c 89 f2             	mov    %r14,%rdx
  405974:	be 08 94 40 00       	mov    $0x409408,%esi
  405979:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  405980:	e8 6b c7 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  405985:	48 8d 95 00 c9 ff ff 	lea    -0x3700(%rbp),%rdx
  40598c:	31 f6                	xor    %esi,%esi
  40598e:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  405995:	e8 16 c8 ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  40599a:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4059a1:	48 39 df             	cmp    %rbx,%rdi
  4059a4:	74 14                	je     4059ba <main+0x264a>
  4059a6:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4059ad:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4059b4:	00 
  4059b5:	e8 66 c8 ff ff       	call   402220 <_ZdlPvm@plt>
  4059ba:	4c 89 f7             	mov    %r14,%rdi
  4059bd:	e8 4e c9 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
							clock_text.restart();
  4059c2:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  4059c9:	e8 12 ca ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
							clock_bomb.restart();
  4059ce:	48 8d bd d0 c7 ff ff 	lea    -0x3830(%rbp),%rdi
  4059d5:	e8 06 ca ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
							screen = 2;
  4059da:	c7 85 54 c7 ff ff 02 	movl   $0x2,-0x38ac(%rbp)
  4059e1:	00 00 00 
  4059e4:	e9 67 fc ff ff       	jmp    405650 <main+0x22e0>
      }

      static _GLIBCXX20_CONSTEXPR char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
      {
	if (__n == 0)
  4059e9:	4d 85 ed             	test   %r13,%r13
  4059ec:	0f 85 a6 18 00 00    	jne    407298 <main+0x3f28>
  4059f2:	48 8b 85 58 c7 ff ff 	mov    -0x38a8(%rbp),%rax
  4059f9:	e9 e3 fd ff ff       	jmp    4057e1 <main+0x2471>
						text.setString(text.getString() + typedtext[0]);
  4059fe:	31 f6                	xor    %esi,%esi
  405a00:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  405a07:	e8 74 c8 ff ff       	call   402280 <_ZN2sf6StringixEm@plt>
  405a0c:	8b 30                	mov    (%rax),%esi
  405a0e:	48 8d bd e0 c8 ff ff 	lea    -0x3720(%rbp),%rdi
  405a15:	e8 a6 c6 ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  405a1a:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405a21:	e8 9a c9 ff ff       	call   4023c0 <_ZNK2sf4Text9getStringEv@plt>
  405a26:	48 89 c6             	mov    %rax,%rsi
  405a29:	48 8d 95 e0 c8 ff ff 	lea    -0x3720(%rbp),%rdx
  405a30:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  405a37:	e8 94 c6 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  405a3c:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  405a43:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405a4a:	e8 21 ca ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  405a4f:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  405a56:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  405a5d:	48 39 df             	cmp    %rbx,%rdi
  405a60:	74 14                	je     405a76 <main+0x2706>
  405a62:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  405a69:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405a70:	00 
  405a71:	e8 aa c7 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405a76:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  405a7d:	48 8d 85 f0 c8 ff ff 	lea    -0x3710(%rbp),%rax
  405a84:	48 89 85 58 c7 ff ff 	mov    %rax,-0x38a8(%rbp)
  405a8b:	48 39 c7             	cmp    %rax,%rdi
  405a8e:	74 14                	je     405aa4 <main+0x2734>
  405a90:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  405a97:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405a9e:	00 
  405a9f:	e8 7c c7 ff ff       	call   402220 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  405aa4:	48 8d 85 e8 c7 ff ff 	lea    -0x3818(%rbp),%rax
  405aab:	4c 8d a5 e0 c7 ff ff 	lea    -0x3820(%rbp),%r12
  405ab2:	48 89 c7             	mov    %rax,%rdi
  405ab5:	48 89 85 60 c7 ff ff 	mov    %rax,-0x38a0(%rbp)
  405abc:	4c 8d ad c0 c8 ff ff 	lea    -0x3740(%rbp),%r13
  405ac3:	e8 08 ca ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  405ac8:	4c 89 e7             	mov    %r12,%rdi
  405acb:	e8 00 ca ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  405ad0:	4c 89 e2             	mov    %r12,%rdx
  405ad3:	48 8d b5 40 c8 ff ff 	lea    -0x37c0(%rbp),%rsi
  405ada:	4c 89 ef             	mov    %r13,%rdi
  405add:	e8 7e c9 ff ff       	call   402460 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  405ae2:	48 8d 85 e0 c8 ff ff 	lea    -0x3720(%rbp),%rax
  405ae9:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  405af0:	ba 01 00 00 00       	mov    $0x1,%edx
  405af5:	4c 89 ee             	mov    %r13,%rsi
  405af8:	48 89 c7             	mov    %rax,%rdi
  405afb:	e8 30 c7 ff ff       	call   402230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  405b00:	48 8b 95 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdx
  405b07:	48 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%rsi
  405b0e:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  405b15:	e8 86 c5 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  405b1a:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  405b21:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  405b28:	e8 03 c9 ff ff       	call   402430 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  405b2d:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  405b34:	48 39 df             	cmp    %rbx,%rdi
  405b37:	74 14                	je     405b4d <main+0x27dd>
  405b39:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  405b40:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405b47:	00 
  405b48:	e8 d3 c6 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405b4d:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  405b54:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  405b5b:	74 10                	je     405b6d <main+0x27fd>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405b5d:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  405b64:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405b68:	e8 b3 c6 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405b6d:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  405b74:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  405b7b:	48 39 c7             	cmp    %rax,%rdi
  405b7e:	74 10                	je     405b90 <main+0x2820>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405b80:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  405b87:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405b8b:	e8 90 c6 ff ff       	call   402220 <_ZdlPvm@plt>
  405b90:	4c 89 e7             	mov    %r12,%rdi
  405b93:	e8 78 c7 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  405b98:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  405b9f:	e8 6c c7 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  405ba4:	e9 d5 eb ff ff       	jmp    40477e <main+0x140e>
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
  405ba9:	31 d2                	xor    %edx,%edx
  405bab:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  405bb2:	4c 89 f7             	mov    %r14,%rdi
  405bb5:	e8 d6 c8 ff ff       	call   402490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  405bba:	48 89 85 e0 c8 ff ff 	mov    %rax,-0x3720(%rbp)
  405bc1:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
  405bc4:	48 8b 85 00 c9 ff ff 	mov    -0x3700(%rbp),%rax
  405bcb:	48 89 85 f0 c8 ff ff 	mov    %rax,-0x3710(%rbp)
	const _CharT* __start = __str._M_data()
  405bd2:	48 8b b5 48 c7 ff ff 	mov    -0x38b8(%rbp),%rsi
	  return __s1;
#ifdef __cpp_lib_is_constant_evaluated
	if (std::is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  405bd9:	4c 89 ea             	mov    %r13,%rdx
  405bdc:	48 83 c6 01          	add    $0x1,%rsi
  405be0:	e8 eb c5 ff ff       	call   4021d0 <memcpy@plt>
	  {
	    _M_dispose();
	    __throw_exception_again;
	  }

	_M_set_length(__dnew);
  405be5:	4c 8b ad 00 c9 ff ff 	mov    -0x3700(%rbp),%r13
      { return _M_dataplus._M_p; }
  405bec:	48 8b 85 e0 c8 ff ff 	mov    -0x3720(%rbp),%rax
  405bf3:	e9 e9 fb ff ff       	jmp    4057e1 <main+0x2471>
  405bf8:	b8 f0 bc 40 00       	mov    $0x40bcf0,%eax
  405bfd:	48 8b bd a0 c8 ff ff 	mov    -0x3760(%rbp),%rdi
  405c04:	66 48 0f 6e d8       	movq   %rax,%xmm3
	if (!_M_is_local())
  405c09:	48 8d 85 b0 c8 ff ff 	lea    -0x3750(%rbp),%rax
  405c10:	0f 16 1d e1 3a 00 00 	movhps 0x3ae1(%rip),%xmm3        # 4096f8 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xf8>
  405c17:	0f 29 9d 60 c7 ff ff 	movaps %xmm3,-0x38a0(%rbp)
  405c1e:	48 39 c7             	cmp    %rax,%rdi
  405c21:	74 10                	je     405c33 <main+0x28c3>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405c23:	48 8b 85 b0 c8 ff ff 	mov    -0x3750(%rbp),%rax
  405c2a:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405c2e:	e8 ed c5 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405c33:	48 8b bd 80 c8 ff ff 	mov    -0x3780(%rbp),%rdi
	if (!_M_is_local())
  405c3a:	48 8d 85 90 c8 ff ff 	lea    -0x3770(%rbp),%rax
  405c41:	48 39 c7             	cmp    %rax,%rdi
  405c44:	74 10                	je     405c56 <main+0x28e6>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  405c46:	48 8b 85 90 c8 ff ff 	mov    -0x3770(%rbp),%rax
  405c4d:	48 8d 70 01          	lea    0x1(%rax),%rsi
  405c51:	e8 ca c5 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405c56:	48 8b bd 60 c8 ff ff 	mov    -0x37a0(%rbp),%rdi
	if (!_M_is_local())
  405c5d:	48 8d 85 70 c8 ff ff 	lea    -0x3790(%rbp),%rax
  405c64:	48 39 c7             	cmp    %rax,%rdi
  405c67:	74 14                	je     405c7d <main+0x290d>
  405c69:	48 8b 85 70 c8 ff ff 	mov    -0x3790(%rbp),%rax
  405c70:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405c77:	00 
  405c78:	e8 a3 c5 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  405c7d:	48 8b bd 40 c8 ff ff 	mov    -0x37c0(%rbp),%rdi
	if (!_M_is_local())
  405c84:	48 8d 85 50 c8 ff ff 	lea    -0x37b0(%rbp),%rax
  405c8b:	48 39 c7             	cmp    %rax,%rdi
  405c8e:	74 14                	je     405ca4 <main+0x2934>
  405c90:	48 8b 85 50 c8 ff ff 	mov    -0x37b0(%rbp),%rax
  405c97:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  405c9e:	00 
  405c9f:	e8 7c c5 ff ff       	call   402220 <_ZdlPvm@plt>
}
  405ca4:	48 8d bd 00 ca ff ff 	lea    -0x3600(%rbp),%rdi
  405cab:	e8 90 c6 ff ff       	call   402340 <_ZN2sf5MusicD1Ev@plt>
  405cb0:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  405cb7:	e8 44 2b 00 00       	call   408800 <_ZN2sf4TextD1Ev>
  405cbc:	48 8d bd 70 c9 ff ff 	lea    -0x3690(%rbp),%rdi
  405cc3:	e8 88 c5 ff ff       	call   402250 <_ZN2sf4FontD1Ev@plt>
  405cc8:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405ccf:	ff 
  405cd0:	48 8d bd f0 fa ff ff 	lea    -0x510(%rbp),%rdi
  405cd7:	0f 29 95 f0 fa ff ff 	movaps %xmm2,-0x510(%rbp)
  405cde:	e8 7d c3 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405ce3:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405cea:	ff 
  405ceb:	48 8d bd 90 f9 ff ff 	lea    -0x670(%rbp),%rdi
  405cf2:	0f 29 95 90 f9 ff ff 	movaps %xmm2,-0x670(%rbp)
  405cf9:	e8 62 c3 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405cfe:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405d05:	ff 
  405d06:	48 8d bd 30 f8 ff ff 	lea    -0x7d0(%rbp),%rdi
  405d0d:	0f 29 95 30 f8 ff ff 	movaps %xmm2,-0x7d0(%rbp)
  405d14:	e8 47 c3 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405d19:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405d20:	ff 
  405d21:	48 8d bd d0 f6 ff ff 	lea    -0x930(%rbp),%rdi
  405d28:	0f 29 95 d0 f6 ff ff 	movaps %xmm2,-0x930(%rbp)
  405d2f:	e8 2c c3 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405d34:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405d3b:	ff 
  405d3c:	48 8d bd 70 f5 ff ff 	lea    -0xa90(%rbp),%rdi
  405d43:	0f 29 95 70 f5 ff ff 	movaps %xmm2,-0xa90(%rbp)
  405d4a:	e8 11 c3 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405d4f:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405d56:	ff 
  405d57:	48 8d bd 10 f4 ff ff 	lea    -0xbf0(%rbp),%rdi
  405d5e:	0f 29 95 10 f4 ff ff 	movaps %xmm2,-0xbf0(%rbp)
  405d65:	e8 f6 c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405d6a:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405d71:	ff 
  405d72:	48 8d bd b0 f2 ff ff 	lea    -0xd50(%rbp),%rdi
  405d79:	0f 29 95 b0 f2 ff ff 	movaps %xmm2,-0xd50(%rbp)
  405d80:	e8 db c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405d85:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405d8c:	ff 
  405d8d:	48 8d bd 50 f1 ff ff 	lea    -0xeb0(%rbp),%rdi
  405d94:	0f 29 95 50 f1 ff ff 	movaps %xmm2,-0xeb0(%rbp)
  405d9b:	e8 c0 c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405da0:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405da7:	ff 
  405da8:	48 8d bd f0 ef ff ff 	lea    -0x1010(%rbp),%rdi
  405daf:	0f 29 95 f0 ef ff ff 	movaps %xmm2,-0x1010(%rbp)
  405db6:	e8 a5 c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405dbb:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405dc2:	ff 
  405dc3:	48 8d bd 90 ee ff ff 	lea    -0x1170(%rbp),%rdi
  405dca:	0f 29 95 90 ee ff ff 	movaps %xmm2,-0x1170(%rbp)
  405dd1:	e8 8a c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405dd6:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405ddd:	ff 
  405dde:	48 8d bd 30 ed ff ff 	lea    -0x12d0(%rbp),%rdi
  405de5:	0f 29 95 30 ed ff ff 	movaps %xmm2,-0x12d0(%rbp)
  405dec:	e8 6f c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405df1:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405df8:	ff 
  405df9:	48 8d bd d0 eb ff ff 	lea    -0x1430(%rbp),%rdi
  405e00:	0f 29 95 d0 eb ff ff 	movaps %xmm2,-0x1430(%rbp)
  405e07:	e8 54 c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405e0c:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405e13:	ff 
  405e14:	48 8d bd 70 ea ff ff 	lea    -0x1590(%rbp),%rdi
  405e1b:	0f 29 95 70 ea ff ff 	movaps %xmm2,-0x1590(%rbp)
  405e22:	e8 39 c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405e27:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405e2e:	ff 
  405e2f:	48 8d bd 10 e9 ff ff 	lea    -0x16f0(%rbp),%rdi
  405e36:	0f 29 95 10 e9 ff ff 	movaps %xmm2,-0x16f0(%rbp)
  405e3d:	e8 1e c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405e42:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405e49:	ff 
  405e4a:	48 8d bd b0 e7 ff ff 	lea    -0x1850(%rbp),%rdi
  405e51:	0f 29 95 b0 e7 ff ff 	movaps %xmm2,-0x1850(%rbp)
  405e58:	e8 03 c2 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405e5d:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405e64:	ff 
  405e65:	48 8d bd 50 e6 ff ff 	lea    -0x19b0(%rbp),%rdi
  405e6c:	0f 29 95 50 e6 ff ff 	movaps %xmm2,-0x19b0(%rbp)
  405e73:	e8 e8 c1 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405e78:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405e7f:	ff 
  405e80:	48 8d bd f0 e4 ff ff 	lea    -0x1b10(%rbp),%rdi
  405e87:	0f 29 95 f0 e4 ff ff 	movaps %xmm2,-0x1b10(%rbp)
  405e8e:	e8 cd c1 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405e93:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405e9a:	ff 
  405e9b:	48 8d bd 90 e3 ff ff 	lea    -0x1c70(%rbp),%rdi
  405ea2:	0f 29 95 90 e3 ff ff 	movaps %xmm2,-0x1c70(%rbp)
  405ea9:	e8 b2 c1 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405eae:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405eb5:	ff 
  405eb6:	48 8d bd 30 e2 ff ff 	lea    -0x1dd0(%rbp),%rdi
  405ebd:	0f 29 95 30 e2 ff ff 	movaps %xmm2,-0x1dd0(%rbp)
  405ec4:	e8 97 c1 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405ec9:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405ed0:	ff 
  405ed1:	48 8d bd d0 e0 ff ff 	lea    -0x1f30(%rbp),%rdi
  405ed8:	0f 29 95 d0 e0 ff ff 	movaps %xmm2,-0x1f30(%rbp)
  405edf:	e8 7c c1 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405ee4:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405eeb:	ff 
  405eec:	48 8d bd 70 df ff ff 	lea    -0x2090(%rbp),%rdi
  405ef3:	0f 29 95 70 df ff ff 	movaps %xmm2,-0x2090(%rbp)
  405efa:	e8 61 c1 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405eff:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405f06:	ff 
  405f07:	48 8d bd 10 de ff ff 	lea    -0x21f0(%rbp),%rdi
  405f0e:	0f 29 95 10 de ff ff 	movaps %xmm2,-0x21f0(%rbp)
  405f15:	e8 46 c1 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405f1a:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405f21:	ff 
  405f22:	48 8d bd b0 dc ff ff 	lea    -0x2350(%rbp),%rdi
  405f29:	0f 29 95 b0 dc ff ff 	movaps %xmm2,-0x2350(%rbp)
  405f30:	e8 2b c1 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405f35:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405f3c:	ff 
  405f3d:	48 8d bd 50 db ff ff 	lea    -0x24b0(%rbp),%rdi
  405f44:	0f 29 95 50 db ff ff 	movaps %xmm2,-0x24b0(%rbp)
  405f4b:	e8 10 c1 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405f50:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405f57:	ff 
  405f58:	48 8d bd f0 d9 ff ff 	lea    -0x2610(%rbp),%rdi
  405f5f:	0f 29 95 f0 d9 ff ff 	movaps %xmm2,-0x2610(%rbp)
  405f66:	e8 f5 c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405f6b:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405f72:	ff 
  405f73:	48 8d bd 90 d8 ff ff 	lea    -0x2770(%rbp),%rdi
  405f7a:	0f 29 95 90 d8 ff ff 	movaps %xmm2,-0x2770(%rbp)
  405f81:	e8 da c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405f86:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405f8d:	ff 
  405f8e:	48 8d bd 30 d7 ff ff 	lea    -0x28d0(%rbp),%rdi
  405f95:	0f 29 95 30 d7 ff ff 	movaps %xmm2,-0x28d0(%rbp)
  405f9c:	e8 bf c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405fa1:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405fa8:	ff 
  405fa9:	48 8d bd d0 d5 ff ff 	lea    -0x2a30(%rbp),%rdi
  405fb0:	0f 29 95 d0 d5 ff ff 	movaps %xmm2,-0x2a30(%rbp)
  405fb7:	e8 a4 c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405fbc:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405fc3:	ff 
  405fc4:	48 8d bd 70 d4 ff ff 	lea    -0x2b90(%rbp),%rdi
  405fcb:	0f 29 95 70 d4 ff ff 	movaps %xmm2,-0x2b90(%rbp)
  405fd2:	e8 89 c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405fd7:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405fde:	ff 
  405fdf:	48 8d bd 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rdi
  405fe6:	0f 29 95 10 d3 ff ff 	movaps %xmm2,-0x2cf0(%rbp)
  405fed:	e8 6e c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  405ff2:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  405ff9:	ff 
  405ffa:	48 8d bd b0 d1 ff ff 	lea    -0x2e50(%rbp),%rdi
  406001:	0f 29 95 b0 d1 ff ff 	movaps %xmm2,-0x2e50(%rbp)
  406008:	e8 53 c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40600d:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  406014:	ff 
  406015:	48 8d bd 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rdi
  40601c:	0f 29 95 50 d0 ff ff 	movaps %xmm2,-0x2fb0(%rbp)
  406023:	e8 38 c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406028:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  40602f:	ff 
  406030:	48 8d bd f0 ce ff ff 	lea    -0x3110(%rbp),%rdi
  406037:	0f 29 95 f0 ce ff ff 	movaps %xmm2,-0x3110(%rbp)
  40603e:	e8 1d c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406043:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  40604a:	ff 
  40604b:	48 8d bd 90 cd ff ff 	lea    -0x3270(%rbp),%rdi
  406052:	0f 29 95 90 cd ff ff 	movaps %xmm2,-0x3270(%rbp)
  406059:	e8 02 c0 ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  40605e:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  406065:	ff 
  406066:	48 8d bd 30 cc ff ff 	lea    -0x33d0(%rbp),%rdi
  40606d:	0f 29 95 30 cc ff ff 	movaps %xmm2,-0x33d0(%rbp)
  406074:	e8 e7 bf ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406079:	66 0f 6f 95 60 c7 ff 	movdqa -0x38a0(%rbp),%xmm2
  406080:	ff 
  406081:	48 8d bd d0 ca ff ff 	lea    -0x3530(%rbp),%rdi
  406088:	0f 29 95 d0 ca ff ff 	movaps %xmm2,-0x3530(%rbp)
  40608f:	e8 cc bf ff ff       	call   402060 <_ZN2sf5ShapeD2Ev@plt>
  406094:	48 8d bd c0 fd ff ff 	lea    -0x240(%rbp),%rdi
  40609b:	e8 b0 c3 ff ff       	call   402450 <_ZN2sf12RenderWindowD1Ev@plt>
  4060a0:	31 c0                	xor    %eax,%eax
  4060a2:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
  4060a6:	5b                   	pop    %rbx
  4060a7:	41 5c                	pop    %r12
  4060a9:	41 5d                	pop    %r13
  4060ab:	41 5e                	pop    %r14
  4060ad:	41 5f                	pop    %r15
  4060af:	5d                   	pop    %rbp
  4060b0:	c3                   	ret    
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    {
      if (!__s)
	__out.setstate(ios_base::badbit);
      else
	__ostream_insert(__out, __s,
  4060b1:	ba 1e 00 00 00       	mov    $0x1e,%edx
  4060b6:	be 80 92 40 00       	mov    $0x409280,%esi
  4060bb:	bf 00 c3 40 00       	mov    $0x40c300,%edi
  4060c0:	e8 9b c1 ff ff       	call   402260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
   *  for more on this subject.
  */
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    endl(basic_ostream<_CharT, _Traits>& __os)
    { return flush(__os.put(__os.widen('\n'))); }
  4060c5:	48 8b 05 34 62 00 00 	mov    0x6234(%rip),%rax        # 40c300 <_ZSt4cout@@GLIBCXX_3.4>
  4060cc:	48 8b 40 e8          	mov    -0x18(%rax),%rax
  4060d0:	4c 8b a0 f0 c3 40 00 	mov    0x40c3f0(%rax),%r12

  template<typename _Facet>
    inline const _Facet&
    __check_facet(const _Facet* __f)
    {
      if (!__f)
  4060d7:	4d 85 e4             	test   %r12,%r12
  4060da:	0f 84 c4 11 00 00    	je     4072a4 <main+0x3f34>
       *  @return  The converted character.
      */
      char_type
      widen(char __c) const
      {
	if (_M_widen_ok)
  4060e0:	41 80 7c 24 38 00    	cmpb   $0x0,0x38(%r12)
  4060e6:	0f 84 8d 0d 00 00    	je     406e79 <main+0x3b09>
	  return _M_widen[static_cast<unsigned char>(__c)];
  4060ec:	41 0f be 74 24 43    	movsbl 0x43(%r12),%esi
  4060f2:	e9 9c 0d 00 00       	jmp    406e93 <main+0x3b23>
				else if (i >= BUTTON_AMOUNT && flag && temp_time >= sf::seconds(3.0f)){
  4060f7:	83 bd 3c c7 ff ff 05 	cmpl   $0x5,-0x38c4(%rbp)
  4060fe:	0f 8e ee ed ff ff    	jle    404ef2 <main+0x1b82>
  406104:	84 d2                	test   %dl,%dl
  406106:	0f 84 e6 ed ff ff    	je     404ef2 <main+0x1b82>
  40610c:	f3 0f 10 05 54 36 00 	movss  0x3654(%rip),%xmm0        # 409768 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0x168>
  406113:	00 
  406114:	e8 37 c0 ff ff       	call   402150 <_ZN2sf7secondsEf@plt>
  406119:	48 8b bd c8 c7 ff ff 	mov    -0x3838(%rbp),%rdi
  406120:	48 89 c6             	mov    %rax,%rsi
  406123:	e8 78 c1 ff ff       	call   4022a0 <_ZN2sfgeENS_4TimeES0_@plt>
  406128:	c7 85 3c c7 ff ff 06 	movl   $0x6,-0x38c4(%rbp)
  40612f:	00 00 00 
  406132:	84 c0                	test   %al,%al
  406134:	0f 84 b8 ed ff ff    	je     404ef2 <main+0x1b82>
	ioctl(fd, WR_GREEN_LEDS);
  40613a:	be 66 61 00 00       	mov    $0x6166,%esi
  40613f:	44 89 ff             	mov    %r15d,%edi
  406142:	31 c0                	xor    %eax,%eax
  406144:	c7 85 e0 c8 ff ff 00 	movl   $0x0,-0x3720(%rbp)
  40614b:	00 00 00 
  40614e:	e8 ad c1 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  406153:	4c 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%r14
  40615a:	ba 04 00 00 00       	mov    $0x4,%edx
  40615f:	44 89 ff             	mov    %r15d,%edi
  406162:	4c 89 f6             	mov    %r14,%rsi
  406165:	e8 76 bf ff ff       	call   4020e0 <write@plt>
					flag = 0;
  40616a:	c7 85 40 c7 ff ff 00 	movl   $0x0,-0x38c0(%rbp)
  406171:	00 00 00 
					i = 0;
  406174:	c7 85 3c c7 ff ff 00 	movl   $0x0,-0x38c4(%rbp)
  40617b:	00 00 00 
  40617e:	e9 6f ed ff ff       	jmp    404ef2 <main+0x1b82>
				unsigned int mask = switches ^ oldSwitches;
  406183:	31 c3                	xor    %eax,%ebx
  406185:	89 d8                	mov    %ebx,%eax
							if (temp == 1){
  406187:	a8 01                	test   $0x1,%al
  406189:	74 23                	je     4061ae <main+0x2e3e>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40618b:	f3 0f 7e 85 60 c9 ff 	movq   -0x36a0(%rbp),%xmm0
  406192:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406193:	83 b5 58 c9 ff ff 01 	xorl   $0x1,-0x36a8(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40619a:	f3 0f 7e 0d 3e 35 00 	movq   0x353e(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  4061a1:	00 
  4061a2:	66 0f ef c1          	pxor   %xmm1,%xmm0
  4061a6:	66 0f d6 85 60 c9 ff 	movq   %xmm0,-0x36a0(%rbp)
  4061ad:	ff 
							if (temp == 1){
  4061ae:	a8 02                	test   $0x2,%al
  4061b0:	74 2a                	je     4061dc <main+0x2e6c>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4061b2:	f3 0f 7e 85 5c c9 ff 	movq   -0x36a4(%rbp),%xmm0
  4061b9:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  4061ba:	83 b5 54 c9 ff ff 01 	xorl   $0x1,-0x36ac(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4061c1:	f3 0f 7e 0d 17 35 00 	movq   0x3517(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  4061c8:	00 
									currMatrix[i * 3 + (j + 1)] ^= 1;
  4061c9:	83 b5 64 c9 ff ff 01 	xorl   $0x1,-0x369c(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4061d0:	66 0f ef c1          	pxor   %xmm1,%xmm0
  4061d4:	66 0f d6 85 5c c9 ff 	movq   %xmm0,-0x36a4(%rbp)
  4061db:	ff 
							mask = mask >> 1;
  4061dc:	89 c1                	mov    %eax,%ecx
  4061de:	c1 e9 03             	shr    $0x3,%ecx
							if (temp == 1){
  4061e1:	a8 04                	test   $0x4,%al
  4061e3:	74 23                	je     406208 <main+0x2e98>
								currMatrix[i*3 + j] ^= 1;
  4061e5:	f3 0f 7e 85 5c c9 ff 	movq   -0x36a4(%rbp),%xmm0
  4061ec:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  4061ed:	83 b5 50 c9 ff ff 01 	xorl   $0x1,-0x36b0(%rbp)
								currMatrix[i*3 + j] ^= 1;
  4061f4:	f3 0f 7e 0d e4 34 00 	movq   0x34e4(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  4061fb:	00 
  4061fc:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406200:	66 0f d6 85 5c c9 ff 	movq   %xmm0,-0x36a4(%rbp)
  406207:	ff 
							if (temp == 1){
  406208:	f6 c1 01             	test   $0x1,%cl
  40620b:	74 2a                	je     406237 <main+0x2ec7>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40620d:	f3 0f 7e 85 54 c9 ff 	movq   -0x36ac(%rbp),%xmm0
  406214:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406215:	83 b5 4c c9 ff ff 01 	xorl   $0x1,-0x36b4(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40621c:	f3 0f 7e 0d bc 34 00 	movq   0x34bc(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406223:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406224:	83 b5 64 c9 ff ff 01 	xorl   $0x1,-0x369c(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40622b:	66 0f ef c1          	pxor   %xmm1,%xmm0
  40622f:	66 0f d6 85 54 c9 ff 	movq   %xmm0,-0x36ac(%rbp)
  406236:	ff 
							if (temp == 1){
  406237:	f6 c1 02             	test   $0x2,%cl
  40623a:	74 31                	je     40626d <main+0x2efd>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40623c:	f3 0f 7e 85 50 c9 ff 	movq   -0x36b0(%rbp),%xmm0
  406243:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406244:	83 b5 48 c9 ff ff 01 	xorl   $0x1,-0x36b8(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40624b:	f3 0f 7e 0d 8d 34 00 	movq   0x348d(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406252:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406253:	83 b5 60 c9 ff ff 01 	xorl   $0x1,-0x36a0(%rbp)
									currMatrix[i * 3 + (j + 1)] ^= 1;
  40625a:	83 b5 58 c9 ff ff 01 	xorl   $0x1,-0x36a8(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406261:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406265:	66 0f d6 85 50 c9 ff 	movq   %xmm0,-0x36b0(%rbp)
  40626c:	ff 
							mask = mask >> 1;
  40626d:	89 c2                	mov    %eax,%edx
  40626f:	c1 ea 06             	shr    $0x6,%edx
							if (temp == 1){
  406272:	80 e1 04             	and    $0x4,%cl
  406275:	74 2a                	je     4062a1 <main+0x2f31>
								currMatrix[i*3 + j] ^= 1;
  406277:	f3 0f 7e 85 50 c9 ff 	movq   -0x36b0(%rbp),%xmm0
  40627e:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  40627f:	83 b5 44 c9 ff ff 01 	xorl   $0x1,-0x36bc(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406286:	f3 0f 7e 0d 52 34 00 	movq   0x3452(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  40628d:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  40628e:	83 b5 5c c9 ff ff 01 	xorl   $0x1,-0x36a4(%rbp)
								currMatrix[i*3 + j] ^= 1;
  406295:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406299:	66 0f d6 85 50 c9 ff 	movq   %xmm0,-0x36b0(%rbp)
  4062a0:	ff 
							if (temp == 1){
  4062a1:	f6 c2 01             	test   $0x1,%dl
  4062a4:	74 2a                	je     4062d0 <main+0x2f60>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4062a6:	f3 0f 7e 85 48 c9 ff 	movq   -0x36b8(%rbp),%xmm0
  4062ad:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  4062ae:	83 b5 40 c9 ff ff 01 	xorl   $0x1,-0x36c0(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4062b5:	f3 0f 7e 0d 23 34 00 	movq   0x3423(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  4062bc:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  4062bd:	83 b5 58 c9 ff ff 01 	xorl   $0x1,-0x36a8(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4062c4:	66 0f ef c1          	pxor   %xmm1,%xmm0
  4062c8:	66 0f d6 85 48 c9 ff 	movq   %xmm0,-0x36b8(%rbp)
  4062cf:	ff 
							if (temp == 1){
  4062d0:	f6 c2 02             	test   $0x2,%dl
  4062d3:	74 31                	je     406306 <main+0x2f96>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4062d5:	f3 0f 7e 85 44 c9 ff 	movq   -0x36bc(%rbp),%xmm0
  4062dc:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  4062dd:	83 b5 3c c9 ff ff 01 	xorl   $0x1,-0x36c4(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4062e4:	f3 0f 7e 0d f4 33 00 	movq   0x33f4(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  4062eb:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  4062ec:	83 b5 54 c9 ff ff 01 	xorl   $0x1,-0x36ac(%rbp)
									currMatrix[i * 3 + (j + 1)] ^= 1;
  4062f3:	83 b5 4c c9 ff ff 01 	xorl   $0x1,-0x36b4(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4062fa:	66 0f ef c1          	pxor   %xmm1,%xmm0
  4062fe:	66 0f d6 85 44 c9 ff 	movq   %xmm0,-0x36bc(%rbp)
  406305:	ff 
							mask = mask >> 1;
  406306:	89 c1                	mov    %eax,%ecx
  406308:	c1 e9 09             	shr    $0x9,%ecx
							if (temp == 1){
  40630b:	80 e2 04             	and    $0x4,%dl
  40630e:	74 2a                	je     40633a <main+0x2fca>
								currMatrix[i*3 + j] ^= 1;
  406310:	f3 0f 7e 85 44 c9 ff 	movq   -0x36bc(%rbp),%xmm0
  406317:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406318:	83 b5 38 c9 ff ff 01 	xorl   $0x1,-0x36c8(%rbp)
								currMatrix[i*3 + j] ^= 1;
  40631f:	f3 0f 7e 0d b9 33 00 	movq   0x33b9(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406326:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406327:	83 b5 50 c9 ff ff 01 	xorl   $0x1,-0x36b0(%rbp)
								currMatrix[i*3 + j] ^= 1;
  40632e:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406332:	66 0f d6 85 44 c9 ff 	movq   %xmm0,-0x36bc(%rbp)
  406339:	ff 
							if (temp == 1){
  40633a:	f6 c1 01             	test   $0x1,%cl
  40633d:	74 2a                	je     406369 <main+0x2ff9>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40633f:	f3 0f 7e 85 3c c9 ff 	movq   -0x36c4(%rbp),%xmm0
  406346:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406347:	83 b5 34 c9 ff ff 01 	xorl   $0x1,-0x36cc(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40634e:	f3 0f 7e 0d 8a 33 00 	movq   0x338a(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406355:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406356:	83 b5 4c c9 ff ff 01 	xorl   $0x1,-0x36b4(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40635d:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406361:	66 0f d6 85 3c c9 ff 	movq   %xmm0,-0x36c4(%rbp)
  406368:	ff 
							if (temp == 1){
  406369:	f6 c1 02             	test   $0x2,%cl
  40636c:	74 31                	je     40639f <main+0x302f>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40636e:	f3 0f 7e 85 38 c9 ff 	movq   -0x36c8(%rbp),%xmm0
  406375:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406376:	83 b5 30 c9 ff ff 01 	xorl   $0x1,-0x36d0(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40637d:	f3 0f 7e 0d 5b 33 00 	movq   0x335b(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406384:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406385:	83 b5 48 c9 ff ff 01 	xorl   $0x1,-0x36b8(%rbp)
									currMatrix[i * 3 + (j + 1)] ^= 1;
  40638c:	83 b5 40 c9 ff ff 01 	xorl   $0x1,-0x36c0(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406393:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406397:	66 0f d6 85 38 c9 ff 	movq   %xmm0,-0x36c8(%rbp)
  40639e:	ff 
							mask = mask >> 1;
  40639f:	89 c2                	mov    %eax,%edx
  4063a1:	c1 ea 0c             	shr    $0xc,%edx
							if (temp == 1){
  4063a4:	80 e1 04             	and    $0x4,%cl
  4063a7:	74 2a                	je     4063d3 <main+0x3063>
								currMatrix[i*3 + j] ^= 1;
  4063a9:	f3 0f 7e 85 38 c9 ff 	movq   -0x36c8(%rbp),%xmm0
  4063b0:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  4063b1:	83 b5 2c c9 ff ff 01 	xorl   $0x1,-0x36d4(%rbp)
								currMatrix[i*3 + j] ^= 1;
  4063b8:	f3 0f 7e 0d 20 33 00 	movq   0x3320(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  4063bf:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  4063c0:	83 b5 44 c9 ff ff 01 	xorl   $0x1,-0x36bc(%rbp)
								currMatrix[i*3 + j] ^= 1;
  4063c7:	66 0f ef c1          	pxor   %xmm1,%xmm0
  4063cb:	66 0f d6 85 38 c9 ff 	movq   %xmm0,-0x36c8(%rbp)
  4063d2:	ff 
							if (temp == 1){
  4063d3:	f6 c2 01             	test   $0x1,%dl
  4063d6:	74 2a                	je     406402 <main+0x3092>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4063d8:	f3 0f 7e 85 30 c9 ff 	movq   -0x36d0(%rbp),%xmm0
  4063df:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  4063e0:	83 b5 28 c9 ff ff 01 	xorl   $0x1,-0x36d8(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4063e7:	f3 0f 7e 0d f1 32 00 	movq   0x32f1(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  4063ee:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  4063ef:	83 b5 40 c9 ff ff 01 	xorl   $0x1,-0x36c0(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4063f6:	66 0f ef c1          	pxor   %xmm1,%xmm0
  4063fa:	66 0f d6 85 30 c9 ff 	movq   %xmm0,-0x36d0(%rbp)
  406401:	ff 
							if (temp == 1){
  406402:	f6 c2 02             	test   $0x2,%dl
  406405:	74 31                	je     406438 <main+0x30c8>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406407:	f3 0f 7e 85 2c c9 ff 	movq   -0x36d4(%rbp),%xmm0
  40640e:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  40640f:	83 b5 24 c9 ff ff 01 	xorl   $0x1,-0x36dc(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406416:	f3 0f 7e 0d c2 32 00 	movq   0x32c2(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  40641d:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  40641e:	83 b5 3c c9 ff ff 01 	xorl   $0x1,-0x36c4(%rbp)
									currMatrix[i * 3 + (j + 1)] ^= 1;
  406425:	83 b5 34 c9 ff ff 01 	xorl   $0x1,-0x36cc(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40642c:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406430:	66 0f d6 85 2c c9 ff 	movq   %xmm0,-0x36d4(%rbp)
  406437:	ff 
							mask = mask >> 1;
  406438:	c1 e8 0f             	shr    $0xf,%eax
							if (temp == 1){
  40643b:	80 e2 04             	and    $0x4,%dl
  40643e:	74 2a                	je     40646a <main+0x30fa>
								currMatrix[i*3 + j] ^= 1;
  406440:	f3 0f 7e 85 2c c9 ff 	movq   -0x36d4(%rbp),%xmm0
  406447:	ff 
									currMatrix[(i - 1) * 3 + j] ^= 1;
  406448:	83 b5 20 c9 ff ff 01 	xorl   $0x1,-0x36e0(%rbp)
								currMatrix[i*3 + j] ^= 1;
  40644f:	f3 0f 7e 0d 89 32 00 	movq   0x3289(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406456:	00 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406457:	83 b5 38 c9 ff ff 01 	xorl   $0x1,-0x36c8(%rbp)
								currMatrix[i*3 + j] ^= 1;
  40645e:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406462:	66 0f d6 85 2c c9 ff 	movq   %xmm0,-0x36d4(%rbp)
  406469:	ff 
							if (temp == 1){
  40646a:	a8 01                	test   $0x1,%al
  40646c:	74 23                	je     406491 <main+0x3121>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40646e:	f3 0f 7e 85 24 c9 ff 	movq   -0x36dc(%rbp),%xmm0
  406475:	ff 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  406476:	83 b5 34 c9 ff ff 01 	xorl   $0x1,-0x36cc(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  40647d:	f3 0f 7e 0d 5b 32 00 	movq   0x325b(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  406484:	00 
  406485:	66 0f ef c1          	pxor   %xmm1,%xmm0
  406489:	66 0f d6 85 24 c9 ff 	movq   %xmm0,-0x36dc(%rbp)
  406490:	ff 
							if (temp == 1){
  406491:	a8 02                	test   $0x2,%al
  406493:	74 2a                	je     4064bf <main+0x314f>
									currMatrix[i * 3 + (j - 1)] ^= 1;
  406495:	f3 0f 7e 85 20 c9 ff 	movq   -0x36e0(%rbp),%xmm0
  40649c:	ff 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  40649d:	83 b5 30 c9 ff ff 01 	xorl   $0x1,-0x36d0(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4064a4:	f3 0f 7e 0d 34 32 00 	movq   0x3234(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  4064ab:	00 
									currMatrix[i * 3 + (j + 1)] ^= 1;
  4064ac:	83 b5 28 c9 ff ff 01 	xorl   $0x1,-0x36d8(%rbp)
									currMatrix[i * 3 + (j - 1)] ^= 1;
  4064b3:	66 0f ef c1          	pxor   %xmm1,%xmm0
  4064b7:	66 0f d6 85 20 c9 ff 	movq   %xmm0,-0x36e0(%rbp)
  4064be:	ff 
							if (temp == 1){
  4064bf:	a8 04                	test   $0x4,%al
  4064c1:	74 23                	je     4064e6 <main+0x3176>
								currMatrix[i*3 + j] ^= 1;
  4064c3:	f3 0f 7e 85 20 c9 ff 	movq   -0x36e0(%rbp),%xmm0
  4064ca:	ff 
									currMatrix[(i + 1) * 3 + j] ^= 1;
  4064cb:	83 b5 2c c9 ff ff 01 	xorl   $0x1,-0x36d4(%rbp)
								currMatrix[i*3 + j] ^= 1;
  4064d2:	f3 0f 7e 0d 06 32 00 	movq   0x3206(%rip),%xmm1        # 4096e0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xe0>
  4064d9:	00 
  4064da:	66 0f ef c1          	pxor   %xmm1,%xmm0
  4064de:	66 0f d6 85 20 c9 ff 	movq   %xmm0,-0x36e0(%rbp)
  4064e5:	ff 
							redLeds += currMatrix[i*3 + j] * k;
  4064e6:	8b 85 5c c9 ff ff    	mov    -0x36a4(%rbp),%eax
  4064ec:	8b 95 60 c9 ff ff    	mov    -0x36a0(%rbp),%edx
	ioctl(fd, WR_RED_LEDS);
  4064f2:	be 65 61 00 00       	mov    $0x6165,%esi
  4064f7:	44 89 ff             	mov    %r15d,%edi
							redLeds += currMatrix[i*3 + j] * k;
  4064fa:	c1 e0 02             	shl    $0x2,%eax
  4064fd:	8d 04 50             	lea    (%rax,%rdx,2),%eax
  406500:	8b 95 58 c9 ff ff    	mov    -0x36a8(%rbp),%edx
  406506:	03 85 64 c9 ff ff    	add    -0x369c(%rbp),%eax
  40650c:	8d 14 d0             	lea    (%rax,%rdx,8),%edx
  40650f:	8b 85 54 c9 ff ff    	mov    -0x36ac(%rbp),%eax
  406515:	c1 e0 04             	shl    $0x4,%eax
  406518:	01 d0                	add    %edx,%eax
  40651a:	8b 95 50 c9 ff ff    	mov    -0x36b0(%rbp),%edx
  406520:	c1 e2 05             	shl    $0x5,%edx
  406523:	01 c2                	add    %eax,%edx
  406525:	8b 85 4c c9 ff ff    	mov    -0x36b4(%rbp),%eax
  40652b:	c1 e0 06             	shl    $0x6,%eax
  40652e:	01 d0                	add    %edx,%eax
  406530:	8b 95 48 c9 ff ff    	mov    -0x36b8(%rbp),%edx
  406536:	c1 e2 07             	shl    $0x7,%edx
  406539:	01 c2                	add    %eax,%edx
  40653b:	8b 85 44 c9 ff ff    	mov    -0x36bc(%rbp),%eax
  406541:	c1 e0 08             	shl    $0x8,%eax
  406544:	01 d0                	add    %edx,%eax
  406546:	8b 95 40 c9 ff ff    	mov    -0x36c0(%rbp),%edx
  40654c:	c1 e2 09             	shl    $0x9,%edx
  40654f:	01 c2                	add    %eax,%edx
  406551:	8b 85 3c c9 ff ff    	mov    -0x36c4(%rbp),%eax
  406557:	c1 e0 0a             	shl    $0xa,%eax
  40655a:	01 d0                	add    %edx,%eax
  40655c:	8b 95 38 c9 ff ff    	mov    -0x36c8(%rbp),%edx
  406562:	c1 e2 0b             	shl    $0xb,%edx
  406565:	01 c2                	add    %eax,%edx
  406567:	8b 85 34 c9 ff ff    	mov    -0x36cc(%rbp),%eax
  40656d:	c1 e0 0c             	shl    $0xc,%eax
  406570:	01 d0                	add    %edx,%eax
  406572:	8b 95 30 c9 ff ff    	mov    -0x36d0(%rbp),%edx
  406578:	c1 e2 0d             	shl    $0xd,%edx
  40657b:	01 c2                	add    %eax,%edx
  40657d:	8b 85 2c c9 ff ff    	mov    -0x36d4(%rbp),%eax
  406583:	c1 e0 0e             	shl    $0xe,%eax
  406586:	01 d0                	add    %edx,%eax
  406588:	8b 95 28 c9 ff ff    	mov    -0x36d8(%rbp),%edx
  40658e:	c1 e2 0f             	shl    $0xf,%edx
  406591:	01 c2                	add    %eax,%edx
  406593:	8b 85 24 c9 ff ff    	mov    -0x36dc(%rbp),%eax
  406599:	c1 e0 10             	shl    $0x10,%eax
  40659c:	01 d0                	add    %edx,%eax
  40659e:	8b 95 20 c9 ff ff    	mov    -0x36e0(%rbp),%edx
  4065a4:	c1 e2 11             	shl    $0x11,%edx
  4065a7:	01 d0                	add    %edx,%eax
  4065a9:	89 85 44 c7 ff ff    	mov    %eax,-0x38bc(%rbp)
					writeRedLed(fd, redLeds);
  4065af:	89 85 ac c7 ff ff    	mov    %eax,-0x3854(%rbp)
	ioctl(fd, WR_RED_LEDS);
  4065b5:	31 c0                	xor    %eax,%eax
  4065b7:	e8 44 bd ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  4065bc:	ba 04 00 00 00       	mov    $0x4,%edx
  4065c1:	48 8d b5 ac c7 ff ff 	lea    -0x3854(%rbp),%rsi
  4065c8:	44 89 ff             	mov    %r15d,%edi
  4065cb:	e8 10 bb ff ff       	call   4020e0 <write@plt>
}
  4065d0:	e9 69 ec ff ff       	jmp    40523e <main+0x1ece>
						text.setString(text.getString() + typedtext[0]);
  4065d5:	31 f6                	xor    %esi,%esi
  4065d7:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  4065de:	e8 9d bc ff ff       	call   402280 <_ZN2sf6StringixEm@plt>
  4065e3:	8b 30                	mov    (%rax),%esi
  4065e5:	48 8d bd e0 c8 ff ff 	lea    -0x3720(%rbp),%rdi
  4065ec:	e8 cf ba ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  4065f1:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4065f8:	e8 c3 bd ff ff       	call   4023c0 <_ZNK2sf4Text9getStringEv@plt>
  4065fd:	48 89 c6             	mov    %rax,%rsi
  406600:	48 8d 95 e0 c8 ff ff 	lea    -0x3720(%rbp),%rdx
  406607:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40660e:	e8 bd ba ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  406613:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40661a:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  406621:	e8 4a be ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  406626:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  40662d:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  406634:	48 39 df             	cmp    %rbx,%rdi
  406637:	74 14                	je     40664d <main+0x32dd>
  406639:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  406640:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406647:	00 
  406648:	e8 d3 bb ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40664d:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  406654:	48 8d 85 f0 c8 ff ff 	lea    -0x3710(%rbp),%rax
  40665b:	48 89 85 58 c7 ff ff 	mov    %rax,-0x38a8(%rbp)
  406662:	48 39 c7             	cmp    %rax,%rdi
  406665:	74 14                	je     40667b <main+0x330b>
  406667:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  40666e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406675:	00 
  406676:	e8 a5 bb ff ff       	call   402220 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  40667b:	48 8d 85 e8 c7 ff ff 	lea    -0x3818(%rbp),%rax
  406682:	4c 8d a5 e0 c7 ff ff 	lea    -0x3820(%rbp),%r12
  406689:	48 89 c7             	mov    %rax,%rdi
  40668c:	48 89 85 60 c7 ff ff 	mov    %rax,-0x38a0(%rbp)
  406693:	4c 8d ad c0 c8 ff ff 	lea    -0x3740(%rbp),%r13
  40669a:	e8 31 be ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  40669f:	4c 89 e7             	mov    %r12,%rdi
  4066a2:	e8 29 be ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  4066a7:	4c 89 e2             	mov    %r12,%rdx
  4066aa:	48 8d b5 40 c8 ff ff 	lea    -0x37c0(%rbp),%rsi
  4066b1:	4c 89 ef             	mov    %r13,%rdi
  4066b4:	e8 a7 bd ff ff       	call   402460 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  4066b9:	48 8d 85 e0 c8 ff ff 	lea    -0x3720(%rbp),%rax
  4066c0:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
  4066c4:	ba 01 00 00 00       	mov    $0x1,%edx
  4066c9:	4c 89 ee             	mov    %r13,%rsi
  4066cc:	48 89 c7             	mov    %rax,%rdi
  4066cf:	e8 5c bb ff ff       	call   402230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  4066d4:	48 8b 95 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdx
  4066db:	48 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%rsi
  4066e2:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4066e9:	e8 b2 b9 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  4066ee:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4066f5:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  4066fc:	e8 2f bd ff ff       	call   402430 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  406701:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  406708:	48 39 df             	cmp    %rbx,%rdi
  40670b:	74 14                	je     406721 <main+0x33b1>
  40670d:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  406714:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40671b:	00 
  40671c:	e8 ff ba ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406721:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  406728:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  40672f:	74 10                	je     406741 <main+0x33d1>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406731:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  406738:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40673c:	e8 df ba ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406741:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  406748:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  40674f:	48 39 c7             	cmp    %rax,%rdi
  406752:	74 10                	je     406764 <main+0x33f4>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406754:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  40675b:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40675f:	e8 bc ba ff ff       	call   402220 <_ZdlPvm@plt>
  406764:	4c 89 e7             	mov    %r12,%rdi
  406767:	e8 a4 bb ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  40676c:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  406773:	e8 98 bb ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  406778:	e9 49 ea ff ff       	jmp    4051c6 <main+0x1e56>
						text.setString(text.getString() + typedtext[0]);
  40677d:	31 f6                	xor    %esi,%esi
  40677f:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  406786:	e8 f5 ba ff ff       	call   402280 <_ZN2sf6StringixEm@plt>
  40678b:	8b 30                	mov    (%rax),%esi
  40678d:	48 8d bd e0 c8 ff ff 	lea    -0x3720(%rbp),%rdi
  406794:	e8 27 b9 ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  406799:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4067a0:	e8 1b bc ff ff       	call   4023c0 <_ZNK2sf4Text9getStringEv@plt>
  4067a5:	48 89 c6             	mov    %rax,%rsi
  4067a8:	48 8d 95 e0 c8 ff ff 	lea    -0x3720(%rbp),%rdx
  4067af:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4067b6:	e8 15 b9 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  4067bb:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4067c2:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4067c9:	e8 a2 bc ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  4067ce:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4067d5:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  4067dc:	48 39 df             	cmp    %rbx,%rdi
  4067df:	74 14                	je     4067f5 <main+0x3485>
  4067e1:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4067e8:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4067ef:	00 
  4067f0:	e8 2b ba ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4067f5:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  4067fc:	48 8d 85 f0 c8 ff ff 	lea    -0x3710(%rbp),%rax
  406803:	48 89 85 58 c7 ff ff 	mov    %rax,-0x38a8(%rbp)
  40680a:	48 39 c7             	cmp    %rax,%rdi
  40680d:	74 14                	je     406823 <main+0x34b3>
  40680f:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  406816:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  40681d:	00 
  40681e:	e8 fd b9 ff ff       	call   402220 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  406823:	48 8d 85 e8 c7 ff ff 	lea    -0x3818(%rbp),%rax
  40682a:	4c 8d a5 e0 c7 ff ff 	lea    -0x3820(%rbp),%r12
  406831:	48 89 c7             	mov    %rax,%rdi
  406834:	48 89 85 60 c7 ff ff 	mov    %rax,-0x38a0(%rbp)
  40683b:	4c 8d ad c0 c8 ff ff 	lea    -0x3740(%rbp),%r13
  406842:	e8 89 bc ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  406847:	4c 89 e7             	mov    %r12,%rdi
  40684a:	e8 81 bc ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  40684f:	4c 89 e2             	mov    %r12,%rdx
  406852:	48 8d b5 40 c8 ff ff 	lea    -0x37c0(%rbp),%rsi
  406859:	4c 89 ef             	mov    %r13,%rdi
  40685c:	e8 ff bb ff ff       	call   402460 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  406861:	48 8d 85 e0 c8 ff ff 	lea    -0x3720(%rbp),%rax
  406868:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
  40686c:	ba 01 00 00 00       	mov    $0x1,%edx
  406871:	4c 89 ee             	mov    %r13,%rsi
  406874:	48 89 c7             	mov    %rax,%rdi
  406877:	e8 b4 b9 ff ff       	call   402230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  40687c:	48 8b 95 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdx
  406883:	48 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%rsi
  40688a:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  406891:	e8 0a b8 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  406896:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40689d:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  4068a4:	e8 87 bb ff ff       	call   402430 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  4068a9:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4068b0:	48 39 df             	cmp    %rbx,%rdi
  4068b3:	74 14                	je     4068c9 <main+0x3559>
  4068b5:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4068bc:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4068c3:	00 
  4068c4:	e8 57 b9 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4068c9:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  4068d0:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  4068d7:	74 10                	je     4068e9 <main+0x3579>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4068d9:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  4068e0:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4068e4:	e8 37 b9 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4068e9:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  4068f0:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  4068f7:	48 39 c7             	cmp    %rax,%rdi
  4068fa:	74 10                	je     40690c <main+0x359c>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4068fc:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  406903:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406907:	e8 14 b9 ff ff       	call   402220 <_ZdlPvm@plt>
  40690c:	4c 89 e7             	mov    %r12,%rdi
  40690f:	e8 fc b9 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  406914:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  40691b:	e8 f0 b9 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  406920:	e9 11 e8 ff ff       	jmp    405136 <main+0x1dc6>
						text.setString(text.getString() + typedtext[0]);
  406925:	31 f6                	xor    %esi,%esi
  406927:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  40692e:	e8 4d b9 ff ff       	call   402280 <_ZN2sf6StringixEm@plt>
  406933:	8b 30                	mov    (%rax),%esi
  406935:	48 8d bd e0 c8 ff ff 	lea    -0x3720(%rbp),%rdi
  40693c:	e8 7f b7 ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  406941:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  406948:	e8 73 ba ff ff       	call   4023c0 <_ZNK2sf4Text9getStringEv@plt>
  40694d:	48 89 c6             	mov    %rax,%rsi
  406950:	48 8d 95 e0 c8 ff ff 	lea    -0x3720(%rbp),%rdx
  406957:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  40695e:	e8 6d b7 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  406963:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40696a:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  406971:	e8 fa ba ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  406976:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  40697d:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  406984:	48 39 df             	cmp    %rbx,%rdi
  406987:	74 14                	je     40699d <main+0x362d>
  406989:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  406990:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406997:	00 
  406998:	e8 83 b8 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  40699d:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  4069a4:	48 8d 85 f0 c8 ff ff 	lea    -0x3710(%rbp),%rax
  4069ab:	48 89 85 58 c7 ff ff 	mov    %rax,-0x38a8(%rbp)
  4069b2:	48 39 c7             	cmp    %rax,%rdi
  4069b5:	74 14                	je     4069cb <main+0x365b>
  4069b7:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  4069be:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4069c5:	00 
  4069c6:	e8 55 b8 ff ff       	call   402220 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  4069cb:	48 8d 85 e8 c7 ff ff 	lea    -0x3818(%rbp),%rax
  4069d2:	4c 8d a5 e0 c7 ff ff 	lea    -0x3820(%rbp),%r12
  4069d9:	48 89 c7             	mov    %rax,%rdi
  4069dc:	48 89 85 60 c7 ff ff 	mov    %rax,-0x38a0(%rbp)
  4069e3:	4c 8d ad c0 c8 ff ff 	lea    -0x3740(%rbp),%r13
  4069ea:	e8 e1 ba ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  4069ef:	4c 89 e7             	mov    %r12,%rdi
  4069f2:	e8 d9 ba ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  4069f7:	4c 89 e2             	mov    %r12,%rdx
  4069fa:	48 8d b5 40 c8 ff ff 	lea    -0x37c0(%rbp),%rsi
  406a01:	4c 89 ef             	mov    %r13,%rdi
  406a04:	e8 57 ba ff ff       	call   402460 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  406a09:	48 8d 85 e0 c8 ff ff 	lea    -0x3720(%rbp),%rax
  406a10:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
  406a14:	ba 01 00 00 00       	mov    $0x1,%edx
  406a19:	4c 89 ee             	mov    %r13,%rsi
  406a1c:	48 89 c7             	mov    %rax,%rdi
  406a1f:	e8 0c b8 ff ff       	call   402230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  406a24:	48 8b 95 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdx
  406a2b:	48 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%rsi
  406a32:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  406a39:	e8 62 b6 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  406a3e:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  406a45:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  406a4c:	e8 df b9 ff ff       	call   402430 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  406a51:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  406a58:	48 39 df             	cmp    %rbx,%rdi
  406a5b:	74 14                	je     406a71 <main+0x3701>
  406a5d:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  406a64:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406a6b:	00 
  406a6c:	e8 af b7 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406a71:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  406a78:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  406a7f:	74 10                	je     406a91 <main+0x3721>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406a81:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  406a88:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406a8c:	e8 8f b7 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406a91:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  406a98:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  406a9f:	48 39 c7             	cmp    %rax,%rdi
  406aa2:	74 10                	je     406ab4 <main+0x3744>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406aa4:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  406aab:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406aaf:	e8 6c b7 ff ff       	call   402220 <_ZdlPvm@plt>
  406ab4:	4c 89 e7             	mov    %r12,%rdi
  406ab7:	e8 54 b8 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  406abc:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  406ac3:	e8 48 b8 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  406ac8:	e9 31 e3 ff ff       	jmp    404dfe <main+0x1a8e>
						text.setString(text.getString() + typedtext[0]);
  406acd:	31 f6                	xor    %esi,%esi
  406acf:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  406ad6:	e8 a5 b7 ff ff       	call   402280 <_ZN2sf6StringixEm@plt>
  406adb:	8b 30                	mov    (%rax),%esi
  406add:	48 8d bd e0 c8 ff ff 	lea    -0x3720(%rbp),%rdi
  406ae4:	e8 d7 b5 ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  406ae9:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  406af0:	e8 cb b8 ff ff       	call   4023c0 <_ZNK2sf4Text9getStringEv@plt>
  406af5:	48 89 c6             	mov    %rax,%rsi
  406af8:	48 8d 95 e0 c8 ff ff 	lea    -0x3720(%rbp),%rdx
  406aff:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  406b06:	e8 c5 b5 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  406b0b:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  406b12:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  406b19:	e8 52 b9 ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  406b1e:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  406b25:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  406b2c:	48 39 df             	cmp    %rbx,%rdi
  406b2f:	74 14                	je     406b45 <main+0x37d5>
  406b31:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  406b38:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406b3f:	00 
  406b40:	e8 db b6 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406b45:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  406b4c:	48 8d 85 f0 c8 ff ff 	lea    -0x3710(%rbp),%rax
  406b53:	48 89 85 58 c7 ff ff 	mov    %rax,-0x38a8(%rbp)
  406b5a:	48 39 c7             	cmp    %rax,%rdi
  406b5d:	74 14                	je     406b73 <main+0x3803>
  406b5f:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  406b66:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406b6d:	00 
  406b6e:	e8 ad b6 ff ff       	call   402220 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  406b73:	48 8d 85 e8 c7 ff ff 	lea    -0x3818(%rbp),%rax
  406b7a:	4c 8d a5 e0 c7 ff ff 	lea    -0x3820(%rbp),%r12
  406b81:	48 89 c7             	mov    %rax,%rdi
  406b84:	48 89 85 60 c7 ff ff 	mov    %rax,-0x38a0(%rbp)
  406b8b:	4c 8d ad c0 c8 ff ff 	lea    -0x3740(%rbp),%r13
  406b92:	e8 39 b9 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  406b97:	4c 89 e7             	mov    %r12,%rdi
  406b9a:	e8 31 b9 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  406b9f:	4c 89 e2             	mov    %r12,%rdx
  406ba2:	48 8d b5 40 c8 ff ff 	lea    -0x37c0(%rbp),%rsi
  406ba9:	4c 89 ef             	mov    %r13,%rdi
  406bac:	e8 af b8 ff ff       	call   402460 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  406bb1:	48 8d 85 e0 c8 ff ff 	lea    -0x3720(%rbp),%rax
  406bb8:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
  406bbc:	ba 01 00 00 00       	mov    $0x1,%edx
  406bc1:	4c 89 ee             	mov    %r13,%rsi
  406bc4:	48 89 c7             	mov    %rax,%rdi
  406bc7:	e8 64 b6 ff ff       	call   402230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  406bcc:	48 8b 95 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdx
  406bd3:	48 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%rsi
  406bda:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  406be1:	e8 ba b4 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  406be6:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  406bed:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  406bf4:	e8 37 b8 ff ff       	call   402430 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  406bf9:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  406c00:	48 39 df             	cmp    %rbx,%rdi
  406c03:	74 14                	je     406c19 <main+0x38a9>
  406c05:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  406c0c:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406c13:	00 
  406c14:	e8 07 b6 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406c19:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  406c20:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  406c27:	74 10                	je     406c39 <main+0x38c9>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406c29:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  406c30:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406c34:	e8 e7 b5 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406c39:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  406c40:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  406c47:	48 39 c7             	cmp    %rax,%rdi
  406c4a:	74 10                	je     406c5c <main+0x38ec>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406c4c:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  406c53:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406c57:	e8 c4 b5 ff ff       	call   402220 <_ZdlPvm@plt>
  406c5c:	4c 89 e7             	mov    %r12,%rdi
  406c5f:	e8 ac b6 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  406c64:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  406c6b:	e8 a0 b6 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  406c70:	e9 61 df ff ff       	jmp    404bd6 <main+0x1866>
						text.setString(text.getString() + typedtext[0]);
  406c75:	31 f6                	xor    %esi,%esi
  406c77:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  406c7e:	e8 fd b5 ff ff       	call   402280 <_ZN2sf6StringixEm@plt>
  406c83:	8b 30                	mov    (%rax),%esi
  406c85:	48 8d bd e0 c8 ff ff 	lea    -0x3720(%rbp),%rdi
  406c8c:	e8 2f b4 ff ff       	call   4020c0 <_ZN2sf6StringC1Ej@plt>
  406c91:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  406c98:	e8 23 b7 ff ff       	call   4023c0 <_ZNK2sf4Text9getStringEv@plt>
  406c9d:	48 89 c6             	mov    %rax,%rsi
  406ca0:	48 8d 95 e0 c8 ff ff 	lea    -0x3720(%rbp),%rdx
  406ca7:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  406cae:	e8 1d b4 ff ff       	call   4020d0 <_ZN2sfplERKNS_6StringES2_@plt>
  406cb3:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  406cba:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  406cc1:	e8 aa b7 ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  406cc6:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  406ccd:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  406cd4:	48 39 df             	cmp    %rbx,%rdi
  406cd7:	74 14                	je     406ced <main+0x397d>
  406cd9:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  406ce0:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406ce7:	00 
  406ce8:	e8 33 b5 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406ced:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  406cf4:	48 8d 85 f0 c8 ff ff 	lea    -0x3710(%rbp),%rax
  406cfb:	48 89 85 58 c7 ff ff 	mov    %rax,-0x38a8(%rbp)
  406d02:	48 39 c7             	cmp    %rax,%rdi
  406d05:	74 14                	je     406d1b <main+0x39ab>
  406d07:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  406d0e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406d15:	00 
  406d16:	e8 05 b5 ff ff       	call   402220 <_ZdlPvm@plt>
						typedtext = typedtext.toAnsiString().substr(1);
  406d1b:	48 8d 85 e8 c7 ff ff 	lea    -0x3818(%rbp),%rax
  406d22:	4c 8d a5 e0 c7 ff ff 	lea    -0x3820(%rbp),%r12
  406d29:	48 89 c7             	mov    %rax,%rdi
  406d2c:	48 89 85 60 c7 ff ff 	mov    %rax,-0x38a0(%rbp)
  406d33:	4c 8d ad c0 c8 ff ff 	lea    -0x3740(%rbp),%r13
  406d3a:	e8 91 b7 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  406d3f:	4c 89 e7             	mov    %r12,%rdi
  406d42:	e8 89 b7 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  406d47:	4c 89 e2             	mov    %r12,%rdx
  406d4a:	48 8d b5 40 c8 ff ff 	lea    -0x37c0(%rbp),%rsi
  406d51:	4c 89 ef             	mov    %r13,%rdi
  406d54:	e8 07 b7 ff ff       	call   402460 <_ZNK2sf6String12toAnsiStringB5cxx11ERKSt6locale@plt>
  406d59:	48 8d 85 e0 c8 ff ff 	lea    -0x3720(%rbp),%rax
  406d60:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
  406d64:	ba 01 00 00 00       	mov    $0x1,%edx
  406d69:	4c 89 ee             	mov    %r13,%rsi
  406d6c:	48 89 c7             	mov    %rax,%rdi
  406d6f:	e8 bc b4 ff ff       	call   402230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
  406d74:	48 8b 95 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdx
  406d7b:	48 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%rsi
  406d82:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  406d89:	e8 12 b3 ff ff       	call   4020a0 <_ZN2sf6StringC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale@plt>
  406d8e:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  406d95:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  406d9c:	e8 8f b6 ff ff       	call   402430 <_ZN2sf6StringaSERKS0_@plt>
      { return _M_dataplus._M_p; }
  406da1:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  406da8:	48 39 df             	cmp    %rbx,%rdi
  406dab:	74 14                	je     406dc1 <main+0x3a51>
  406dad:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  406db4:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  406dbb:	00 
  406dbc:	e8 5f b4 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406dc1:	48 8b bd e0 c8 ff ff 	mov    -0x3720(%rbp),%rdi
	if (!_M_is_local())
  406dc8:	48 3b bd 58 c7 ff ff 	cmp    -0x38a8(%rbp),%rdi
  406dcf:	74 10                	je     406de1 <main+0x3a71>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406dd1:	48 8b 85 f0 c8 ff ff 	mov    -0x3710(%rbp),%rax
  406dd8:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406ddc:	e8 3f b4 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  406de1:	48 8b bd c0 c8 ff ff 	mov    -0x3740(%rbp),%rdi
	if (!_M_is_local())
  406de8:	48 8d 85 d0 c8 ff ff 	lea    -0x3730(%rbp),%rax
  406def:	48 39 c7             	cmp    %rax,%rdi
  406df2:	74 10                	je     406e04 <main+0x3a94>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  406df4:	48 8b 85 d0 c8 ff ff 	mov    -0x3730(%rbp),%rax
  406dfb:	48 8d 70 01          	lea    0x1(%rax),%rsi
  406dff:	e8 1c b4 ff ff       	call   402220 <_ZdlPvm@plt>
  406e04:	4c 89 e7             	mov    %r12,%rdi
  406e07:	e8 04 b5 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  406e0c:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  406e13:	e8 f8 b4 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
  406e18:	e9 09 da ff ff       	jmp    404826 <main+0x14b6>
					input[j] = button;
  406e1d:	48 63 c3             	movslq %ebx,%rax
					j++;
  406e20:	83 c3 01             	add    $0x1,%ebx
  406e23:	89 8d 30 c7 ff ff    	mov    %ecx,-0x38d0(%rbp)
					input[j] = button;
  406e29:	89 8c 85 20 c8 ff ff 	mov    %ecx,-0x37e0(%rbp,%rax,4)
					j++;
  406e30:	89 9d 38 c7 ff ff    	mov    %ebx,-0x38c8(%rbp)
				if (j >= BUTTON_AMOUNT){
  406e36:	83 bd 38 c7 ff ff 06 	cmpl   $0x6,-0x38c8(%rbp)
  406e3d:	0f 85 7d d9 ff ff    	jne    4047c0 <main+0x1450>
  406e43:	e9 30 e1 ff ff       	jmp    404f78 <main+0x1c08>
	printf("Syntax: %s <device file path>\n", argv[0]);
  406e48:	48 8b 36             	mov    (%rsi),%rsi
  406e4b:	bf a8 91 40 00       	mov    $0x4091a8,%edi
  406e50:	31 c0                	xor    %eax,%eax
  406e52:	e8 e9 b1 ff ff       	call   402040 <printf@plt>
	return -EINVAL;
  406e57:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
  406e5c:	e9 41 f2 ff ff       	jmp    4060a2 <main+0x2d32>
				if(currMatrix[0] == 1) window.draw(greenSquare1);
  406e61:	48 8d b5 d0 ca ff ff 	lea    -0x3530(%rbp),%rsi
  406e68:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406e6f:	e8 8c b5 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406e74:	e9 ea e3 ff ff       	jmp    405263 <main+0x1ef3>
	this->_M_widen_init();
  406e79:	4c 89 e7             	mov    %r12,%rdi
  406e7c:	e8 ef b3 ff ff       	call   402270 <_ZNKSt5ctypeIcE13_M_widen_initEv@plt>
	return this->do_widen(__c);
  406e81:	49 8b 04 24          	mov    (%r12),%rax
  406e85:	be 0a 00 00 00       	mov    $0xa,%esi
  406e8a:	4c 89 e7             	mov    %r12,%rdi
  406e8d:	ff 50 30             	call   *0x30(%rax)
  406e90:	0f be f0             	movsbl %al,%esi
  406e93:	bf 00 c3 40 00       	mov    $0x40c300,%edi
  406e98:	e8 93 b1 ff ff       	call   402030 <_ZNSo3putEc@plt>
  406e9d:	48 89 c7             	mov    %rax,%rdi
   *  This manipulator simply calls the stream's @c flush() member function.
  */
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    flush(basic_ostream<_CharT, _Traits>& __os)
    { return __os.flush(); }
  406ea0:	e8 bb b2 ff ff       	call   402160 <_ZNSo5flushEv@plt>
    { return flush(__os.put(__os.widen('\n'))); }
  406ea5:	e9 95 d5 ff ff       	jmp    40443f <main+0x10cf>
	fprintf(stderr, "Error opening file %s\n", argv[1]);
  406eaa:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  406eae:	48 8b 3d 6b 55 00 00 	mov    0x556b(%rip),%rdi        # 40c420 <stderr@@GLIBC_2.2.5>
  406eb5:	be 83 90 40 00       	mov    $0x409083,%esi
  406eba:	31 c0                	xor    %eax,%eax
  406ebc:	e8 5f b4 ff ff       	call   402320 <fprintf@plt>
	return -EBUSY;
  406ec1:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
  406ec6:	e9 d7 f1 ff ff       	jmp    4060a2 <main+0x2d32>
				if(currMatrix[17] == 1) window.draw(greenSquare18);
  406ecb:	48 8d b5 90 f9 ff ff 	lea    -0x670(%rbp),%rsi
  406ed2:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406ed9:	e8 22 b5 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406ede:	e9 f5 e5 ff ff       	jmp    4054d8 <main+0x2168>
				if(currMatrix[14] == 1) window.draw(greenSquare17);
  406ee3:	48 8d b5 d0 f6 ff ff 	lea    -0x930(%rbp),%rsi
  406eea:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406ef1:	e8 0a b5 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406ef6:	e9 b8 e5 ff ff       	jmp    4054b3 <main+0x2143>
				if(currMatrix[11] == 1) window.draw(greenSquare16);
  406efb:	48 8d b5 10 f4 ff ff 	lea    -0xbf0(%rbp),%rsi
  406f02:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406f09:	e8 f2 b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406f0e:	e9 7b e5 ff ff       	jmp    40548e <main+0x211e>
				if(currMatrix[8] == 1) window.draw(greenSquare15);
  406f13:	48 8d b5 50 f1 ff ff 	lea    -0xeb0(%rbp),%rsi
  406f1a:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406f21:	e8 da b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406f26:	e9 3e e5 ff ff       	jmp    405469 <main+0x20f9>
				if(currMatrix[5] == 1) window.draw(greenSquare14);
  406f2b:	48 8d b5 90 ee ff ff 	lea    -0x1170(%rbp),%rsi
  406f32:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406f39:	e8 c2 b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406f3e:	e9 01 e5 ff ff       	jmp    405444 <main+0x20d4>
				if(currMatrix[2] == 1) window.draw(greenSquare13);
  406f43:	48 8d b5 d0 eb ff ff 	lea    -0x1430(%rbp),%rsi
  406f4a:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406f51:	e8 aa b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406f56:	e9 c4 e4 ff ff       	jmp    40541f <main+0x20af>
				if(currMatrix[16] == 1) window.draw(greenSquare12);
  406f5b:	48 8d b5 10 e9 ff ff 	lea    -0x16f0(%rbp),%rsi
  406f62:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406f69:	e8 92 b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406f6e:	e9 87 e4 ff ff       	jmp    4053fa <main+0x208a>
				if(currMatrix[13] == 1) window.draw(greenSquare11);
  406f73:	48 8d b5 50 e6 ff ff 	lea    -0x19b0(%rbp),%rsi
  406f7a:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406f81:	e8 7a b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406f86:	e9 4a e4 ff ff       	jmp    4053d5 <main+0x2065>
				if(currMatrix[10] == 1) window.draw(greenSquare10);
  406f8b:	48 8d b5 90 e3 ff ff 	lea    -0x1c70(%rbp),%rsi
  406f92:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406f99:	e8 62 b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406f9e:	e9 0d e4 ff ff       	jmp    4053b0 <main+0x2040>
				if(currMatrix[7] == 1) window.draw(greenSquare9);
  406fa3:	48 8d b5 d0 e0 ff ff 	lea    -0x1f30(%rbp),%rsi
  406faa:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406fb1:	e8 4a b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406fb6:	e9 d0 e3 ff ff       	jmp    40538b <main+0x201b>
				if(currMatrix[4] == 1) window.draw(greenSquare8);
  406fbb:	48 8d b5 10 de ff ff 	lea    -0x21f0(%rbp),%rsi
  406fc2:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406fc9:	e8 32 b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406fce:	e9 93 e3 ff ff       	jmp    405366 <main+0x1ff6>
				if(currMatrix[1] == 1) window.draw(greenSquare7);
  406fd3:	48 8d b5 50 db ff ff 	lea    -0x24b0(%rbp),%rsi
  406fda:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406fe1:	e8 1a b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406fe6:	e9 56 e3 ff ff       	jmp    405341 <main+0x1fd1>
				if(currMatrix[15] == 1) window.draw(greenSquare6);
  406feb:	48 8d b5 90 d8 ff ff 	lea    -0x2770(%rbp),%rsi
  406ff2:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  406ff9:	e8 02 b4 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  406ffe:	e9 19 e3 ff ff       	jmp    40531c <main+0x1fac>
				if(currMatrix[12] == 1) window.draw(greenSquare5);
  407003:	48 8d b5 d0 d5 ff ff 	lea    -0x2a30(%rbp),%rsi
  40700a:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407011:	e8 ea b3 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  407016:	e9 dc e2 ff ff       	jmp    4052f7 <main+0x1f87>
				if(currMatrix[9] == 1) window.draw(greenSquare4);
  40701b:	48 8d b5 10 d3 ff ff 	lea    -0x2cf0(%rbp),%rsi
  407022:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407029:	e8 d2 b3 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40702e:	e9 9f e2 ff ff       	jmp    4052d2 <main+0x1f62>
				if(currMatrix[6] == 1) window.draw(greenSquare3);
  407033:	48 8d b5 50 d0 ff ff 	lea    -0x2fb0(%rbp),%rsi
  40703a:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407041:	e8 ba b3 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  407046:	e9 62 e2 ff ff       	jmp    4052ad <main+0x1f3d>
				if(currMatrix[3] == 1) window.draw(greenSquare2);
  40704b:	48 8d b5 90 cd ff ff 	lea    -0x3270(%rbp),%rsi
  407052:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
  407059:	e8 a2 b3 ff ff       	call   402400 <_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@plt>
  40705e:	e9 25 e2 ff ff       	jmp    405288 <main+0x1f18>
					text.setString("");
  407063:	4c 8d b5 e0 c8 ff ff 	lea    -0x3720(%rbp),%r14
  40706a:	4c 89 f7             	mov    %r14,%rdi
  40706d:	e8 5e b4 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  407072:	4c 89 f2             	mov    %r14,%rdx
  407075:	be d9 90 40 00       	mov    $0x4090d9,%esi
  40707a:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  407081:	e8 6a b0 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  407086:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  40708d:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  407094:	e8 d7 b3 ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  407099:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4070a0:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  4070a7:	48 39 df             	cmp    %rbx,%rdi
  4070aa:	74 14                	je     4070c0 <main+0x3d50>
  4070ac:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4070b3:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4070ba:	00 
  4070bb:	e8 60 b1 ff ff       	call   402220 <_ZdlPvm@plt>
  4070c0:	4c 89 f7             	mov    %r14,%rdi
  4070c3:	e8 48 b2 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
					typedtext.insert(0, "[root@bois ~] $ Tem alguma coisa piscando\n\n[root@bois ~] $ voce deveria prestar atencao");
  4070c8:	4c 89 f7             	mov    %r14,%rdi
  4070cb:	e8 00 b4 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  4070d0:	4c 89 f2             	mov    %r14,%rdx
  4070d3:	be a0 94 40 00       	mov    $0x4094a0,%esi
  4070d8:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4070df:	e8 0c b0 ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4070e4:	48 8d 95 00 c9 ff ff 	lea    -0x3700(%rbp),%rdx
  4070eb:	31 f6                	xor    %esi,%esi
  4070ed:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  4070f4:	e8 b7 b0 ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  4070f9:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  407100:	48 39 df             	cmp    %rbx,%rdi
  407103:	74 14                	je     407119 <main+0x3da9>
  407105:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  40710c:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  407113:	00 
  407114:	e8 07 b1 ff ff       	call   402220 <_ZdlPvm@plt>
  407119:	4c 89 f7             	mov    %r14,%rdi
  40711c:	e8 ef b1 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
					temp_clock.restart();
  407121:	48 8d bd c0 c7 ff ff 	lea    -0x3840(%rbp),%rdi
  407128:	e8 b3 b2 ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
	ioctl(fd, WR_GREEN_LEDS);
  40712d:	be 66 61 00 00       	mov    $0x6166,%esi
  407132:	44 89 ff             	mov    %r15d,%edi
  407135:	31 c0                	xor    %eax,%eax
  407137:	c7 85 c0 c8 ff ff 00 	movl   $0x0,-0x3740(%rbp)
  40713e:	00 00 00 
  407141:	e8 ba b1 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407146:	ba 04 00 00 00       	mov    $0x4,%edx
  40714b:	48 8d b5 c0 c8 ff ff 	lea    -0x3740(%rbp),%rsi
  407152:	44 89 ff             	mov    %r15d,%edi
  407155:	e8 86 af ff ff       	call   4020e0 <write@plt>
					flag = 1;
  40715a:	c7 85 40 c7 ff ff 01 	movl   $0x1,-0x38c0(%rbp)
  407161:	00 00 00 
					old_button = 0xF;
  407164:	c7 85 30 c7 ff ff 0f 	movl   $0xf,-0x38d0(%rbp)
  40716b:	00 00 00 
					i = 0;
  40716e:	c7 85 3c c7 ff ff 00 	movl   $0x0,-0x38c4(%rbp)
  407175:	00 00 00 
					screen = 5;
  407178:	c7 85 54 c7 ff ff 05 	movl   $0x5,-0x38ac(%rbp)
  40717f:	00 00 00 
  407182:	e9 6c e3 ff ff       	jmp    4054f3 <main+0x2183>
							printf("\n%d %d", answer[k], input[k]);
  407187:	48 89 bd 60 c7 ff ff 	mov    %rdi,-0x38a0(%rbp)
  40718e:	48 89 fb             	mov    %rdi,%rbx
  407191:	31 c0                	xor    %eax,%eax
  407193:	bf da 90 40 00       	mov    $0x4090da,%edi
  407198:	e8 a3 ae ff ff       	call   402040 <printf@plt>
							printf("errou\n");
  40719d:	bf e1 90 40 00       	mov    $0x4090e1,%edi
  4071a2:	e8 e9 b1 ff ff       	call   402390 <puts@plt>
							text.setString("");
  4071a7:	48 89 df             	mov    %rbx,%rdi
  4071aa:	e8 21 b3 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  4071af:	48 89 da             	mov    %rbx,%rdx
  4071b2:	be d9 90 40 00       	mov    $0x4090d9,%esi
  4071b7:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  4071be:	e8 2d af ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  4071c3:	48 8d b5 00 c9 ff ff 	lea    -0x3700(%rbp),%rsi
  4071ca:	48 8d bd 50 fc ff ff 	lea    -0x3b0(%rbp),%rdi
  4071d1:	e8 9a b2 ff ff       	call   402470 <_ZN2sf4Text9setStringERKNS_6StringE@plt>
      { return _M_dataplus._M_p; }
  4071d6:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  4071dd:	48 8d 9d 10 c9 ff ff 	lea    -0x36f0(%rbp),%rbx
  4071e4:	48 39 df             	cmp    %rbx,%rdi
  4071e7:	74 14                	je     4071fd <main+0x3e8d>
  4071e9:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  4071f0:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4071f7:	00 
  4071f8:	e8 23 b0 ff ff       	call   402220 <_ZdlPvm@plt>
  4071fd:	4c 8b b5 60 c7 ff ff 	mov    -0x38a0(%rbp),%r14
  407204:	4c 89 f7             	mov    %r14,%rdi
  407207:	e8 04 b1 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
							typedtext.insert(0, "[root@bois ~] $ Nao foi dessa vez, tente de novo se voce tiver sobrevivido :)\n[root@bois ~] $ ???????\n[root@bois ~] $ ???????\n[root@bois ~] $ ????\n[root@bois ~] $ ???????");
  40720c:	4c 89 f7             	mov    %r14,%rdi
  40720f:	e8 bc b2 ff ff       	call   4024d0 <_ZNSt6localeC1Ev@plt>
  407214:	4c 89 f2             	mov    %r14,%rdx
  407217:	be f8 94 40 00       	mov    $0x4094f8,%esi
  40721c:	48 8d bd 00 c9 ff ff 	lea    -0x3700(%rbp),%rdi
  407223:	e8 c8 ae ff ff       	call   4020f0 <_ZN2sf6StringC1EPKcRKSt6locale@plt>
  407228:	48 8d 95 00 c9 ff ff 	lea    -0x3700(%rbp),%rdx
  40722f:	31 f6                	xor    %esi,%esi
  407231:	48 8d bd 40 c8 ff ff 	lea    -0x37c0(%rbp),%rdi
  407238:	e8 73 af ff ff       	call   4021b0 <_ZN2sf6String6insertEmRKS0_@plt>
      { return _M_dataplus._M_p; }
  40723d:	48 8b bd 00 c9 ff ff 	mov    -0x3700(%rbp),%rdi
	if (!_M_is_local())
  407244:	48 39 df             	cmp    %rbx,%rdi
  407247:	74 14                	je     40725d <main+0x3eed>
  407249:	48 8b 85 10 c9 ff ff 	mov    -0x36f0(%rbp),%rax
  407250:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  407257:	00 
  407258:	e8 c3 af ff ff       	call   402220 <_ZdlPvm@plt>
  40725d:	48 8b bd 60 c7 ff ff 	mov    -0x38a0(%rbp),%rdi
  407264:	e8 a7 b0 ff ff       	call   402310 <_ZNSt6localeD1Ev@plt>
							clock_text.restart();
  407269:	48 8d bd b0 c7 ff ff 	lea    -0x3850(%rbp),%rdi
  407270:	e8 6b b1 ff ff       	call   4023e0 <_ZN2sf5Clock7restartEv@plt>
  407275:	c7 85 38 c7 ff ff 06 	movl   $0x6,-0x38c8(%rbp)
  40727c:	00 00 00 
							flag_correct = 0;
  40727f:	c7 85 2c c7 ff ff 00 	movl   $0x0,-0x38d4(%rbp)
  407286:	00 00 00 
							screen = 6;
  407289:	c7 85 54 c7 ff ff 06 	movl   $0x6,-0x38ac(%rbp)
  407290:	00 00 00 
  407293:	e9 28 d5 ff ff       	jmp    4047c0 <main+0x1450>
      { return _M_dataplus._M_p; }
  407298:	48 8b bd 58 c7 ff ff 	mov    -0x38a8(%rbp),%rdi
  40729f:	e9 2e e9 ff ff       	jmp    405bd2 <main+0x2862>
	__throw_bad_cast();
  4072a4:	e8 17 b0 ff ff       	call   4022c0 <_ZSt16__throw_bad_castv@plt>
	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
  4072a9:	31 c9                	xor    %ecx,%ecx
  4072ab:	ba 01 00 00 00       	mov    $0x1,%edx
  4072b0:	be ae 90 40 00       	mov    $0x4090ae,%esi
  4072b5:	31 c0                	xor    %eax,%eax
  4072b7:	bf d0 93 40 00       	mov    $0x4093d0,%edi
  4072bc:	e8 9f b0 ff ff       	call   402360 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
							text.setString("");
  4072c1:	48 89 c3             	mov    %rax,%rbx
  4072c4:	e9 86 b3 ff ff       	jmp    40264f <main.cold+0x5e>
					text.setString("");
  4072c9:	48 89 c3             	mov    %rax,%rbx
  4072cc:	e9 c6 b8 ff ff       	jmp    402b97 <main.cold+0x5a6>
					typedtext.insert(0, "[root@bois ~] $ Sobrecarga no sistema pode ate ser boa");
  4072d1:	48 89 c3             	mov    %rax,%rbx
  4072d4:	e9 be b8 ff ff       	jmp    402b97 <main.cold+0x5a6>
      { return _M_dataplus._M_p; }
  4072d9:	48 89 c3             	mov    %rax,%rbx
  4072dc:	e9 dc b8 ff ff       	jmp    402bbd <main.cold+0x5cc>
					typedtext.insert(0, "[root@bois ~] $ Isso faz algum sentido?");
  4072e1:	48 89 c3             	mov    %rax,%rbx
  4072e4:	e9 ae b8 ff ff       	jmp    402b97 <main.cold+0x5a6>
					text.setString("");
  4072e9:	48 89 c3             	mov    %rax,%rbx
  4072ec:	e9 a6 b8 ff ff       	jmp    402b97 <main.cold+0x5a6>
  4072f1:	49 89 c7             	mov    %rax,%r15
  4072f4:	e9 ed b8 ff ff       	jmp    402be6 <main.cold+0x5f5>
  4072f9:	48 89 c3             	mov    %rax,%rbx
  4072fc:	e9 0a b9 ff ff       	jmp    402c0b <main.cold+0x61a>
  407301:	49 89 c5             	mov    %rax,%r13
  407304:	e9 e8 b2 ff ff       	jmp    4025f1 <main.cold>
  407309:	48 89 c3             	mov    %rax,%rbx
  40730c:	e9 f3 b2 ff ff       	jmp    402604 <main.cold+0x13>
}
  407311:	48 89 c3             	mov    %rax,%rbx
  407314:	e9 d2 b3 ff ff       	jmp    4026eb <main.cold+0xfa>
  407319:	48 89 c3             	mov    %rax,%rbx
  40731c:	e9 33 b9 ff ff       	jmp    402c54 <main.cold+0x663>
  407321:	48 89 c3             	mov    %rax,%rbx
  407324:	e9 57 b9 ff ff       	jmp    402c80 <main.cold+0x68f>
  407329:	48 89 c3             	mov    %rax,%rbx
  40732c:	e9 76 b9 ff ff       	jmp    402ca7 <main.cold+0x6b6>
  407331:	48 89 c3             	mov    %rax,%rbx
  407334:	e9 be b3 ff ff       	jmp    4026f7 <main.cold+0x106>
  407339:	48 89 c3             	mov    %rax,%rbx
  40733c:	e9 c2 b3 ff ff       	jmp    402703 <main.cold+0x112>
  407341:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407348:	28 bd 40 00 
  40734c:	48 89 c3             	mov    %rax,%rbx
  40734f:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407355:	e9 d9 b3 ff ff       	jmp    402733 <main.cold+0x142>
  40735a:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407361:	28 bd 40 00 
  407365:	48 89 c3             	mov    %rax,%rbx
  407368:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40736e:	e9 df b3 ff ff       	jmp    402752 <main.cold+0x161>
  407373:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  40737a:	28 bd 40 00 
  40737e:	48 89 c3             	mov    %rax,%rbx
  407381:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407387:	e9 c5 b7 ff ff       	jmp    402b51 <main.cold+0x560>
  40738c:	48 89 c3             	mov    %rax,%rbx
  40738f:	e9 dc b7 ff ff       	jmp    402b70 <main.cold+0x57f>
  407394:	48 89 c3             	mov    %rax,%rbx
  407397:	e9 1c b9 ff ff       	jmp    402cb8 <main.cold+0x6c7>
  40739c:	48 89 c3             	mov    %rax,%rbx
  40739f:	e9 3b b3 ff ff       	jmp    4026df <main.cold+0xee>
  4073a4:	48 89 c3             	mov    %rax,%rbx
  4073a7:	e9 78 b2 ff ff       	jmp    402624 <main.cold+0x33>
						typedtext = typedtext.toAnsiString().substr(1);
  4073ac:	48 89 c3             	mov    %rax,%rbx
  4073af:	e9 93 b2 ff ff       	jmp    402647 <main.cold+0x56>
  4073b4:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4073bb:	28 bd 40 00 
  4073bf:	48 89 c3             	mov    %rax,%rbx
  4073c2:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4073c8:	e9 a4 b3 ff ff       	jmp    402771 <main.cold+0x180>
  4073cd:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4073d4:	28 bd 40 00 
  4073d8:	48 89 c3             	mov    %rax,%rbx
  4073db:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4073e1:	e9 aa b3 ff ff       	jmp    402790 <main.cold+0x19f>
  4073e6:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4073ed:	28 bd 40 00 
  4073f1:	48 89 c3             	mov    %rax,%rbx
  4073f4:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4073fa:	e9 b0 b3 ff ff       	jmp    4027af <main.cold+0x1be>
  4073ff:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407406:	28 bd 40 00 
  40740a:	48 89 c3             	mov    %rax,%rbx
  40740d:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407413:	e9 b6 b3 ff ff       	jmp    4027ce <main.cold+0x1dd>
  407418:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  40741f:	28 bd 40 00 
  407423:	48 89 c3             	mov    %rax,%rbx
  407426:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40742c:	e9 bc b3 ff ff       	jmp    4027ed <main.cold+0x1fc>
  407431:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407438:	28 bd 40 00 
  40743c:	48 89 c3             	mov    %rax,%rbx
  40743f:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407445:	e9 c2 b3 ff ff       	jmp    40280c <main.cold+0x21b>
  40744a:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407451:	28 bd 40 00 
  407455:	48 89 c3             	mov    %rax,%rbx
  407458:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40745e:	e9 c8 b3 ff ff       	jmp    40282b <main.cold+0x23a>
  407463:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  40746a:	28 bd 40 00 
  40746e:	48 89 c3             	mov    %rax,%rbx
  407471:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407477:	e9 ce b3 ff ff       	jmp    40284a <main.cold+0x259>
  40747c:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407483:	28 bd 40 00 
  407487:	48 89 c3             	mov    %rax,%rbx
  40748a:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407490:	e9 d4 b3 ff ff       	jmp    402869 <main.cold+0x278>
  407495:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  40749c:	28 bd 40 00 
  4074a0:	48 89 c3             	mov    %rax,%rbx
  4074a3:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4074a9:	e9 da b3 ff ff       	jmp    402888 <main.cold+0x297>
  4074ae:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4074b5:	28 bd 40 00 
  4074b9:	48 89 c3             	mov    %rax,%rbx
  4074bc:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4074c2:	e9 e0 b3 ff ff       	jmp    4028a7 <main.cold+0x2b6>
  4074c7:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4074ce:	28 bd 40 00 
  4074d2:	48 89 c3             	mov    %rax,%rbx
  4074d5:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4074db:	e9 e6 b3 ff ff       	jmp    4028c6 <main.cold+0x2d5>
  4074e0:	48 89 c3             	mov    %rax,%rbx
  4074e3:	e9 2f b8 ff ff       	jmp    402d17 <main.cold+0x726>
  4074e8:	48 89 c3             	mov    %rax,%rbx
  4074eb:	e9 7a b8 ff ff       	jmp    402d6a <main.cold+0x779>
  4074f0:	48 89 c3             	mov    %rax,%rbx
  4074f3:	e9 a2 b8 ff ff       	jmp    402d9a <main.cold+0x7a9>
  4074f8:	48 89 c3             	mov    %rax,%rbx
  4074fb:	e9 ab b8 ff ff       	jmp    402dab <main.cold+0x7ba>
  407500:	48 89 c3             	mov    %rax,%rbx
  407503:	e9 b4 b8 ff ff       	jmp    402dbc <main.cold+0x7cb>
  407508:	48 89 c3             	mov    %rax,%rbx
  40750b:	e9 5a b8 ff ff       	jmp    402d6a <main.cold+0x779>
  407510:	49 89 c7             	mov    %rax,%r15
  407513:	e9 cd b8 ff ff       	jmp    402de5 <main.cold+0x7f4>
							typedtext.insert(0, "[root@bois ~] $ Voce deveria saber matematica...");
  407518:	48 89 c3             	mov    %rax,%rbx
  40751b:	e9 77 b6 ff ff       	jmp    402b97 <main.cold+0x5a6>
  407520:	48 89 c3             	mov    %rax,%rbx
  407523:	e9 e5 b8 ff ff       	jmp    402e0d <main.cold+0x81c>
  407528:	48 89 c3             	mov    %rax,%rbx
  40752b:	e9 04 b9 ff ff       	jmp    402e34 <main.cold+0x843>
  407530:	48 89 c3             	mov    %rax,%rbx
  407533:	e9 23 b1 ff ff       	jmp    40265b <main.cold+0x6a>
  407538:	48 89 c3             	mov    %rax,%rbx
  40753b:	e9 61 b1 ff ff       	jmp    4026a1 <main.cold+0xb0>
  407540:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407547:	28 bd 40 00 
  40754b:	48 89 c3             	mov    %rax,%rbx
  40754e:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407554:	e9 7c b5 ff ff       	jmp    402ad5 <main.cold+0x4e4>
  407559:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407560:	28 bd 40 00 
  407564:	48 89 c3             	mov    %rax,%rbx
  407567:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40756d:	e9 82 b5 ff ff       	jmp    402af4 <main.cold+0x503>
  407572:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407579:	28 bd 40 00 
  40757d:	48 89 c3             	mov    %rax,%rbx
  407580:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407586:	e9 88 b5 ff ff       	jmp    402b13 <main.cold+0x522>
  40758b:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407592:	28 bd 40 00 
  407596:	48 89 c3             	mov    %rax,%rbx
  407599:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40759f:	e9 8e b5 ff ff       	jmp    402b32 <main.cold+0x541>
  4075a4:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4075ab:	28 bd 40 00 
  4075af:	48 89 c3             	mov    %rax,%rbx
  4075b2:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4075b8:	e9 28 b3 ff ff       	jmp    4028e5 <main.cold+0x2f4>
  4075bd:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4075c4:	28 bd 40 00 
  4075c8:	48 89 c3             	mov    %rax,%rbx
  4075cb:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4075d1:	e9 2e b3 ff ff       	jmp    402904 <main.cold+0x313>
  4075d6:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4075dd:	28 bd 40 00 
  4075e1:	48 89 c3             	mov    %rax,%rbx
  4075e4:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4075ea:	e9 34 b3 ff ff       	jmp    402923 <main.cold+0x332>
  4075ef:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4075f6:	28 bd 40 00 
  4075fa:	48 89 c3             	mov    %rax,%rbx
  4075fd:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407603:	e9 3a b3 ff ff       	jmp    402942 <main.cold+0x351>
  407608:	49 89 c4             	mov    %rax,%r12
  40760b:	e9 38 b8 ff ff       	jmp    402e48 <main.cold+0x857>
  407610:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407617:	28 bd 40 00 
  40761b:	48 89 c3             	mov    %rax,%rbx
  40761e:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407624:	e9 8d b4 ff ff       	jmp    402ab6 <main.cold+0x4c5>
				typedtext.insert(0, "BOOM!!!");
  407629:	48 89 c3             	mov    %rax,%rbx
  40762c:	e9 66 b5 ff ff       	jmp    402b97 <main.cold+0x5a6>
							text.setString("");
  407631:	48 89 c3             	mov    %rax,%rbx
  407634:	e9 5e b5 ff ff       	jmp    402b97 <main.cold+0x5a6>
  407639:	49 89 c5             	mov    %rax,%r13
  40763c:	e9 2f b8 ff ff       	jmp    402e70 <main.cold+0x87f>
  407641:	48 89 c3             	mov    %rax,%rbx
  407644:	e9 21 b7 ff ff       	jmp    402d6a <main.cold+0x779>
  407649:	48 89 c3             	mov    %rax,%rbx
  40764c:	e9 f2 b6 ff ff       	jmp    402d43 <main.cold+0x752>
  407651:	49 89 c7             	mov    %rax,%r15
  407654:	e9 86 b8 ff ff       	jmp    402edf <main.cold+0x8ee>
  407659:	49 89 c5             	mov    %rax,%r13
  40765c:	e9 a6 b8 ff ff       	jmp    402f07 <main.cold+0x916>
				text.setString("");
  407661:	48 89 c3             	mov    %rax,%rbx
  407664:	e9 2e b5 ff ff       	jmp    402b97 <main.cold+0x5a6>
  407669:	48 89 c3             	mov    %rax,%rbx
  40766c:	e9 05 b9 ff ff       	jmp    402f76 <main.cold+0x985>
						typedtext = typedtext.toAnsiString().substr(1);
  407671:	48 89 c3             	mov    %rax,%rbx
  407674:	e9 ce af ff ff       	jmp    402647 <main.cold+0x56>
  407679:	48 89 c3             	mov    %rax,%rbx
  40767c:	e9 25 b9 ff ff       	jmp    402fa6 <main.cold+0x9b5>
  407681:	48 89 c3             	mov    %rax,%rbx
  407684:	e9 2a b8 ff ff       	jmp    402eb3 <main.cold+0x8c2>
  407689:	48 89 c3             	mov    %rax,%rbx
  40768c:	e9 d9 b6 ff ff       	jmp    402d6a <main.cold+0x779>
  407691:	48 89 c3             	mov    %rax,%rbx
  407694:	e9 fa b7 ff ff       	jmp    402e93 <main.cold+0x8a2>
							typedtext.insert(0, "[root@bois ~] $ Nao foi dessa vez, tente de novo se voce tiver sobrevivido :)\n[root@bois ~] $ ???????\n[root@bois ~] $ ???????\n[root@bois ~] $ ????\n[root@bois ~] $ ???????");
  407699:	48 89 c3             	mov    %rax,%rbx
  40769c:	e9 ae af ff ff       	jmp    40264f <main.cold+0x5e>
  4076a1:	48 89 c3             	mov    %rax,%rbx
  4076a4:	e9 2d b9 ff ff       	jmp    402fd6 <main.cold+0x9e5>
  4076a9:	49 89 c7             	mov    %rax,%r15
  4076ac:	e9 d3 b4 ff ff       	jmp    402b84 <main.cold+0x593>
					typedtext.insert(0, "[root@bois ~] $ Tem alguma coisa piscando\n\n[root@bois ~] $ voce deveria prestar atencao");
  4076b1:	48 89 c3             	mov    %rax,%rbx
  4076b4:	e9 de b4 ff ff       	jmp    402b97 <main.cold+0x5a6>
  4076b9:	49 89 c5             	mov    %rax,%r13
  4076bc:	e9 23 b6 ff ff       	jmp    402ce4 <main.cold+0x6f3>
  4076c1:	49 89 c7             	mov    %rax,%r15
  4076c4:	e9 56 b9 ff ff       	jmp    40301f <main.cold+0xa2e>
  4076c9:	48 89 c3             	mov    %rax,%rbx
  4076cc:	e9 8f b9 ff ff       	jmp    403060 <main.cold+0xa6f>
					text.setString("");
  4076d1:	48 89 c3             	mov    %rax,%rbx
  4076d4:	e9 be b4 ff ff       	jmp    402b97 <main.cold+0x5a6>
  4076d9:	49 89 c4             	mov    %rax,%r12
  4076dc:	e9 3f ba ff ff       	jmp    403120 <main.cold+0xb2f>
  4076e1:	48 89 c3             	mov    %rax,%rbx
  4076e4:	e9 a7 b9 ff ff       	jmp    403090 <main.cold+0xa9f>
  4076e9:	48 89 c3             	mov    %rax,%rbx
  4076ec:	e9 cf b9 ff ff       	jmp    4030c0 <main.cold+0xacf>
						typedtext = typedtext.toAnsiString().substr(1);
  4076f1:	48 89 c3             	mov    %rax,%rbx
  4076f4:	e9 4e af ff ff       	jmp    402647 <main.cold+0x56>
						typedtext.insert(0, "[root@bois ~] $ Parabens, dessa vez nada foi pelos ares, quem sabe na proxima :(");
  4076f9:	48 89 c3             	mov    %rax,%rbx
  4076fc:	e9 4e af ff ff       	jmp    40264f <main.cold+0x5e>
						text.setString("");
  407701:	48 89 c3             	mov    %rax,%rbx
  407704:	e9 46 af ff ff       	jmp    40264f <main.cold+0x5e>
  407709:	48 89 c3             	mov    %rax,%rbx
  40770c:	e9 e6 b5 ff ff       	jmp    402cf7 <main.cold+0x706>
  407711:	48 89 c3             	mov    %rax,%rbx
  407714:	e9 d7 b9 ff ff       	jmp    4030f0 <main.cold+0xaff>
  407719:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407720:	28 bd 40 00 
  407724:	48 89 c3             	mov    %rax,%rbx
  407727:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40772d:	e9 2f b2 ff ff       	jmp    402961 <main.cold+0x370>
  407732:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407739:	28 bd 40 00 
  40773d:	48 89 c3             	mov    %rax,%rbx
  407740:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407746:	e9 35 b2 ff ff       	jmp    402980 <main.cold+0x38f>
  40774b:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407752:	28 bd 40 00 
  407756:	48 89 c3             	mov    %rax,%rbx
  407759:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40775f:	e9 3b b2 ff ff       	jmp    40299f <main.cold+0x3ae>
  407764:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  40776b:	28 bd 40 00 
  40776f:	48 89 c3             	mov    %rax,%rbx
  407772:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407778:	e9 41 b2 ff ff       	jmp    4029be <main.cold+0x3cd>
  40777d:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407784:	28 bd 40 00 
  407788:	48 89 c3             	mov    %rax,%rbx
  40778b:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407791:	e9 47 b2 ff ff       	jmp    4029dd <main.cold+0x3ec>
  407796:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  40779d:	28 bd 40 00 
  4077a1:	48 89 c3             	mov    %rax,%rbx
  4077a4:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4077aa:	e9 4d b2 ff ff       	jmp    4029fc <main.cold+0x40b>
  4077af:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4077b6:	28 bd 40 00 
  4077ba:	48 89 c3             	mov    %rax,%rbx
  4077bd:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4077c3:	e9 53 b2 ff ff       	jmp    402a1b <main.cold+0x42a>
  4077c8:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4077cf:	28 bd 40 00 
  4077d3:	48 89 c3             	mov    %rax,%rbx
  4077d6:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4077dc:	e9 59 b2 ff ff       	jmp    402a3a <main.cold+0x449>
  4077e1:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  4077e8:	28 bd 40 00 
  4077ec:	48 89 c3             	mov    %rax,%rbx
  4077ef:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  4077f5:	e9 5f b2 ff ff       	jmp    402a59 <main.cold+0x468>
  4077fa:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  407801:	28 bd 40 00 
  407805:	48 89 c3             	mov    %rax,%rbx
  407808:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  40780e:	e9 65 b2 ff ff       	jmp    402a78 <main.cold+0x487>
  407813:	48 c7 85 60 c7 ff ff 	movq   $0x40bd28,-0x38a0(%rbp)
  40781a:	28 bd 40 00 
  40781e:	48 89 c3             	mov    %rax,%rbx
  407821:	41 bc f0 bc 40 00    	mov    $0x40bcf0,%r12d
  407827:	e9 6b b2 ff ff       	jmp    402a97 <main.cold+0x4a6>
						typedtext = typedtext.toAnsiString().substr(1);
  40782c:	48 89 c3             	mov    %rax,%rbx
  40782f:	e9 13 ae ff ff       	jmp    402647 <main.cold+0x56>
  407834:	48 89 c3             	mov    %rax,%rbx
  407837:	e9 3b b9 ff ff       	jmp    403177 <main.cold+0xb86>
  40783c:	48 89 c3             	mov    %rax,%rbx
  40783f:	e9 13 b9 ff ff       	jmp    403157 <main.cold+0xb66>
  407844:	49 89 c5             	mov    %rax,%r13
  407847:	e9 fc b8 ff ff       	jmp    403148 <main.cold+0xb57>
  40784c:	48 89 c3             	mov    %rax,%rbx
  40784f:	e9 16 b5 ff ff       	jmp    402d6a <main.cold+0x779>
  407854:	48 89 c3             	mov    %rax,%rbx
  407857:	e9 47 b9 ff ff       	jmp    4031a3 <main.cold+0xbb2>
						typedtext = typedtext.toAnsiString().substr(1);
  40785c:	48 89 c3             	mov    %rax,%rbx
  40785f:	e9 e3 ad ff ff       	jmp    402647 <main.cold+0x56>
  407864:	48 89 c3             	mov    %rax,%rbx
  407867:	e9 52 ba ff ff       	jmp    4032be <main.cold+0xccd>
  40786c:	49 89 c5             	mov    %rax,%r13
  40786f:	e9 a8 b9 ff ff       	jmp    40321c <main.cold+0xc2b>
  407874:	48 89 c3             	mov    %rax,%rbx
  407877:	e9 70 b9 ff ff       	jmp    4031ec <main.cold+0xbfb>
  40787c:	48 89 c3             	mov    %rax,%rbx
  40787f:	e9 cb b9 ff ff       	jmp    40324f <main.cold+0xc5e>
  407884:	49 89 c5             	mov    %rax,%r13
  407887:	e9 ef b9 ff ff       	jmp    40327b <main.cold+0xc8a>
  40788c:	48 89 c3             	mov    %rax,%rbx
  40788f:	e9 56 ba ff ff       	jmp    4032ea <main.cold+0xcf9>
  407894:	48 89 c3             	mov    %rax,%rbx
  407897:	e9 ae b6 ff ff       	jmp    402f4a <main.cold+0x959>
  40789c:	48 89 c3             	mov    %rax,%rbx
  40789f:	e9 8b b9 ff ff       	jmp    40322f <main.cold+0xc3e>
  4078a4:	48 89 c3             	mov    %rax,%rbx
  4078a7:	e9 be b4 ff ff       	jmp    402d6a <main.cold+0x779>
						typedtext = typedtext.toAnsiString().substr(1);
  4078ac:	48 89 c3             	mov    %rax,%rbx
  4078af:	e9 93 ad ff ff       	jmp    402647 <main.cold+0x56>
  4078b4:	48 89 c3             	mov    %rax,%rbx
  4078b7:	e9 e2 b9 ff ff       	jmp    40329e <main.cold+0xcad>
  4078bc:	48 89 c3             	mov    %rax,%rbx
  4078bf:	e9 a6 b4 ff ff       	jmp    402d6a <main.cold+0x779>
						typedtext = typedtext.toAnsiString().substr(1);
  4078c4:	48 89 c3             	mov    %rax,%rbx
  4078c7:	e9 7b ad ff ff       	jmp    402647 <main.cold+0x56>
  4078cc:	48 89 c3             	mov    %rax,%rbx
  4078cf:	e9 56 b6 ff ff       	jmp    402f2a <main.cold+0x939>

00000000004078d4 <.annobin_abi_note.c.hot>:
  4078d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4078db:	00 00 00 
  4078de:	66 90                	xchg   %ax,%ax

00000000004078e0 <_start>:
  4078e0:	f3 0f 1e fa          	endbr64 
  4078e4:	31 ed                	xor    %ebp,%ebp
  4078e6:	49 89 d1             	mov    %rdx,%r9
  4078e9:	5e                   	pop    %rsi
  4078ea:	48 89 e2             	mov    %rsp,%rdx
  4078ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4078f1:	50                   	push   %rax
  4078f2:	54                   	push   %rsp
  4078f3:	45 31 c0             	xor    %r8d,%r8d
  4078f6:	31 c9                	xor    %ecx,%ecx
  4078f8:	48 c7 c7 70 33 40 00 	mov    $0x403370,%rdi
  4078ff:	ff 15 eb 46 00 00    	call   *0x46eb(%rip)        # 40bff0 <__libc_start_main@GLIBC_2.34>
  407905:	f4                   	hlt    

0000000000407906 <.annobin_abi_note.c>:
  407906:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40790d:	00 00 00 

0000000000407910 <_dl_relocate_static_pie>:
  407910:	f3 0f 1e fa          	endbr64 
  407914:	c3                   	ret    

0000000000407915 <.annobin__dl_relocate_static_pie.end>:
  407915:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40791c:	00 00 00 
  40791f:	90                   	nop

0000000000407920 <deregister_tm_clones>:
  407920:	b8 80 c2 40 00       	mov    $0x40c280,%eax
  407925:	48 3d 80 c2 40 00    	cmp    $0x40c280,%rax
  40792b:	74 13                	je     407940 <deregister_tm_clones+0x20>
  40792d:	b8 00 00 00 00       	mov    $0x0,%eax
  407932:	48 85 c0             	test   %rax,%rax
  407935:	74 09                	je     407940 <deregister_tm_clones+0x20>
  407937:	bf 80 c2 40 00       	mov    $0x40c280,%edi
  40793c:	ff e0                	jmp    *%rax
  40793e:	66 90                	xchg   %ax,%ax
  407940:	c3                   	ret    
  407941:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407948:	00 00 00 00 
  40794c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407950 <register_tm_clones>:
  407950:	be 80 c2 40 00       	mov    $0x40c280,%esi
  407955:	48 81 ee 80 c2 40 00 	sub    $0x40c280,%rsi
  40795c:	48 89 f0             	mov    %rsi,%rax
  40795f:	48 c1 ee 3f          	shr    $0x3f,%rsi
  407963:	48 c1 f8 03          	sar    $0x3,%rax
  407967:	48 01 c6             	add    %rax,%rsi
  40796a:	48 d1 fe             	sar    %rsi
  40796d:	74 11                	je     407980 <register_tm_clones+0x30>
  40796f:	b8 00 00 00 00       	mov    $0x0,%eax
  407974:	48 85 c0             	test   %rax,%rax
  407977:	74 07                	je     407980 <register_tm_clones+0x30>
  407979:	bf 80 c2 40 00       	mov    $0x40c280,%edi
  40797e:	ff e0                	jmp    *%rax
  407980:	c3                   	ret    
  407981:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407988:	00 00 00 00 
  40798c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407990 <__do_global_dtors_aux>:
  407990:	f3 0f 1e fa          	endbr64 
  407994:	80 3d 8d 4a 00 00 00 	cmpb   $0x0,0x4a8d(%rip)        # 40c428 <completed.0>
  40799b:	75 13                	jne    4079b0 <__do_global_dtors_aux+0x20>
  40799d:	55                   	push   %rbp
  40799e:	48 89 e5             	mov    %rsp,%rbp
  4079a1:	e8 7a ff ff ff       	call   407920 <deregister_tm_clones>
  4079a6:	c6 05 7b 4a 00 00 01 	movb   $0x1,0x4a7b(%rip)        # 40c428 <completed.0>
  4079ad:	5d                   	pop    %rbp
  4079ae:	c3                   	ret    
  4079af:	90                   	nop
  4079b0:	c3                   	ret    
  4079b1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4079b8:	00 00 00 00 
  4079bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004079c0 <frame_dummy>:
  4079c0:	f3 0f 1e fa          	endbr64 
  4079c4:	eb 8a                	jmp    407950 <register_tm_clones>
  4079c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4079cd:	00 00 00 

00000000004079d0 <_Z17char_to_stringbitB5cxx11c>:
{
  4079d0:	41 54                	push   %r12
	switch (n)
  4079d2:	83 ee 30             	sub    $0x30,%esi
{
  4079d5:	49 89 fc             	mov    %rdi,%r12
  4079d8:	55                   	push   %rbp
  4079d9:	53                   	push   %rbx
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
  4079da:	48 8d 5f 10          	lea    0x10(%rdi),%rbx
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  4079de:	48 89 1f             	mov    %rbx,(%rdi)
      { _M_string_length = __length; }
  4079e1:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  4079e8:	00 
      { __c1 = __c2; }
  4079e9:	c6 47 10 00          	movb   $0x0,0x10(%rdi)
	switch (n)
  4079ed:	40 80 fe 09          	cmp    $0x9,%sil
  4079f1:	0f 87 dc 00 00 00    	ja     407ad3 <_Z17char_to_stringbitB5cxx11c+0x103>
  4079f7:	40 0f b6 f6          	movzbl %sil,%esi
       */
      basic_string&
      assign(const _CharT* __s)
      {
	__glibcxx_requires_string(__s);
	return _M_replace(size_type(0), this->size(), __s,
  4079fb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  407a01:	ff 24 f5 e8 90 40 00 	jmp    *0x4090e8(,%rsi,8)
  407a08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  407a0f:	00 
  407a10:	b9 58 90 40 00       	mov    $0x409058,%ecx
  407a15:	31 d2                	xor    %edx,%edx
  407a17:	31 f6                	xor    %esi,%esi
  407a19:	e8 82 a9 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
}
  407a1e:	4c 89 e0             	mov    %r12,%rax
  407a21:	5b                   	pop    %rbx
  407a22:	5d                   	pop    %rbp
  407a23:	41 5c                	pop    %r12
  407a25:	c3                   	ret    
  407a26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  407a2d:	00 00 00 
  407a30:	b9 61 90 40 00       	mov    $0x409061,%ecx
  407a35:	31 d2                	xor    %edx,%edx
  407a37:	31 f6                	xor    %esi,%esi
  407a39:	e8 62 a9 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407a3e:	eb de                	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
  407a40:	b9 10 90 40 00       	mov    $0x409010,%ecx
  407a45:	31 d2                	xor    %edx,%edx
  407a47:	31 f6                	xor    %esi,%esi
  407a49:	e8 52 a9 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407a4e:	eb ce                	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
  407a50:	b9 19 90 40 00       	mov    $0x409019,%ecx
  407a55:	31 d2                	xor    %edx,%edx
  407a57:	31 f6                	xor    %esi,%esi
  407a59:	e8 42 a9 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407a5e:	eb be                	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
  407a60:	b9 22 90 40 00       	mov    $0x409022,%ecx
  407a65:	31 d2                	xor    %edx,%edx
  407a67:	31 f6                	xor    %esi,%esi
  407a69:	e8 32 a9 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407a6e:	eb ae                	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
  407a70:	b9 2b 90 40 00       	mov    $0x40902b,%ecx
  407a75:	31 d2                	xor    %edx,%edx
  407a77:	31 f6                	xor    %esi,%esi
  407a79:	e8 22 a9 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407a7e:	eb 9e                	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
  407a80:	b9 34 90 40 00       	mov    $0x409034,%ecx
  407a85:	31 d2                	xor    %edx,%edx
  407a87:	31 f6                	xor    %esi,%esi
  407a89:	e8 12 a9 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407a8e:	eb 8e                	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
  407a90:	b9 3d 90 40 00       	mov    $0x40903d,%ecx
  407a95:	31 d2                	xor    %edx,%edx
  407a97:	31 f6                	xor    %esi,%esi
  407a99:	e8 02 a9 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407a9e:	e9 7b ff ff ff       	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
  407aa3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407aa8:	b9 46 90 40 00       	mov    $0x409046,%ecx
  407aad:	31 d2                	xor    %edx,%edx
  407aaf:	31 f6                	xor    %esi,%esi
  407ab1:	e8 ea a8 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407ab6:	e9 63 ff ff ff       	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
  407abb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407ac0:	b9 4f 90 40 00       	mov    $0x40904f,%ecx
  407ac5:	31 d2                	xor    %edx,%edx
  407ac7:	31 f6                	xor    %esi,%esi
  407ac9:	e8 d2 a8 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407ace:	e9 4b ff ff ff       	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
  407ad3:	45 31 c0             	xor    %r8d,%r8d
  407ad6:	b9 d9 90 40 00       	mov    $0x4090d9,%ecx
  407adb:	31 d2                	xor    %edx,%edx
  407add:	31 f6                	xor    %esi,%esi
  407adf:	e8 bc a8 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  407ae4:	e9 35 ff ff ff       	jmp    407a1e <_Z17char_to_stringbitB5cxx11c+0x4e>
      { return _M_dataplus._M_p; }
  407ae9:	48 89 c5             	mov    %rax,%rbp
  407aec:	e9 ff a9 ff ff       	jmp    4024f0 <_Z17char_to_stringbitB5cxx11c.cold>
  407af1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407af8:	00 00 00 00 
  407afc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407b00 <_Z13writeLDisplayij>:
{
  407b00:	55                   	push   %rbp
	ioctl(fd, WR_L_DISPLAY);
  407b01:	31 c0                	xor    %eax,%eax
{
  407b03:	89 fd                	mov    %edi,%ebp
  407b05:	48 83 ec 10          	sub    $0x10,%rsp
  407b09:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_L_DISPLAY);
  407b0d:	be 63 61 00 00       	mov    $0x6163,%esi
  407b12:	e8 e9 a7 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407b17:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407b1c:	89 ef                	mov    %ebp,%edi
  407b1e:	ba 04 00 00 00       	mov    $0x4,%edx
  407b23:	e8 b8 a5 ff ff       	call   4020e0 <write@plt>
}
  407b28:	48 83 c4 10          	add    $0x10,%rsp
  407b2c:	5d                   	pop    %rbp
  407b2d:	c3                   	ret    
  407b2e:	66 90                	xchg   %ax,%ax

0000000000407b30 <_Z13writeRDisplayij>:
{
  407b30:	55                   	push   %rbp
	ioctl(fd, WR_R_DISPLAY);
  407b31:	31 c0                	xor    %eax,%eax
{
  407b33:	89 fd                	mov    %edi,%ebp
  407b35:	48 83 ec 10          	sub    $0x10,%rsp
  407b39:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_R_DISPLAY);
  407b3d:	be 64 61 00 00       	mov    $0x6164,%esi
  407b42:	e8 b9 a7 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407b47:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407b4c:	89 ef                	mov    %ebp,%edi
  407b4e:	ba 04 00 00 00       	mov    $0x4,%edx
  407b53:	e8 88 a5 ff ff       	call   4020e0 <write@plt>
}
  407b58:	48 83 c4 10          	add    $0x10,%rsp
  407b5c:	5d                   	pop    %rbp
  407b5d:	c3                   	ret    
  407b5e:	66 90                	xchg   %ax,%ax

0000000000407b60 <_Z13writeGreenLedij>:
{
  407b60:	55                   	push   %rbp
	ioctl(fd, WR_GREEN_LEDS);
  407b61:	31 c0                	xor    %eax,%eax
{
  407b63:	89 fd                	mov    %edi,%ebp
  407b65:	48 83 ec 10          	sub    $0x10,%rsp
  407b69:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_GREEN_LEDS);
  407b6d:	be 66 61 00 00       	mov    $0x6166,%esi
  407b72:	e8 89 a7 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407b77:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407b7c:	89 ef                	mov    %ebp,%edi
  407b7e:	ba 04 00 00 00       	mov    $0x4,%edx
  407b83:	e8 58 a5 ff ff       	call   4020e0 <write@plt>
}
  407b88:	48 83 c4 10          	add    $0x10,%rsp
  407b8c:	5d                   	pop    %rbp
  407b8d:	c3                   	ret    
  407b8e:	66 90                	xchg   %ax,%ax

0000000000407b90 <_Z11writeRedLedij>:
{
  407b90:	55                   	push   %rbp
	ioctl(fd, WR_RED_LEDS);
  407b91:	31 c0                	xor    %eax,%eax
{
  407b93:	89 fd                	mov    %edi,%ebp
  407b95:	48 83 ec 10          	sub    $0x10,%rsp
  407b99:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, WR_RED_LEDS);
  407b9d:	be 65 61 00 00       	mov    $0x6165,%esi
  407ba2:	e8 59 a7 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407ba7:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407bac:	89 ef                	mov    %ebp,%edi
  407bae:	ba 04 00 00 00       	mov    $0x4,%edx
  407bb3:	e8 28 a5 ff ff       	call   4020e0 <write@plt>
}
  407bb8:	48 83 c4 10          	add    $0x10,%rsp
  407bbc:	5d                   	pop    %rbp
  407bbd:	c3                   	ret    
  407bbe:	66 90                	xchg   %ax,%ax

0000000000407bc0 <_Z10readButtonij>:
{
  407bc0:	55                   	push   %rbp
	ioctl(fd, RD_PBUTTONS);
  407bc1:	31 c0                	xor    %eax,%eax
{
  407bc3:	89 fd                	mov    %edi,%ebp
  407bc5:	48 83 ec 10          	sub    $0x10,%rsp
  407bc9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, RD_PBUTTONS);
  407bcd:	be 62 61 00 00       	mov    $0x6162,%esi
  407bd2:	e8 29 a7 ff ff       	call   402300 <ioctl@plt>
	read(fd, &data, 1);
  407bd7:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407bdc:	89 ef                	mov    %ebp,%edi
  407bde:	ba 01 00 00 00       	mov    $0x1,%edx
  407be3:	e8 48 a7 ff ff       	call   402330 <read@plt>
}
  407be8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  407bec:	48 83 c4 10          	add    $0x10,%rsp
  407bf0:	5d                   	pop    %rbp
  407bf1:	c3                   	ret    
  407bf2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407bf9:	00 00 00 00 
  407bfd:	0f 1f 00             	nopl   (%rax)

0000000000407c00 <_Z10readSwitchij>:
{
  407c00:	55                   	push   %rbp
	ioctl(fd, RD_SWITCHES);
  407c01:	31 c0                	xor    %eax,%eax
{
  407c03:	89 fd                	mov    %edi,%ebp
  407c05:	48 83 ec 10          	sub    $0x10,%rsp
  407c09:	89 74 24 0c          	mov    %esi,0xc(%rsp)
	ioctl(fd, RD_SWITCHES);
  407c0d:	be 61 61 00 00       	mov    $0x6161,%esi
  407c12:	e8 e9 a6 ff ff       	call   402300 <ioctl@plt>
	read(fd, &data, 3);
  407c17:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  407c1c:	89 ef                	mov    %ebp,%edi
  407c1e:	ba 03 00 00 00       	mov    $0x3,%edx
  407c23:	e8 08 a7 ff ff       	call   402330 <read@plt>
}
  407c28:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  407c2c:	48 83 c4 10          	add    $0x10,%rsp
  407c30:	5d                   	pop    %rbp
  407c31:	c3                   	ret    
  407c32:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407c39:	00 00 00 00 
  407c3d:	0f 1f 00             	nopl   (%rax)

0000000000407c40 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_>:
{
  407c40:	41 56                	push   %r14
  407c42:	49 89 d6             	mov    %rdx,%r14
  407c45:	41 55                	push   %r13
  407c47:	49 89 f5             	mov    %rsi,%r13
  407c4a:	41 54                	push   %r12
  407c4c:	55                   	push   %rbp
  407c4d:	89 fd                	mov    %edi,%ebp
  407c4f:	53                   	push   %rbx
  407c50:	48 83 ec 40          	sub    $0x40,%rsp
	bit_string += char_to_stringbit(sec_string[0]);
  407c54:	48 8b 02             	mov    (%rdx),%rax
	: allocator_type(__a), _M_p(__dat) { }
  407c57:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  407c5c:	c6 44 24 10 00       	movb   $0x0,0x10(%rsp)
  407c61:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  407c66:	48 89 1c 24          	mov    %rbx,(%rsp)
      { _M_string_length = __length; }
  407c6a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  407c71:	00 00 
  407c73:	0f be 30             	movsbl (%rax),%esi
  407c76:	e8 55 fd ff ff       	call   4079d0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  407c7b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  407c80:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  407c85:	48 89 e7             	mov    %rsp,%rdi
  407c88:	e8 03 a4 ff ff       	call   402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  407c8d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  407c92:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
  407c97:	4c 39 e7             	cmp    %r12,%rdi
  407c9a:	74 0e                	je     407caa <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x6a>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  407c9c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  407ca1:	48 8d 70 01          	lea    0x1(%rax),%rsi
  407ca5:	e8 76 a5 ff ff       	call   402220 <_ZdlPvm@plt>
	bit_string += char_to_stringbit(sec_string[1]);
  407caa:	49 8b 06             	mov    (%r14),%rax
  407cad:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  407cb2:	0f be 70 01          	movsbl 0x1(%rax),%esi
  407cb6:	e8 15 fd ff ff       	call   4079d0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  407cbb:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  407cc0:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  407cc5:	48 89 e7             	mov    %rsp,%rdi
  407cc8:	e8 c3 a3 ff ff       	call   402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  407ccd:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  407cd2:	4c 39 e7             	cmp    %r12,%rdi
  407cd5:	74 0e                	je     407ce5 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0xa5>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  407cd7:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  407cdc:	48 8d 70 01          	lea    0x1(%rax),%rsi
  407ce0:	e8 3b a5 ff ff       	call   402220 <_ZdlPvm@plt>
	bit_string += char_to_stringbit(min_string[0]);
  407ce5:	49 8b 45 00          	mov    0x0(%r13),%rax
  407ce9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  407cee:	0f be 30             	movsbl (%rax),%esi
  407cf1:	e8 da fc ff ff       	call   4079d0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  407cf6:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  407cfb:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  407d00:	48 89 e7             	mov    %rsp,%rdi
  407d03:	e8 88 a3 ff ff       	call   402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  407d08:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  407d0d:	4c 39 e7             	cmp    %r12,%rdi
  407d10:	74 0e                	je     407d20 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0xe0>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  407d12:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  407d17:	48 8d 70 01          	lea    0x1(%rax),%rsi
  407d1b:	e8 00 a5 ff ff       	call   402220 <_ZdlPvm@plt>
	bit_string += char_to_stringbit(min_string[1]);
  407d20:	49 8b 45 00          	mov    0x0(%r13),%rax
  407d24:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  407d29:	0f be 70 01          	movsbl 0x1(%rax),%esi
  407d2d:	e8 9e fc ff ff       	call   4079d0 <_Z17char_to_stringbitB5cxx11c>
      { return _M_append(__str._M_data(), __str.size()); }
  407d32:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  407d37:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  407d3c:	48 89 e7             	mov    %rsp,%rdi
  407d3f:	e8 4c a3 ff ff       	call   402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
      { return _M_dataplus._M_p; }
  407d44:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  407d49:	4c 39 e7             	cmp    %r12,%rdi
  407d4c:	74 0e                	je     407d5c <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x11c>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  407d4e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  407d53:	48 8d 70 01          	lea    0x1(%rax),%rsi
  407d57:	e8 c4 a4 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_string_length; }
  407d5c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      { return _M_dataplus._M_p; }
  407d61:	48 8b 04 24          	mov    (%rsp),%rax
    min(const _Tp& __a, const _Tp& __b)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
  407d65:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
  407d69:	0f 85 89 00 00 00    	jne    407df8 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x1b8>
  407d6f:	b9 20 00 00 00       	mov    $0x20,%ecx
  407d74:	48 83 e9 01          	sub    $0x1,%rcx
    {
      typedef unsigned long _WordT;
      _WordT _M_w;

      _GLIBCXX_CONSTEXPR _Base_bitset() _GLIBCXX_NOEXCEPT
      : _M_w(0)
  407d78:	31 f6                	xor    %esi,%esi
      _S_whichbit(size_t __pos) _GLIBCXX_NOEXCEPT
      {  return __pos % _GLIBCXX_BITSET_BITS_PER_WORD; }

      static _GLIBCXX_CONSTEXPR _WordT
      _S_maskbit(size_t __pos) _GLIBCXX_NOEXCEPT
      { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }
  407d7a:	bf 01 00 00 00       	mov    $0x1,%edi
  407d7f:	eb 0a                	jmp    407d8b <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x14b>
  407d81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  407d88:	48 89 d1             	mov    %rdx,%rcx
      {
	reset();
	const size_t __nbits = std::min(_Nb, std::min(__n, size_t(__len - __pos)));
	for (size_t __i = __nbits; __i > 0; --__i)
	  {
	    const _CharT __c = __s[__pos + __nbits - __i];
  407d8b:	0f b6 10             	movzbl (%rax),%edx
	    if (_Traits::eq(__c, __zero))
  407d8e:	80 fa 30             	cmp    $0x30,%dl
  407d91:	74 0e                	je     407da1 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x161>
	      ;
	    else if (_Traits::eq(__c, __one))
  407d93:	80 fa 31             	cmp    $0x31,%dl
  407d96:	75 77                	jne    407e0f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x1cf>
      { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }
  407d98:	48 89 fa             	mov    %rdi,%rdx
  407d9b:	48 d3 e2             	shl    %cl,%rdx
	this->_M_getword(__pos) |= _Base::_S_maskbit(__pos);
  407d9e:	48 09 d6             	or     %rdx,%rsi
	for (size_t __i = __nbits; __i > 0; --__i)
  407da1:	48 83 c0 01          	add    $0x1,%rax
  407da5:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
  407da9:	48 85 c9             	test   %rcx,%rcx
  407dac:	75 da                	jne    407d88 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x148>
	writeLDisplay(fd, data);
  407dae:	89 74 24 20          	mov    %esi,0x20(%rsp)
	ioctl(fd, WR_L_DISPLAY);
  407db2:	89 ef                	mov    %ebp,%edi
  407db4:	be 63 61 00 00       	mov    $0x6163,%esi
  407db9:	31 c0                	xor    %eax,%eax
  407dbb:	e8 40 a5 ff ff       	call   402300 <ioctl@plt>
	write(fd, &data, sizeof(data));
  407dc0:	ba 04 00 00 00       	mov    $0x4,%edx
  407dc5:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
  407dca:	89 ef                	mov    %ebp,%edi
  407dcc:	e8 0f a3 ff ff       	call   4020e0 <write@plt>
  407dd1:	48 8b 3c 24          	mov    (%rsp),%rdi
	if (!_M_is_local())
  407dd5:	48 39 df             	cmp    %rbx,%rdi
  407dd8:	74 0e                	je     407de8 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x1a8>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  407dda:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  407ddf:	48 8d 70 01          	lea    0x1(%rax),%rsi
  407de3:	e8 38 a4 ff ff       	call   402220 <_ZdlPvm@plt>
}
  407de8:	48 83 c4 40          	add    $0x40,%rsp
  407dec:	5b                   	pop    %rbx
  407ded:	5d                   	pop    %rbp
  407dee:	41 5c                	pop    %r12
  407df0:	41 5d                	pop    %r13
  407df2:	41 5e                	pop    %r14
  407df4:	c3                   	ret    
  407df5:	0f 1f 00             	nopl   (%rax)
  407df8:	48 83 f9 1f          	cmp    $0x1f,%rcx
  407dfc:	0f 87 6d ff ff ff    	ja     407d6f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x12f>
  407e02:	48 85 c9             	test   %rcx,%rcx
  407e05:	0f 85 69 ff ff ff    	jne    407d74 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x134>
  407e0b:	31 f6                	xor    %esi,%esi
  407e0d:	eb 9f                	jmp    407dae <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x16e>
	      _Unchecked_set(__i - 1);
	    else
	      __throw_invalid_argument(__N("bitset::_M_copy_from_ptr"));
  407e0f:	bf 6a 90 40 00       	mov    $0x40906a,%edi
  407e14:	e8 27 a3 ff ff       	call   402140 <_ZSt24__throw_invalid_argumentPKc@plt>
      { return _M_dataplus._M_p; }
  407e19:	48 89 c5             	mov    %rax,%rbp
  407e1c:	e9 ee a6 ff ff       	jmp    40250f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold>
  407e21:	48 89 c5             	mov    %rax,%rbp
  407e24:	e9 1d a7 ff ff       	jmp    402546 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x37>
  407e29:	48 89 c5             	mov    %rax,%rbp
  407e2c:	e9 2f a7 ff ff       	jmp    402560 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x51>
  407e31:	48 89 c5             	mov    %rax,%rbp
  407e34:	e9 46 a7 ff ff       	jmp    40257f <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x70>
  407e39:	48 89 c5             	mov    %rax,%rbp
  407e3c:	e9 e6 a6 ff ff       	jmp    402527 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold+0x18>
  407e41:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  407e48:	00 00 00 00 
  407e4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407e50 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_>:
{
  407e50:	41 57                	push   %r15
  407e52:	41 56                	push   %r14
  407e54:	41 55                	push   %r13
  407e56:	49 89 cd             	mov    %rcx,%r13
  407e59:	41 54                	push   %r12
  407e5b:	49 89 d4             	mov    %rdx,%r12
  407e5e:	55                   	push   %rbp
  407e5f:	53                   	push   %rbx
  407e60:	48 63 de             	movslq %esi,%rbx
  407e63:	49 89 d8             	mov    %rbx,%r8
	unsigned int minutes = number / 60;
  407e66:	48 69 db 89 88 88 88 	imul   $0xffffffff88888889,%rbx,%rbx
  407e6d:	44 89 c0             	mov    %r8d,%eax
  407e70:	c1 f8 1f             	sar    $0x1f,%eax
{
  407e73:	48 83 ec 68          	sub    $0x68,%rsp
	unsigned int minutes = number / 60;
  407e77:	48 c1 eb 20          	shr    $0x20,%rbx
{
  407e7b:	89 7c 24 04          	mov    %edi,0x4(%rsp)
	unsigned int minutes = number / 60;
  407e7f:	44 01 c3             	add    %r8d,%ebx
  407e82:	c1 fb 05             	sar    $0x5,%ebx
  407e85:	29 c3                	sub    %eax,%ebx
	unsigned int seconds = number % 60;
  407e87:	6b c3 3c             	imul   $0x3c,%ebx,%eax
  407e8a:	41 29 c0             	sub    %eax,%r8d
	if (seconds < 10)
  407e8d:	41 83 f8 09          	cmp    $0x9,%r8d
  407e91:	0f 87 09 02 00 00    	ja     4080a0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x250>
	: allocator_type(__a), _M_p(__dat) { }
  407e97:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
      { _M_construct(__n, __c); }
  407e9c:	31 d2                	xor    %edx,%edx
  407e9e:	be 01 00 00 00       	mov    $0x1,%esi
  407ea3:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
  407ea8:	4c 89 ff             	mov    %r15,%rdi
	: allocator_type(__a), _M_p(__dat) { }
  407eab:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
  407eb0:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  407eb5:	e8 d6 a3 ff ff       	call   402290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
	  auto const __num = __val * 2;
	  __first[1] = __digits[__num + 1];
	  __first[0] = __digits[__num];
	}
      else
	__first[0] = '0' + __val;
  407eba:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
      basic_string&
      replace(size_type __pos, size_type __n1, const _CharT* __s,
	      size_type __n2)
      {
	__glibcxx_requires_string_len(__s, __n2);
	return _M_replace(_M_check(__pos, "basic_string::replace"),
  407ebf:	31 d2                	xor    %edx,%edx
  407ec1:	31 f6                	xor    %esi,%esi
  407ec3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  407ec8:	b9 5f 90 40 00       	mov    $0x40905f,%ecx
  407ecd:	4c 89 ff             	mov    %r15,%rdi
  407ed0:	41 83 c0 30          	add    $0x30,%r8d
  407ed4:	44 88 00             	mov    %r8b,(%rax)
  407ed7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  407edd:	e8 be a4 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  407ee2:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  407ee7:	48 8d 50 10          	lea    0x10(%rax),%rdx
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  407eeb:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      { return _M_dataplus._M_p; }
  407ef0:	48 8b 08             	mov    (%rax),%rcx
	if (__str._M_is_local())
  407ef3:	48 39 d1             	cmp    %rdx,%rcx
  407ef6:	0f 84 d4 06 00 00    	je     4085d0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x780>
      { _M_dataplus._M_p = __p; }
  407efc:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
	    _M_capacity(__str._M_allocated_capacity);
  407f01:	48 8b 48 10          	mov    0x10(%rax),%rcx
      { _M_allocated_capacity = __capacity; }
  407f05:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
      { return _M_string_length; }
  407f0a:	48 8b 48 08          	mov    0x8(%rax),%rcx
      { _M_string_length = __length; }
  407f0e:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
      { _M_dataplus._M_p = __p; }
  407f13:	48 89 10             	mov    %rdx,(%rax)
  407f16:	c6 40 10 00          	movb   $0x0,0x10(%rax)
      { return _M_dataplus._M_p; }
  407f1a:	49 8b 7d 00          	mov    0x0(%r13),%rdi
      { _M_string_length = __length; }
  407f1e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  407f25:	00 
      { return _M_dataplus._M_p; }
  407f26:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
	if (__str._M_is_local())
  407f2b:	48 39 e8             	cmp    %rbp,%rax
  407f2e:	0f 84 ac 06 00 00    	je     4085e0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x790>
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  407f34:	49 8d 55 10          	lea    0x10(%r13),%rdx
      { return _M_string_length; }
  407f38:	f3 0f 6f 44 24 48    	movdqu 0x48(%rsp),%xmm0
	    if (!_M_is_local())
  407f3e:	48 39 d7             	cmp    %rdx,%rdi
  407f41:	0f 84 09 07 00 00    	je     408650 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x800>
		    __capacity = _M_allocated_capacity;
  407f47:	49 8b 55 10          	mov    0x10(%r13),%rdx
      { _M_dataplus._M_p = __p; }
  407f4b:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  407f4f:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
	    if (__data)
  407f54:	48 85 ff             	test   %rdi,%rdi
  407f57:	0f 84 fc 06 00 00    	je     408659 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x809>
      { _M_dataplus._M_p = __p; }
  407f5d:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
      { _M_allocated_capacity = __capacity; }
  407f62:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
      { _M_string_length = __length; }
  407f67:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  407f6e:	00 00 
  407f70:	c6 07 00             	movb   $0x0,(%rdi)
      { return _M_dataplus._M_p; }
  407f73:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  407f78:	48 39 ef             	cmp    %rbp,%rdi
  407f7b:	74 0e                	je     407f8b <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x13b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  407f7d:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  407f82:	48 8d 70 01          	lea    0x1(%rax),%rsi
  407f86:	e8 95 a2 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  407f8b:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  407f90:	4c 39 f7             	cmp    %r14,%rdi
  407f93:	74 0e                	je     407fa3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x153>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  407f95:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  407f9a:	48 8d 70 01          	lea    0x1(%rax),%rsi
  407f9e:	e8 7d a2 ff ff       	call   402220 <_ZdlPvm@plt>
	  if (__value < (unsigned)__base) return __n;
  407fa3:	83 fb 09             	cmp    $0x9,%ebx
  407fa6:	0f 86 1e 07 00 00    	jbe    4086ca <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x87a>
	  if (__value < __b2) return __n + 1;
  407fac:	83 fb 63             	cmp    $0x63,%ebx
  407faf:	0f 86 33 07 00 00    	jbe    4086e8 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x898>
	  if (__value < __b3) return __n + 2;
  407fb5:	81 fb e7 03 00 00    	cmp    $0x3e7,%ebx
  407fbb:	0f 86 3b 07 00 00    	jbe    4086fc <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8ac>
	  if (__value < __b4) return __n + 3;
  407fc1:	89 d9                	mov    %ebx,%ecx
  407fc3:	48 89 ca             	mov    %rcx,%rdx
  407fc6:	81 fb 0f 27 00 00    	cmp    $0x270f,%ebx
  407fcc:	0f 86 20 07 00 00    	jbe    4086f2 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8a2>
	  __value /= __b4;
  407fd2:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
  407fd9:	c5 6d 34 
      unsigned __n = 1;
  407fdc:	be 01 00 00 00       	mov    $0x1,%esi
  407fe1:	eb 26                	jmp    408009 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1b9>
  407fe3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	  if (__value < __b2) return __n + 1;
  407fe8:	83 fa 63             	cmp    $0x63,%edx
  407feb:	0f 86 ef 03 00 00    	jbe    4083e0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x590>
	  if (__value < __b3) return __n + 2;
  407ff1:	81 fa e7 03 00 00    	cmp    $0x3e7,%edx
  407ff7:	0f 86 8b 05 00 00    	jbe    408588 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x738>
	  if (__value < __b4) return __n + 3;
  407ffd:	81 fa 0f 27 00 00    	cmp    $0x270f,%edx
  408003:	0f 86 87 05 00 00    	jbe    408590 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x740>
	  __value /= __b4;
  408009:	48 89 d0             	mov    %rdx,%rax
  40800c:	48 89 d7             	mov    %rdx,%rdi
  40800f:	49 f7 e0             	mul    %r8
  408012:	89 f0                	mov    %esi,%eax
	  __n += 4;
  408014:	83 c6 04             	add    $0x4,%esi
	  __value /= __b4;
  408017:	48 c1 ea 0b          	shr    $0xb,%rdx
	  if (__value < (unsigned)__base) return __n;
  40801b:	48 81 ff 9f 86 01 00 	cmp    $0x1869f,%rdi
  408022:	77 c4                	ja     407fe8 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x198>
      { _M_construct(__n, __c); }
  408024:	4c 89 ff             	mov    %r15,%rdi
  408027:	31 d2                	xor    %edx,%edx
  408029:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
	: allocator_type(__a), _M_p(__dat) { }
  40802e:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  408033:	e8 58 a2 ff ff       	call   402290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      unsigned __pos = __len - 1;
  408038:	8b 44 24 28          	mov    0x28(%rsp),%eax
      { return _M_dataplus._M_p; }
  40803c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    __to_chars_10_impl(char* __first, unsigned __len, _Tp __val) noexcept
  408041:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      unsigned __pos = __len - 1;
  408046:	8d 70 ff             	lea    -0x1(%rax),%esi
      while (__val >= 100)
  408049:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	  auto const __num = (__val % 100) * 2;
  408050:	48 69 d1 1f 85 eb 51 	imul   $0x51eb851f,%rcx,%rdx
  408057:	89 d8                	mov    %ebx,%eax
  408059:	48 c1 ea 25          	shr    $0x25,%rdx
  40805d:	6b ca 64             	imul   $0x64,%edx,%ecx
  408060:	29 c8                	sub    %ecx,%eax
  408062:	89 d9                	mov    %ebx,%ecx
	  __val /= 100;
  408064:	89 d3                	mov    %edx,%ebx
	  __first[__pos] = __digits[__num + 1];
  408066:	89 f2                	mov    %esi,%edx
	  auto const __num = (__val % 100) * 2;
  408068:	01 c0                	add    %eax,%eax
	  __first[__pos] = __digits[__num + 1];
  40806a:	44 8d 40 01          	lea    0x1(%rax),%r8d
	  __first[__pos - 1] = __digits[__num];
  40806e:	0f b6 80 00 96 40 00 	movzbl 0x409600(%rax),%eax
	  __first[__pos] = __digits[__num + 1];
  408075:	45 0f b6 80 00 96 40 	movzbl 0x409600(%r8),%r8d
  40807c:	00 
  40807d:	44 88 04 17          	mov    %r8b,(%rdi,%rdx,1)
	  __first[__pos - 1] = __digits[__num];
  408081:	8d 56 ff             	lea    -0x1(%rsi),%edx
	  __pos -= 2;
  408084:	83 ee 02             	sub    $0x2,%esi
	  __first[__pos - 1] = __digits[__num];
  408087:	88 04 17             	mov    %al,(%rdi,%rdx,1)
      while (__val >= 100)
  40808a:	81 f9 0f 27 00 00    	cmp    $0x270f,%ecx
  408090:	0f 86 72 01 00 00    	jbe    408208 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3b8>
  408096:	89 d9                	mov    %ebx,%ecx
  408098:	eb b6                	jmp    408050 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x200>
  40809a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4080a0:	45 89 c6             	mov    %r8d,%r14d
  4080a3:	44 89 c1             	mov    %r8d,%ecx
      unsigned __n = 1;
  4080a6:	be 01 00 00 00       	mov    $0x1,%esi
	  __value /= __b4;
  4080ab:	48 bf 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%rdi
  4080b2:	c5 6d 34 
  4080b5:	eb 0b                	jmp    4080c2 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x272>
  4080b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4080be:	00 00 
  4080c0:	89 d1                	mov    %edx,%ecx
	  if (__value < __b2) return __n + 1;
  4080c2:	83 f9 63             	cmp    $0x63,%ecx
  4080c5:	0f 86 55 05 00 00    	jbe    408620 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7d0>
	  if (__value < __b3) return __n + 2;
  4080cb:	81 f9 e7 03 00 00    	cmp    $0x3e7,%ecx
  4080d1:	0f 86 59 05 00 00    	jbe    408630 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7e0>
	  if (__value < __b4) return __n + 3;
  4080d7:	89 ca                	mov    %ecx,%edx
  4080d9:	81 f9 0f 27 00 00    	cmp    $0x270f,%ecx
  4080df:	0f 86 5b 05 00 00    	jbe    408640 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7f0>
	  __value /= __b4;
  4080e5:	48 89 d0             	mov    %rdx,%rax
	  __n += 4;
  4080e8:	83 c6 04             	add    $0x4,%esi
	  __value /= __b4;
  4080eb:	48 f7 e7             	mul    %rdi
  4080ee:	48 c1 ea 0b          	shr    $0xb,%rdx
	  if (__value < (unsigned)__base) return __n;
  4080f2:	81 f9 9f 86 01 00    	cmp    $0x1869f,%ecx
  4080f8:	77 c6                	ja     4080c0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x270>
	: allocator_type(__a), _M_p(__dat) { }
  4080fa:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
      { _M_construct(__n, __c); }
  4080ff:	31 d2                	xor    %edx,%edx
  408101:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  408106:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
	: allocator_type(__a), _M_p(__dat) { }
  40810b:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      { _M_construct(__n, __c); }
  408110:	e8 7b a1 ff ff       	call   402290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      unsigned __pos = __len - 1;
  408115:	8b 44 24 48          	mov    0x48(%rsp),%eax
      while (__val >= 100)
  408119:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
      { return _M_dataplus._M_p; }
  40811e:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
      unsigned __pos = __len - 1;
  408123:	8d 70 ff             	lea    -0x1(%rax),%esi
      while (__val >= 100)
  408126:	41 83 f8 63          	cmp    $0x63,%r8d
  40812a:	0f 86 f0 03 00 00    	jbe    408520 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6d0>
	  auto const __num = (__val % 100) * 2;
  408130:	44 89 f2             	mov    %r14d,%edx
  408133:	44 89 f0             	mov    %r14d,%eax
  408136:	48 69 d2 1f 85 eb 51 	imul   $0x51eb851f,%rdx,%rdx
  40813d:	48 c1 ea 25          	shr    $0x25,%rdx
  408141:	6b fa 64             	imul   $0x64,%edx,%edi
  408144:	29 f8                	sub    %edi,%eax
  408146:	44 89 f7             	mov    %r14d,%edi
	  __val /= 100;
  408149:	41 89 d6             	mov    %edx,%r14d
	  __first[__pos] = __digits[__num + 1];
  40814c:	89 f2                	mov    %esi,%edx
	  auto const __num = (__val % 100) * 2;
  40814e:	01 c0                	add    %eax,%eax
	  __first[__pos] = __digits[__num + 1];
  408150:	44 8d 40 01          	lea    0x1(%rax),%r8d
	  __first[__pos - 1] = __digits[__num];
  408154:	0f b6 80 00 96 40 00 	movzbl 0x409600(%rax),%eax
	  __first[__pos] = __digits[__num + 1];
  40815b:	45 0f b6 80 00 96 40 	movzbl 0x409600(%r8),%r8d
  408162:	00 
  408163:	44 88 04 11          	mov    %r8b,(%rcx,%rdx,1)
	  __first[__pos - 1] = __digits[__num];
  408167:	8d 56 ff             	lea    -0x1(%rsi),%edx
	  __pos -= 2;
  40816a:	83 ee 02             	sub    $0x2,%esi
	  __first[__pos - 1] = __digits[__num];
  40816d:	88 04 11             	mov    %al,(%rcx,%rdx,1)
      while (__val >= 100)
  408170:	81 ff 0f 27 00 00    	cmp    $0x270f,%edi
  408176:	77 b8                	ja     408130 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2e0>
	__first[0] = '0' + __val;
  408178:	41 8d 46 30          	lea    0x30(%r14),%eax
      if (__val >= 10)
  40817c:	81 ff e7 03 00 00    	cmp    $0x3e7,%edi
  408182:	0f 87 98 03 00 00    	ja     408520 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6d0>
  408188:	88 01                	mov    %al,(%rcx)
  40818a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  40818f:	49 8b 7d 00          	mov    0x0(%r13),%rdi
	if (__str._M_is_local())
  408193:	48 39 e8             	cmp    %rbp,%rax
  408196:	0f 84 b1 03 00 00    	je     40854d <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6fd>
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  40819c:	49 8d 55 10          	lea    0x10(%r13),%rdx
      { return _M_string_length; }
  4081a0:	f3 0f 6f 44 24 48    	movdqu 0x48(%rsp),%xmm0
	    if (!_M_is_local())
  4081a6:	48 39 d7             	cmp    %rdx,%rdi
  4081a9:	0f 84 c1 04 00 00    	je     408670 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x820>
		    __capacity = _M_allocated_capacity;
  4081af:	49 8b 55 10          	mov    0x10(%r13),%rdx
      { _M_dataplus._M_p = __p; }
  4081b3:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  4081b7:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
	    if (__data)
  4081bc:	48 85 ff             	test   %rdi,%rdi
  4081bf:	0f 84 b4 04 00 00    	je     408679 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x829>
      { _M_dataplus._M_p = __p; }
  4081c5:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
      { _M_allocated_capacity = __capacity; }
  4081ca:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
      { _M_string_length = __length; }
  4081cf:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  4081d6:	00 00 
  4081d8:	c6 07 00             	movb   $0x0,(%rdi)
      { return _M_dataplus._M_p; }
  4081db:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  4081e0:	48 39 ef             	cmp    %rbp,%rdi
  4081e3:	74 0e                	je     4081f3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3a3>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4081e5:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  4081ea:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4081ee:	e8 2d a0 ff ff       	call   402220 <_ZdlPvm@plt>
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  4081f3:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
  4081f8:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
  4081fd:	e9 a1 fd ff ff       	jmp    407fa3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x153>
  408202:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  408208:	81 f9 e7 03 00 00    	cmp    $0x3e7,%ecx
  40820e:	0f 87 ec 01 00 00    	ja     408400 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x5b0>
	__first[0] = '0' + __val;
  408214:	83 c3 30             	add    $0x30,%ebx
  408217:	88 1f                	mov    %bl,(%rdi)
	return _M_replace(_M_check(__pos, "basic_string::replace"),
  408219:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  40821f:	b9 5f 90 40 00       	mov    $0x40905f,%ecx
  408224:	31 d2                	xor    %edx,%edx
  408226:	31 f6                	xor    %esi,%esi
  408228:	4c 89 ff             	mov    %r15,%rdi
  40822b:	e8 70 a1 ff ff       	call   4023a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  408230:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
      { return _M_dataplus._M_p; }
  408235:	48 8b 08             	mov    (%rax),%rcx
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  408238:	48 8d 50 10          	lea    0x10(%rax),%rdx
	if (__str._M_is_local())
  40823c:	48 39 d1             	cmp    %rdx,%rcx
  40823f:	0f 84 8b 02 00 00    	je     4084d0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x680>
      { _M_dataplus._M_p = __p; }
  408245:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
	    _M_capacity(__str._M_allocated_capacity);
  40824a:	48 8b 48 10          	mov    0x10(%rax),%rcx
      { _M_allocated_capacity = __capacity; }
  40824e:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
      { return _M_string_length; }
  408253:	48 8b 48 08          	mov    0x8(%rax),%rcx
      { _M_string_length = __length; }
  408257:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
      { _M_dataplus._M_p = __p; }
  40825c:	48 89 10             	mov    %rdx,(%rax)
  40825f:	c6 40 10 00          	movb   $0x0,0x10(%rax)
      { return _M_dataplus._M_p; }
  408263:	49 8b 3c 24          	mov    (%r12),%rdi
      { _M_string_length = __length; }
  408267:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  40826e:	00 
      { return _M_dataplus._M_p; }
  40826f:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
	if (__str._M_is_local())
  408274:	48 39 e8             	cmp    %rbp,%rax
  408277:	0f 84 63 02 00 00    	je     4084e0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x690>
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  40827d:	49 8d 54 24 10       	lea    0x10(%r12),%rdx
      { return _M_string_length; }
  408282:	f3 0f 6f 44 24 48    	movdqu 0x48(%rsp),%xmm0
	    if (!_M_is_local())
  408288:	48 39 d7             	cmp    %rdx,%rdi
  40828b:	0f 84 0f 03 00 00    	je     4085a0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x750>
		    __capacity = _M_allocated_capacity;
  408291:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
      { _M_dataplus._M_p = __p; }
  408296:	49 89 04 24          	mov    %rax,(%r12)
      { _M_string_length = __length; }
  40829a:	41 0f 11 44 24 08    	movups %xmm0,0x8(%r12)
	    if (__data)
  4082a0:	48 85 ff             	test   %rdi,%rdi
  4082a3:	0f 84 01 03 00 00    	je     4085aa <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x75a>
      { _M_dataplus._M_p = __p; }
  4082a9:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
      { _M_allocated_capacity = __capacity; }
  4082ae:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
      { _M_string_length = __length; }
  4082b3:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  4082ba:	00 00 
  4082bc:	c6 07 00             	movb   $0x0,(%rdi)
      { return _M_dataplus._M_p; }
  4082bf:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  4082c4:	48 39 ef             	cmp    %rbp,%rdi
  4082c7:	74 0e                	je     4082d7 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x487>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4082c9:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  4082ce:	48 8d 70 01          	lea    0x1(%rax),%rsi
	::operator delete(__p
  4082d2:	e8 49 9f ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4082d7:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  4082dc:	4c 39 f7             	cmp    %r14,%rdi
  4082df:	74 0e                	je     4082ef <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x49f>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4082e1:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4082e6:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4082ea:	e8 31 9f ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4082ef:	49 8b 1c 24          	mov    (%r12),%rbx
      { return _M_string_length; }
  4082f3:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  4082f8:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
  4082fd:	48 89 d8             	mov    %rbx,%rax
  408300:	4c 01 e0             	add    %r12,%rax
  408303:	74 09                	je     40830e <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x4be>
  408305:	48 85 db             	test   %rbx,%rbx
  408308:	0f 84 fa 03 00 00    	je     408708 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8b8>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  40830e:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
	if (__dnew > size_type(_S_local_capacity))
  408313:	49 83 fc 0f          	cmp    $0xf,%r12
  408317:	0f 87 33 01 00 00    	ja     408450 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x600>
	if (__n == 1)
  40831d:	49 83 fc 01          	cmp    $0x1,%r12
  408321:	0f 85 f9 00 00 00    	jne    408420 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x5d0>
  408327:	0f b6 03             	movzbl (%rbx),%eax
  40832a:	88 44 24 50          	mov    %al,0x50(%rsp)
  40832e:	48 89 e8             	mov    %rbp,%rax
      { _M_string_length = __length; }
  408331:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
  408336:	42 c6 04 20 00       	movb   $0x0,(%rax,%r12,1)
      { return _M_dataplus._M_p; }
  40833b:	4d 8b 65 00          	mov    0x0(%r13),%r12
      { return _M_string_length; }
  40833f:	4d 8b 6d 08          	mov    0x8(%r13),%r13
	: allocator_type(std::move(__a)), _M_p(__dat) { }
  408343:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
  408348:	4c 89 e0             	mov    %r12,%rax
  40834b:	4c 01 e8             	add    %r13,%rax
  40834e:	74 09                	je     408359 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x509>
  408350:	4d 85 e4             	test   %r12,%r12
  408353:	0f 84 b9 03 00 00    	je     408712 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8c2>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  408359:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
	if (__dnew > size_type(_S_local_capacity))
  40835e:	49 83 fd 0f          	cmp    $0xf,%r13
  408362:	0f 87 28 01 00 00    	ja     408490 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x640>
	if (__n == 1)
  408368:	49 83 fd 01          	cmp    $0x1,%r13
  40836c:	0f 85 c6 00 00 00    	jne    408438 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x5e8>
  408372:	41 0f b6 04 24       	movzbl (%r12),%eax
  408377:	88 44 24 30          	mov    %al,0x30(%rsp)
  40837b:	4c 89 f0             	mov    %r14,%rax
      { _M_string_length = __length; }
  40837e:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
	string_to_display(fd, sec_string, min_string);
  408383:	8b 7c 24 04          	mov    0x4(%rsp),%edi
  408387:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  40838c:	4c 89 fe             	mov    %r15,%rsi
  40838f:	42 c6 04 28 00       	movb   $0x0,(%rax,%r13,1)
  408394:	e8 a7 f8 ff ff       	call   407c40 <_Z17string_to_displayiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_>
      { return _M_dataplus._M_p; }
  408399:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
	if (!_M_is_local())
  40839e:	4c 39 f7             	cmp    %r14,%rdi
  4083a1:	74 0e                	je     4083b1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x561>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4083a3:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4083a8:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4083ac:	e8 6f 9e ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4083b1:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
	if (!_M_is_local())
  4083b6:	48 39 ef             	cmp    %rbp,%rdi
  4083b9:	74 0e                	je     4083c9 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x579>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4083bb:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  4083c0:	48 8d 70 01          	lea    0x1(%rax),%rsi
  4083c4:	e8 57 9e ff ff       	call   402220 <_ZdlPvm@plt>
}
  4083c9:	48 83 c4 68          	add    $0x68,%rsp
  4083cd:	5b                   	pop    %rbx
  4083ce:	5d                   	pop    %rbp
  4083cf:	41 5c                	pop    %r12
  4083d1:	41 5d                	pop    %r13
  4083d3:	41 5e                	pop    %r14
  4083d5:	41 5f                	pop    %r15
  4083d7:	c3                   	ret    
  4083d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4083df:	00 
  }

  inline string
  to_string(unsigned __val)
  {
    string __str(__detail::__to_chars_len(__val), '\0');
  4083e0:	8d 70 05             	lea    0x5(%rax),%esi
      { _M_construct(__n, __c); }
  4083e3:	4c 89 ff             	mov    %r15,%rdi
  4083e6:	31 d2                	xor    %edx,%edx
	: allocator_type(__a), _M_p(__dat) { }
  4083e8:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  4083ed:	e8 9e 9e ff ff       	call   402290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      { return _M_dataplus._M_p; }
  4083f2:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
      while (__val >= 100)
  4083f7:	83 fb 63             	cmp    $0x63,%ebx
  4083fa:	0f 87 c0 01 00 00    	ja     4085c0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x770>
	  auto const __num = __val * 2;
  408400:	01 db                	add    %ebx,%ebx
	  __first[1] = __digits[__num + 1];
  408402:	8d 43 01             	lea    0x1(%rbx),%eax
	  __first[0] = __digits[__num];
  408405:	0f b6 9b 00 96 40 00 	movzbl 0x409600(%rbx),%ebx
	  __first[1] = __digits[__num + 1];
  40840c:	0f b6 80 00 96 40 00 	movzbl 0x409600(%rax),%eax
  408413:	88 47 01             	mov    %al,0x1(%rdi)
  408416:	e9 fc fd ff ff       	jmp    408217 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3c7>
  40841b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	if (__n == 0)
  408420:	4d 85 e4             	test   %r12,%r12
  408423:	0f 85 fb 02 00 00    	jne    408724 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8d4>
  408429:	48 89 e8             	mov    %rbp,%rax
  40842c:	e9 00 ff ff ff       	jmp    408331 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x4e1>
  408431:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  408438:	4d 85 ed             	test   %r13,%r13
  40843b:	0f 85 db 02 00 00    	jne    40871c <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x8cc>
  408441:	4c 89 f0             	mov    %r14,%rax
  408444:	e9 35 ff ff ff       	jmp    40837e <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x52e>
  408449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    _M_data(_M_create(__dnew, size_type(0)));
  408450:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  408455:	31 d2                	xor    %edx,%edx
  408457:	4c 89 fe             	mov    %r15,%rsi
  40845a:	e8 31 a0 ff ff       	call   402490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  40845f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  408464:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
  408467:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40846c:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  408471:	4c 89 e2             	mov    %r12,%rdx
  408474:	48 89 de             	mov    %rbx,%rsi
  408477:	e8 54 9d ff ff       	call   4021d0 <memcpy@plt>
	_M_set_length(__dnew);
  40847c:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
      { return _M_dataplus._M_p; }
  408481:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  408486:	e9 a6 fe ff ff       	jmp    408331 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x4e1>
  40848b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    _M_data(_M_create(__dnew, size_type(0)));
  408490:	31 d2                	xor    %edx,%edx
  408492:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  408497:	4c 89 ff             	mov    %r15,%rdi
  40849a:	e8 f1 9f ff ff       	call   402490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  40849f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  4084a4:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
  4084a7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4084ac:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  4084b1:	4c 89 ea             	mov    %r13,%rdx
  4084b4:	4c 89 e6             	mov    %r12,%rsi
  4084b7:	e8 14 9d ff ff       	call   4021d0 <memcpy@plt>
	_M_set_length(__dnew);
  4084bc:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
      { return _M_dataplus._M_p; }
  4084c1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  4084c6:	e9 b3 fe ff ff       	jmp    40837e <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x52e>
  4084cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4084d0:	f3 0f 6f 48 10       	movdqu 0x10(%rax),%xmm1
  4084d5:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
  4084da:	e9 74 fd ff ff       	jmp    408253 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x403>
  4084df:	90                   	nop
      { return _M_string_length; }
  4084e0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
		if (__str.size())
  4084e5:	48 85 d2             	test   %rdx,%rdx
  4084e8:	74 1b                	je     408505 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6b5>
	if (__n == 1)
  4084ea:	48 83 fa 01          	cmp    $0x1,%rdx
  4084ee:	0f 84 c1 01 00 00    	je     4086b5 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x865>
  4084f4:	48 89 ee             	mov    %rbp,%rsi
  4084f7:	e8 d4 9c ff ff       	call   4021d0 <memcpy@plt>
      { return _M_string_length; }
  4084fc:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  408501:	49 8b 3c 24          	mov    (%r12),%rdi
      { _M_string_length = __length; }
  408505:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
      { __c1 = __c2; }
  40850a:	c6 04 17 00          	movb   $0x0,(%rdi,%rdx,1)
      { return _M_dataplus._M_p; }
  40850e:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
      }
  408513:	e9 9b fd ff ff       	jmp    4082b3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x463>
  408518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40851f:	00 
	  auto const __num = __val * 2;
  408520:	45 01 f6             	add    %r14d,%r14d
	  __first[1] = __digits[__num + 1];
  408523:	41 8d 46 01          	lea    0x1(%r14),%eax
  408527:	0f b6 80 00 96 40 00 	movzbl 0x409600(%rax),%eax
  40852e:	88 41 01             	mov    %al,0x1(%rcx)
	  __first[0] = __digits[__num];
  408531:	41 0f b6 86 00 96 40 	movzbl 0x409600(%r14),%eax
  408538:	00 
  408539:	88 01                	mov    %al,(%rcx)
      { return _M_dataplus._M_p; }
  40853b:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
  408540:	49 8b 7d 00          	mov    0x0(%r13),%rdi
	if (__str._M_is_local())
  408544:	48 39 e8             	cmp    %rbp,%rax
  408547:	0f 85 4f fc ff ff    	jne    40819c <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x34c>
      { return _M_string_length; }
  40854d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
		if (__str.size())
  408552:	48 85 d2             	test   %rdx,%rdx
  408555:	74 1b                	je     408572 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x722>
	if (__n == 1)
  408557:	48 83 fa 01          	cmp    $0x1,%rdx
  40855b:	0f 84 3f 01 00 00    	je     4086a0 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x850>
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  408561:	48 89 ee             	mov    %rbp,%rsi
  408564:	e8 67 9c ff ff       	call   4021d0 <memcpy@plt>
      { return _M_string_length; }
  408569:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  40856e:	49 8b 7d 00          	mov    0x0(%r13),%rdi
      { _M_string_length = __length; }
  408572:	49 89 55 08          	mov    %rdx,0x8(%r13)
      { __c1 = __c2; }
  408576:	c6 04 17 00          	movb   $0x0,(%rdi,%rdx,1)
      { return _M_dataplus._M_p; }
  40857a:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
      }
  40857f:	e9 4b fc ff ff       	jmp    4081cf <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x37f>
  408584:	0f 1f 40 00          	nopl   0x0(%rax)
    string __str(__detail::__to_chars_len(__val), '\0');
  408588:	8d 70 06             	lea    0x6(%rax),%esi
  40858b:	e9 94 fa ff ff       	jmp    408024 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
  408590:	8d 70 07             	lea    0x7(%rax),%esi
  408593:	e9 8c fa ff ff       	jmp    408024 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
  408598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40859f:	00 
      { _M_dataplus._M_p = __p; }
  4085a0:	49 89 04 24          	mov    %rax,(%r12)
      { _M_string_length = __length; }
  4085a4:	41 0f 11 44 24 08    	movups %xmm0,0x8(%r12)
      { _M_dataplus._M_p = __p; }
  4085aa:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
  4085af:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  4085b4:	48 89 ef             	mov    %rbp,%rdi
  4085b7:	e9 f7 fc ff ff       	jmp    4082b3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x463>
  4085bc:	0f 1f 40 00          	nopl   0x0(%rax)
      unsigned __pos = __len - 1;
  4085c0:	8b 44 24 28          	mov    0x28(%rsp),%eax
  4085c4:	89 d9                	mov    %ebx,%ecx
  4085c6:	8d 70 ff             	lea    -0x1(%rax),%esi
  4085c9:	e9 82 fa ff ff       	jmp    408050 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x200>
  4085ce:	66 90                	xchg   %ax,%ax
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  4085d0:	f3 0f 6f 50 10       	movdqu 0x10(%rax),%xmm2
  4085d5:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
  4085da:	e9 2b f9 ff ff       	jmp    407f0a <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0xba>
  4085df:	90                   	nop
      { return _M_string_length; }
  4085e0:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
		if (__str.size())
  4085e5:	48 85 d2             	test   %rdx,%rdx
  4085e8:	74 1b                	je     408605 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7b5>
	if (__n == 1)
  4085ea:	48 83 fa 01          	cmp    $0x1,%rdx
  4085ee:	0f 84 97 00 00 00    	je     40868b <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x83b>
  4085f4:	48 89 ee             	mov    %rbp,%rsi
  4085f7:	e8 d4 9b ff ff       	call   4021d0 <memcpy@plt>
      { return _M_string_length; }
  4085fc:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  408601:	49 8b 7d 00          	mov    0x0(%r13),%rdi
      { _M_string_length = __length; }
  408605:	49 89 55 08          	mov    %rdx,0x8(%r13)
      { __c1 = __c2; }
  408609:	c6 04 17 00          	movb   $0x0,(%rdi,%rdx,1)
      { return _M_dataplus._M_p; }
  40860d:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
      }
  408612:	e9 50 f9 ff ff       	jmp    407f67 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x117>
  408617:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40861e:	00 00 
	  if (__value < __b2) return __n + 1;
  408620:	83 c6 01             	add    $0x1,%esi
  408623:	e9 d2 fa ff ff       	jmp    4080fa <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2aa>
  408628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40862f:	00 
	  if (__value < __b3) return __n + 2;
  408630:	83 c6 02             	add    $0x2,%esi
  408633:	e9 c2 fa ff ff       	jmp    4080fa <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2aa>
  408638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40863f:	00 
	  if (__value < __b4) return __n + 3;
  408640:	83 c6 03             	add    $0x3,%esi
  408643:	e9 b2 fa ff ff       	jmp    4080fa <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x2aa>
  408648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40864f:	00 
      { _M_dataplus._M_p = __p; }
  408650:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  408654:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
      { _M_dataplus._M_p = __p; }
  408659:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
  40865e:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  408663:	48 89 ef             	mov    %rbp,%rdi
  408666:	e9 fc f8 ff ff       	jmp    407f67 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x117>
  40866b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408670:	49 89 45 00          	mov    %rax,0x0(%r13)
      { _M_string_length = __length; }
  408674:	41 0f 11 45 08       	movups %xmm0,0x8(%r13)
      { _M_dataplus._M_p = __p; }
  408679:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
  40867e:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
  408683:	48 89 ef             	mov    %rbp,%rdi
  408686:	e9 44 fb ff ff       	jmp    4081cf <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x37f>
  40868b:	0f b6 44 24 50       	movzbl 0x50(%rsp),%eax
  408690:	88 07                	mov    %al,(%rdi)
      { return _M_string_length; }
  408692:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  408697:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  40869b:	e9 65 ff ff ff       	jmp    408605 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x7b5>
  4086a0:	0f b6 44 24 50       	movzbl 0x50(%rsp),%eax
  4086a5:	88 07                	mov    %al,(%rdi)
      { return _M_string_length; }
  4086a7:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  4086ac:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  4086b0:	e9 bd fe ff ff       	jmp    408572 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x722>
  4086b5:	0f b6 44 24 50       	movzbl 0x50(%rsp),%eax
  4086ba:	88 07                	mov    %al,(%rdi)
      { return _M_string_length; }
  4086bc:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
      { return _M_dataplus._M_p; }
  4086c1:	49 8b 3c 24          	mov    (%r12),%rdi
  4086c5:	e9 3b fe ff ff       	jmp    408505 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x6b5>
      { _M_construct(__n, __c); }
  4086ca:	4c 89 ff             	mov    %r15,%rdi
  4086cd:	31 d2                	xor    %edx,%edx
  4086cf:	be 01 00 00 00       	mov    $0x1,%esi
	: allocator_type(__a), _M_p(__dat) { }
  4086d4:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
      { _M_construct(__n, __c); }
  4086d9:	e8 b2 9b ff ff       	call   402290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@plt>
      { return _M_dataplus._M_p; }
  4086de:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
      while (__val >= 100)
  4086e3:	e9 2c fb ff ff       	jmp    408214 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x3c4>
	  if (__value < __b2) return __n + 1;
  4086e8:	be 02 00 00 00       	mov    $0x2,%esi
  4086ed:	e9 f1 fc ff ff       	jmp    4083e3 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x593>
	  if (__value < __b4) return __n + 3;
  4086f2:	be 04 00 00 00       	mov    $0x4,%esi
  4086f7:	e9 28 f9 ff ff       	jmp    408024 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
	  if (__value < __b3) return __n + 2;
  4086fc:	be 03 00 00 00       	mov    $0x3,%esi
  408701:	89 d9                	mov    %ebx,%ecx
  408703:	e9 1c f9 ff ff       	jmp    408024 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x1d4>
	  std::__throw_logic_error(__N("basic_string::"
  408708:	bf 78 91 40 00       	mov    $0x409178,%edi
  40870d:	e8 5e 9a ff ff       	call   402170 <_ZSt19__throw_logic_errorPKc@plt>
  408712:	bf 78 91 40 00       	mov    $0x409178,%edi
  408717:	e8 54 9a ff ff       	call   402170 <_ZSt19__throw_logic_errorPKc@plt>
  40871c:	4c 89 f7             	mov    %r14,%rdi
  40871f:	e9 8d fd ff ff       	jmp    4084b1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x661>
  408724:	48 89 ef             	mov    %rbp,%rdi
  408727:	e9 45 fd ff ff       	jmp    408471 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_+0x621>
  40872c:	49 89 c4             	mov    %rax,%r12
  40872f:	e9 7d 9e ff ff       	jmp    4025b1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x18>
  408734:	49 89 c4             	mov    %rax,%r12
  408737:	e9 5d 9e ff ff       	jmp    402599 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold>
  40873c:	48 89 c5             	mov    %rax,%rbp
  40873f:	e9 8d 9e ff ff       	jmp    4025d1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x38>
  408744:	48 89 c5             	mov    %rax,%rbp
  408747:	e9 85 9e ff ff       	jmp    4025d1 <_Z13int_to_stringiiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_.cold+0x38>
  40874c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000408750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
  408750:	41 55                	push   %r13
  408752:	41 54                	push   %r12
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
  408754:	4c 8d 67 10          	lea    0x10(%rdi),%r12
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
  408758:	55                   	push   %rbp
  408759:	53                   	push   %rbx
  40875a:	48 83 ec 18          	sub    $0x18,%rsp
	: allocator_type(__a), _M_p(__dat) { }
  40875e:	4c 89 27             	mov    %r12,(%rdi)
	const _CharT* __end = __s ? __s + traits_type::length(__s)
  408761:	48 85 f6             	test   %rsi,%rsi
  408764:	0f 84 8c 00 00 00    	je     4087f6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0xa6>
  40876a:	48 89 fb             	mov    %rdi,%rbx
	return __builtin_strlen(__s);
  40876d:	48 89 f7             	mov    %rsi,%rdi
  408770:	48 89 f5             	mov    %rsi,%rbp
  408773:	e8 98 99 ff ff       	call   402110 <strlen@plt>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  408778:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40877d:	49 89 c5             	mov    %rax,%r13
	if (__dnew > size_type(_S_local_capacity))
  408780:	48 83 f8 0f          	cmp    $0xf,%rax
  408784:	77 3a                	ja     4087c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x70>
	if (__n == 1)
  408786:	48 83 f8 01          	cmp    $0x1,%rax
  40878a:	75 24                	jne    4087b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x60>
      { __c1 = __c2; }
  40878c:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
  408790:	88 53 10             	mov    %dl,0x10(%rbx)
      { _M_string_length = __length; }
  408793:	48 89 43 08          	mov    %rax,0x8(%rbx)
  408797:	41 c6 04 04 00       	movb   $0x0,(%r12,%rax,1)
      }
  40879c:	48 83 c4 18          	add    $0x18,%rsp
  4087a0:	5b                   	pop    %rbx
  4087a1:	5d                   	pop    %rbp
  4087a2:	41 5c                	pop    %r12
  4087a4:	41 5d                	pop    %r13
  4087a6:	c3                   	ret    
  4087a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4087ae:	00 00 
	if (__n == 0)
  4087b0:	48 85 c0             	test   %rax,%rax
  4087b3:	74 de                	je     408793 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x43>
  4087b5:	eb 27                	jmp    4087de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x8e>
  4087b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4087be:	00 00 
	    _M_data(_M_create(__dnew, size_type(0)));
  4087c0:	31 d2                	xor    %edx,%edx
  4087c2:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
  4087c7:	48 89 df             	mov    %rbx,%rdi
  4087ca:	e8 c1 9c ff ff       	call   402490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
  4087cf:	48 89 03             	mov    %rax,(%rbx)
  4087d2:	49 89 c4             	mov    %rax,%r12
      { _M_allocated_capacity = __capacity; }
  4087d5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4087da:	48 89 43 10          	mov    %rax,0x10(%rbx)
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
  4087de:	4c 89 e7             	mov    %r12,%rdi
  4087e1:	4c 89 ea             	mov    %r13,%rdx
  4087e4:	48 89 ee             	mov    %rbp,%rsi
  4087e7:	e8 e4 99 ff ff       	call   4021d0 <memcpy@plt>
	_M_set_length(__dnew);
  4087ec:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
      { return _M_dataplus._M_p; }
  4087f1:	4c 8b 23             	mov    (%rbx),%r12
  4087f4:	eb 9d                	jmp    408793 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x43>
	  std::__throw_logic_error(__N("basic_string::"
  4087f6:	bf 78 91 40 00       	mov    $0x409178,%edi
  4087fb:	e8 70 99 ff ff       	call   402170 <_ZSt19__throw_logic_errorPKc@plt>

0000000000408800 <_ZN2sf4TextD1Ev>:
{
////////////////////////////////////////////////////////////
/// \brief Graphical text that can be drawn to a render target
///
////////////////////////////////////////////////////////////
class SFML_GRAPHICS_API Text : public Drawable, public Transformable
  408800:	b8 50 bd 40 00       	mov    $0x40bd50,%eax
  408805:	53                   	push   %rbx
  408806:	48 89 fb             	mov    %rdi,%rbx
{
////////////////////////////////////////////////////////////
/// \brief Define a set of one or more 2D primitives
///
////////////////////////////////////////////////////////////
class SFML_GRAPHICS_API VertexArray : public Drawable
  408809:	48 c7 87 28 01 00 00 	movq   $0x40bd98,0x128(%rdi)
  408810:	98 bd 40 00 
  408814:	66 48 0f 6e c0       	movq   %rax,%xmm0
  408819:	0f 16 05 b0 0e 00 00 	movhps 0xeb0(%rip),%xmm0        # 4096d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  408820:	0f 11 07             	movups %xmm0,(%rdi)
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  408823:	48 8b bf 30 01 00 00 	mov    0x130(%rdi),%rdi
	if (__p)
  40882a:	48 85 ff             	test   %rdi,%rdi
  40882d:	74 0f                	je     40883e <_ZN2sf4TextD1Ev+0x3e>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  40882f:	48 8b b3 40 01 00 00 	mov    0x140(%rbx),%rsi
  408836:	48 29 fe             	sub    %rdi,%rsi
  408839:	e8 e2 99 ff ff       	call   402220 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  40883e:	48 8b bb 08 01 00 00 	mov    0x108(%rbx),%rdi
  408845:	48 c7 83 00 01 00 00 	movq   $0x40bd98,0x100(%rbx)
  40884c:	98 bd 40 00 
	if (__p)
  408850:	48 85 ff             	test   %rdi,%rdi
  408853:	74 0f                	je     408864 <_ZN2sf4TextD1Ev+0x64>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  408855:	48 8b b3 18 01 00 00 	mov    0x118(%rbx),%rsi
  40885c:	48 29 fe             	sub    %rdi,%rsi
  40885f:	e8 bc 99 ff ff       	call   402220 <_ZdlPvm@plt>
  408864:	48 8b bb b8 00 00 00 	mov    0xb8(%rbx),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  40886b:	48 8d 83 c8 00 00 00 	lea    0xc8(%rbx),%rax
	if (!_M_is_local())
  408872:	48 39 c7             	cmp    %rax,%rdi
  408875:	74 14                	je     40888b <_ZN2sf4TextD1Ev+0x8b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  408877:	48 8b 83 c8 00 00 00 	mov    0xc8(%rbx),%rax
  40887e:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  408885:	00 
  408886:	e8 95 99 ff ff       	call   402220 <_ZdlPvm@plt>
  40888b:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  40888f:	5b                   	pop    %rbx
  408890:	e9 8b 98 ff ff       	jmp    402120 <_ZN2sf13TransformableD2Ev@plt>
  408895:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  40889c:	00 00 00 00 

00000000004088a0 <_ZThn8_N2sf4TextD1Ev>:
  4088a0:	b8 50 bd 40 00       	mov    $0x40bd50,%eax
  4088a5:	55                   	push   %rbp
  4088a6:	48 89 fd             	mov    %rdi,%rbp
  4088a9:	48 c7 87 20 01 00 00 	movq   $0x40bd98,0x120(%rdi)
  4088b0:	98 bd 40 00 
  4088b4:	66 48 0f 6e c0       	movq   %rax,%xmm0
  4088b9:	0f 16 05 10 0e 00 00 	movhps 0xe10(%rip),%xmm0        # 4096d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  4088c0:	0f 11 47 f8          	movups %xmm0,-0x8(%rdi)
  4088c4:	48 8b bf 28 01 00 00 	mov    0x128(%rdi),%rdi
  4088cb:	48 85 ff             	test   %rdi,%rdi
  4088ce:	74 0f                	je     4088df <_ZThn8_N2sf4TextD1Ev+0x3f>
  4088d0:	48 8b b5 38 01 00 00 	mov    0x138(%rbp),%rsi
  4088d7:	48 29 fe             	sub    %rdi,%rsi
  4088da:	e8 41 99 ff ff       	call   402220 <_ZdlPvm@plt>
  4088df:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
  4088e6:	48 c7 85 f8 00 00 00 	movq   $0x40bd98,0xf8(%rbp)
  4088ed:	98 bd 40 00 
  4088f1:	48 85 ff             	test   %rdi,%rdi
  4088f4:	74 0f                	je     408905 <_ZThn8_N2sf4TextD1Ev+0x65>
  4088f6:	48 8b b5 10 01 00 00 	mov    0x110(%rbp),%rsi
  4088fd:	48 29 fe             	sub    %rdi,%rsi
  408900:	e8 1b 99 ff ff       	call   402220 <_ZdlPvm@plt>
  408905:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
  40890c:	48 8d 85 c0 00 00 00 	lea    0xc0(%rbp),%rax
  408913:	48 39 c7             	cmp    %rax,%rdi
  408916:	74 14                	je     40892c <_ZThn8_N2sf4TextD1Ev+0x8c>
  408918:	48 8b 85 c0 00 00 00 	mov    0xc0(%rbp),%rax
  40891f:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  408926:	00 
  408927:	e8 f4 98 ff ff       	call   402220 <_ZdlPvm@plt>
  40892c:	48 89 ef             	mov    %rbp,%rdi
  40892f:	5d                   	pop    %rbp
  408930:	e9 eb 97 ff ff       	jmp    402120 <_ZN2sf13TransformableD2Ev@plt>
  408935:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40893c:	00 00 00 
  40893f:	90                   	nop

0000000000408940 <_ZN2sf4TextD0Ev>:
  408940:	b8 50 bd 40 00       	mov    $0x40bd50,%eax
  408945:	55                   	push   %rbp
  408946:	48 89 fd             	mov    %rdi,%rbp
  408949:	48 c7 87 28 01 00 00 	movq   $0x40bd98,0x128(%rdi)
  408950:	98 bd 40 00 
  408954:	66 48 0f 6e c0       	movq   %rax,%xmm0
  408959:	0f 16 05 70 0d 00 00 	movhps 0xd70(%rip),%xmm0        # 4096d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  408960:	0f 11 07             	movups %xmm0,(%rdi)
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  408963:	48 8b bf 30 01 00 00 	mov    0x130(%rdi),%rdi
	if (__p)
  40896a:	48 85 ff             	test   %rdi,%rdi
  40896d:	74 0f                	je     40897e <_ZN2sf4TextD0Ev+0x3e>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  40896f:	48 8b b5 40 01 00 00 	mov    0x140(%rbp),%rsi
  408976:	48 29 fe             	sub    %rdi,%rsi
  408979:	e8 a2 98 ff ff       	call   402220 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  40897e:	48 8b bd 08 01 00 00 	mov    0x108(%rbp),%rdi
  408985:	48 c7 85 00 01 00 00 	movq   $0x40bd98,0x100(%rbp)
  40898c:	98 bd 40 00 
	if (__p)
  408990:	48 85 ff             	test   %rdi,%rdi
  408993:	74 0f                	je     4089a4 <_ZN2sf4TextD0Ev+0x64>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
  408995:	48 8b b5 18 01 00 00 	mov    0x118(%rbp),%rsi
  40899c:	48 29 fe             	sub    %rdi,%rsi
  40899f:	e8 7c 98 ff ff       	call   402220 <_ZdlPvm@plt>
      { return _M_dataplus._M_p; }
  4089a4:	48 8b bd b8 00 00 00 	mov    0xb8(%rbp),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
  4089ab:	48 8d 85 c8 00 00 00 	lea    0xc8(%rbp),%rax
	if (!_M_is_local())
  4089b2:	48 39 c7             	cmp    %rax,%rdi
  4089b5:	74 14                	je     4089cb <_ZN2sf4TextD0Ev+0x8b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  4089b7:	48 8b 85 c8 00 00 00 	mov    0xc8(%rbp),%rax
  4089be:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  4089c5:	00 
  4089c6:	e8 55 98 ff ff       	call   402220 <_ZdlPvm@plt>
  4089cb:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
  4089cf:	e8 4c 97 ff ff       	call   402120 <_ZN2sf13TransformableD2Ev@plt>
  4089d4:	48 89 ef             	mov    %rbp,%rdi
  4089d7:	be 70 01 00 00       	mov    $0x170,%esi
  4089dc:	5d                   	pop    %rbp
  4089dd:	e9 3e 98 ff ff       	jmp    402220 <_ZdlPvm@plt>
  4089e2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4089e9:	00 00 00 00 
  4089ed:	0f 1f 00             	nopl   (%rax)

00000000004089f0 <_ZThn8_N2sf4TextD0Ev>:
  4089f0:	41 54                	push   %r12
  4089f2:	b8 50 bd 40 00       	mov    $0x40bd50,%eax
  4089f7:	4c 8d 67 f8          	lea    -0x8(%rdi),%r12
  4089fb:	55                   	push   %rbp
  4089fc:	66 48 0f 6e c0       	movq   %rax,%xmm0
  408a01:	48 89 fd             	mov    %rdi,%rbp
  408a04:	48 83 ec 08          	sub    $0x8,%rsp
  408a08:	48 c7 87 20 01 00 00 	movq   $0x40bd98,0x120(%rdi)
  408a0f:	98 bd 40 00 
  408a13:	0f 16 05 b6 0c 00 00 	movhps 0xcb6(%rip),%xmm0        # 4096d0 <_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits+0xd0>
  408a1a:	0f 11 47 f8          	movups %xmm0,-0x8(%rdi)
  408a1e:	48 8b bf 28 01 00 00 	mov    0x128(%rdi),%rdi
  408a25:	48 85 ff             	test   %rdi,%rdi
  408a28:	74 0f                	je     408a39 <_ZThn8_N2sf4TextD0Ev+0x49>
  408a2a:	48 8b b5 38 01 00 00 	mov    0x138(%rbp),%rsi
  408a31:	48 29 fe             	sub    %rdi,%rsi
  408a34:	e8 e7 97 ff ff       	call   402220 <_ZdlPvm@plt>
  408a39:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
  408a40:	48 c7 85 f8 00 00 00 	movq   $0x40bd98,0xf8(%rbp)
  408a47:	98 bd 40 00 
  408a4b:	48 85 ff             	test   %rdi,%rdi
  408a4e:	74 0f                	je     408a5f <_ZThn8_N2sf4TextD0Ev+0x6f>
  408a50:	48 8b b5 10 01 00 00 	mov    0x110(%rbp),%rsi
  408a57:	48 29 fe             	sub    %rdi,%rsi
  408a5a:	e8 c1 97 ff ff       	call   402220 <_ZdlPvm@plt>
  408a5f:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
  408a66:	48 8d 85 c0 00 00 00 	lea    0xc0(%rbp),%rax
  408a6d:	48 39 c7             	cmp    %rax,%rdi
  408a70:	74 14                	je     408a86 <_ZThn8_N2sf4TextD0Ev+0x96>
  408a72:	48 8b 85 c0 00 00 00 	mov    0xc0(%rbp),%rax
  408a79:	48 8d 34 85 04 00 00 	lea    0x4(,%rax,4),%rsi
  408a80:	00 
  408a81:	e8 9a 97 ff ff       	call   402220 <_ZdlPvm@plt>
  408a86:	48 89 ef             	mov    %rbp,%rdi
  408a89:	e8 92 96 ff ff       	call   402120 <_ZN2sf13TransformableD2Ev@plt>
  408a8e:	48 83 c4 08          	add    $0x8,%rsp
  408a92:	4c 89 e7             	mov    %r12,%rdi
  408a95:	be 70 01 00 00       	mov    $0x170,%esi
  408a9a:	5d                   	pop    %rbp
  408a9b:	41 5c                	pop    %r12
  408a9d:	e9 7e 97 ff ff       	jmp    402220 <_ZdlPvm@plt>

Desmontagem da secção .fini:

0000000000408aa4 <_fini>:
  408aa4:	f3 0f 1e fa          	endbr64 
  408aa8:	48 83 ec 08          	sub    $0x8,%rsp
  408aac:	48 83 c4 08          	add    $0x8,%rsp
  408ab0:	c3                   	ret    
